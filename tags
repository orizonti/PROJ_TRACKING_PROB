!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABI_ID	build/ImageProcProject_autogen/moc_predefs.h	175;"	d
AIMINGBLOCKWINDOW_H	gui_sources/widget_aiming_control.h	2;"	d
AIMINGCLASS_H	AIMING_MODULES/aiming_class.h	2;"	d
AIM_RECT	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    cv::Rect AIM_RECT = cv::Rect(30,30,96,96);$/;"	m	class:AimImageImitatorClass
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	535;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	538;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	541;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	544;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	547;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	551;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	553;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	555;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	559;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	562;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	565;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	570;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	573;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	576;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	581;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	584;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	587;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	590;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	593;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	596;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	599;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	602;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	605;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	608;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	611;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	616;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	619;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	622;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	625;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	628;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	631;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	636;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	639;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	642;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	645;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	648;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	652;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	520;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	523;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	526;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	529;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	532;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	536;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	538;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	540;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	544;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	547;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	550;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	555;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	558;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	561;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	566;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	569;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	572;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	575;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	578;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	581;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	584;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	587;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	590;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	593;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	596;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	601;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	604;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	607;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	610;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	613;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	616;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	621;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	624;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	627;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	630;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	633;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	637;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	535;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	538;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	541;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	544;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	547;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	551;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	553;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	555;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	559;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	562;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	565;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	570;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	573;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	576;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	581;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	584;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	587;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	590;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	593;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	596;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	599;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	602;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	605;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	608;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	611;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	616;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	619;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	622;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	625;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	628;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	631;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	636;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	639;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	642;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	645;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	648;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	652;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	520;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	523;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	526;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	529;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	532;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	536;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	538;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	540;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	544;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	547;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	550;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	555;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	558;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	561;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	566;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	569;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	572;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	575;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	578;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	581;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	584;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	587;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	590;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	593;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	596;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	601;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	604;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	607;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	610;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	613;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	616;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	621;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	624;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	627;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	630;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	633;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	637;"	d	file:
AccumulateDataFilter	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^AccumulateDataFilter::AccumulateDataFilter() { }$/;"	f	class:AccumulateDataFilter
AccumulateDataFilter	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^class AccumulateDataFilter : public PassCoordClass<float>$/;"	c
AddLabel	gui_sources/widget_processing_image_generic.cpp	/^void WidgetMiniLabelsGroup::AddLabel(LabelImage* label) $/;"	f	class:WidgetMiniLabelsGroup
AddMiniLabel	gui_sources/widget_processing_image_generic.cpp	/^void WidgetProcessingImage::AddMiniLabel()$/;"	f	class:WidgetProcessingImage
AddProxyWidgetToDisplay	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::AddProxyWidgetToDisplay(QWidget* widget)$/;"	f	class:WidgetMainWindow
AddWidget	gui_sources/widget_container_group.cpp	/^void WidgetContainerGroup::AddWidget(WidgetAdjustable& Widget)$/;"	f	class:WidgetContainerGroup
AddWidget	gui_sources/widget_table_group.cpp	/^void WidgetTableGroup::AddWidget(WidgetAdjustable* Widget)$/;"	f	class:WidgetTableGroup
AddWidgetToDisplay	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::AddWidgetToDisplay(AdjustableLabel* widget)$/;"	f	class:WidgetMainWindow
AddWidgetToDisplay	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::AddWidgetToDisplay(WidgetAdjustable* widget)$/;"	f	class:WidgetMainWindow
AdjustWindow	gui_sources/widget_adjustable.cpp	/^void AdjustableLabel::AdjustWindow()$/;"	f	class:AdjustableLabel
AdjustWindow	gui_sources/widget_adjustable.cpp	/^void WidgetAdjustable::AdjustWindow()$/;"	f	class:WidgetAdjustable
AdjustableLabel	gui_sources/widget_adjustable.cpp	/^AdjustableLabel::AdjustableLabel(QWidget* parent) : QLabel(parent)$/;"	f	class:AdjustableLabel
AdjustableLabel	gui_sources/widget_adjustable.h	/^class AdjustableLabel : public QLabel$/;"	c
AimControlInterface	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^class AimControlInterface : public QObject$/;"	c
AimImageImitatorClass	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^AimImageImitatorClass::AimImageImitatorClass(QObject* parent) : ImageSourceInterface(parent)$/;"	f	class:AimImageImitatorClass
AimImageImitatorClass	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^class AimImageImitatorClass : public ImageSourceInterface$/;"	c
AimSpeed	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    int AimSpeed = 1;$/;"	m	class:DynamicAimControl
AimingBlock	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
AimingClass	AIMING_MODULES/aiming_class.cpp	/^AimingClass::AimingClass()$/;"	f	class:AimingClass
AimingClass	AIMING_MODULES/aiming_class.h	/^class AimingClass : public PassCoordClass<float>$/;"	c
AimingDirect	COMMON/state_block_enum.h	/^enum TypeEnumAiming { AimingLoop = 0, AimingLoop1 = 1, AimingLoop2 = 2 , AimingLoop3 = 3, AimingDirect = 4};$/;"	e	enum:TypeEnumAiming
AimingFastParam	AIMING_MODULES/aiming_class.h	/^  PIDParamStruct AimingFastParam;$/;"	m	class:AimingClass
AimingLoop	COMMON/state_block_enum.h	/^enum TypeEnumAiming { AimingLoop = 0, AimingLoop1 = 1, AimingLoop2 = 2 , AimingLoop3 = 3, AimingDirect = 4};$/;"	e	enum:TypeEnumAiming
AimingLoop1	COMMON/state_block_enum.h	/^enum TypeEnumAiming { AimingLoop = 0, AimingLoop1 = 1, AimingLoop2 = 2 , AimingLoop3 = 3, AimingDirect = 4};$/;"	e	enum:TypeEnumAiming
AimingLoop2	COMMON/state_block_enum.h	/^enum TypeEnumAiming { AimingLoop = 0, AimingLoop1 = 1, AimingLoop2 = 2 , AimingLoop3 = 3, AimingDirect = 4};$/;"	e	enum:TypeEnumAiming
AimingLoop3	COMMON/state_block_enum.h	/^enum TypeEnumAiming { AimingLoop = 0, AimingLoop1 = 1, AimingLoop2 = 2 , AimingLoop3 = 3, AimingDirect = 4};$/;"	e	enum:TypeEnumAiming
AimingOptimizator	AIMING_MODULES/aiming_class.h	/^  AimingParamOptimizator AimingOptimizator;$/;"	m	class:AimingClass
AimingParamOptimizator	AIMING_MODULES/aiming_class.cpp	/^AimingParamOptimizator::AimingParamOptimizator()$/;"	f	class:AimingParamOptimizator
AimingParamOptimizator	AIMING_MODULES/aiming_class.cpp	/^AimingParamOptimizator::AimingParamOptimizator(std::vector<PIDParamStruct> ParamTable)$/;"	f	class:AimingParamOptimizator
AimingParamOptimizator	AIMING_MODULES/aiming_class.h	/^class AimingParamOptimizator: public PassCoordClass<float>$/;"	c
AimingSlowParam	AIMING_MODULES/aiming_class.h	/^  PIDParamStruct AimingSlowParam;$/;"	m	class:AimingClass
AimingState	AIMING_MODULES/aiming_class.h	/^  TypeEnumAiming AimingState = AimingDirect;$/;"	m	class:AimingClass
AimingStatistic	AIMING_MODULES/aiming_class.h	/^  StatisticNode<float> AimingStatistic;$/;"	m	class:AimingClass
AimingWatcherClass	AIMING_MODULES/aiming_class.h	/^class AimingWatcherClass: public QObject$/;"	c
AimingWorkSlowParam	AIMING_MODULES/aiming_class.h	/^  PIDParamStruct AimingWorkSlowParam;$/;"	m	class:AimingClass
Amplitude	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	QPair<float,float> Amplitude = QPair<float,float>(60*60,60*60);$/;"	m	class:SinusGeneratorClass
Amplitude	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^    uint16_t  Amplitude   = 1;$/;"	m	struct:CommandCalibration
Amplitude	UTILITES/thread_operation_nodes.h	/^  double Amplitude = 2;$/;"	m	class:ValueRandomization
AmplitudeNoize	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^                   double AmplitudeNoize = 3;$/;"	m	class:SinusGeneratorClass
AmplitudeNoize	UTILITES/thread_operation_nodes.h	/^  float AmplitudeNoize = 1; $/;"	m	class:CoordPassRandomizer
AnchorIndex	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiCenter};$/;"	g	class:QCPItemBracket
AnchorIndex	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	g	class:QCPItemPixmap
AnchorIndex	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	g	class:QCPItemRect
AnchorIndex	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeft, aiTop, aiTopRight, aiRight, aiBottomRight, aiBottom, aiBottomLeft, aiLeft};$/;"	g	class:QCPItemText
AnchorIndex	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeftRim, aiTop, aiTopRightRim, aiRight, aiBottomRightRim, aiBottom, aiBottomLeftRim, aiLeft, aiCenter};$/;"	g	class:QCPItemEllipse
AnchorMode	gui_sources/qcustomplot.h	/^  enum AnchorMode { amRectangular    \/\/\/< $/;"	g	class:QCPLabelPainterPrivate
AnchorReferenceType	gui_sources/qcustomplot.h	/^  enum AnchorReferenceType { artNormal    \/\/\/< $/;"	g	class:QCPLabelPainterPrivate
AnchorSide	gui_sources/qcustomplot.h	/^  enum AnchorSide { asLeft      \/\/\/< $/;"	g	class:QCPLabelPainterPrivate
AngleReference	gui_sources/qcustomplot.h	/^  enum AngleReference { arAbsolute    \/\/\/< The axis tilt is given in absolute degrees. The zero is to the right and positive angles are measured counter-clockwise.$/;"	g	class:QCPPolarAxisRadial
AntialiasedElement	gui_sources/qcustomplot.h	/^enum AntialiasedElement { aeAxes           = 0x0001 \/\/\/< <tt>0x0001<\/tt> Axis base line and tick marks$/;"	g	namespace:QCP
AppendCallback	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_generic.h	/^    void AppendCallback(const MessageCall& Call)$/;"	f	class:MessageDispatcher
AppendColor	gui_sources/widget_output_image_display.cpp	/^void WidgetOutputImageDisplay::AppendColor(QColor color) $/;"	f	class:WidgetOutputImageDisplay
AppendData	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^void engine_ring_buffer_dense<H,S_M,N_M>::AppendData(uint8_t* Data, uint8_t Size)$/;"	f	class:engine_ring_buffer_dense
AppendData	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^void RingBufferGeneric<H,M_S,M_N,I_T>::AppendData(uint8_t* Data, uint16_t Size)$/;"	f	class:RingBufferGeneric
AppendInputData	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateOperationContainer::AppendInputData(pair<double,double> test_coord)$/;"	f	class:RotateOperationContainer
AppendOperation	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateOperationContainer::AppendOperation(pair<RotateAxis,double> Operation)$/;"	f	class:RotateOperationContainer
AppendPIDParam	AIMING_MODULES/aiming_class.cpp	/^void AimingParamOptimizator::AppendPIDParam(PIDParamStruct PIDParam)$/;"	f	class:AimingParamOptimizator
AppendRotateOperation	AIMING_MODULES/rotate_vector_class.h	/^void RotateVectorClass<T>::AppendRotateOperation(std::pair<RotateAxisenum, float> RotateOperation)$/;"	f	class:RotateVectorClass
AppendSettings	UTILITES/register_settings.cpp	/^void SettingsRegister::AppendSettings(QString key, QString setting)                { settings.emplace(key,setting); }$/;"	f	class:SettingsRegister
AppendSettings	UTILITES/register_settings.cpp	/^void SettingsRegister::AppendSettings(QString key, float setting)                  { settings_values.emplace(key,setting); }$/;"	f	class:SettingsRegister
AppendSettings	UTILITES/register_settings.cpp	/^void SettingsRegister::AppendSettings(QString key, std::pair<float,float> setting) { settings_pairs.emplace(key,setting); }$/;"	f	class:SettingsRegister
ArrowLeft	gui_sources/widget_processing_image_generic.h	/^QLineF ArrowLeft;$/;"	m	class:WidgetProcessingImage
ArrowRight	gui_sources/widget_processing_image_generic.h	/^QLineF ArrowRight;$/;"	m	class:WidgetProcessingImage
ArvStreamCallbackData	CAMERA_INTERFACE/camera_interface_class.h	/^struct ArvStreamCallbackData$/;"	s
AvarageOutputFirst	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	QPair<float,float> AvarageOutputFirst;$/;"	m	class:AccumulateDataFilter
AvarageOutputSecond	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	QPair<float,float> AvarageOutputSecond;$/;"	m	class:AccumulateDataFilter
Axis	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    int Axis = 0;$/;"	m	class:ManualAimControl
AxisType	gui_sources/qcustomplot.h	/^  enum AxisType { atLeft    = 0x01  \/\/\/< <tt>0x01<\/tt> Axis is vertical and on the left side of the axis rect$/;"	g	class:QCPAxis
AxisXDirection	UTILITES/thread_operation_nodes.h	/^  int AxisXDirection = 1;$/;"	m	class:CoordInversionAxisNode
AxisYDirection	UTILITES/thread_operation_nodes.h	/^  int AxisYDirection = 1;$/;"	m	class:CoordInversionAxisNode
BaseFrequency	CAMERA_INTERFACE/camera_interface_class.h	/^    int BaseFrequency = 200;$/;"	m	class:CameraInterfaceAravis
BaseObject	ROTATE_OPTIMIZATION/rotation_find_executor.h	/^    std::shared_ptr<PassCoordClass<float>> BaseObject = nullptr;$/;"	m	class:RotationFindProcessClass
BestPIDParam	AIMING_MODULES/aiming_class.h	/^  PIDParamStruct BestPIDParam;$/;"	m	class:AimingParamOptimizator
BestPIDParamNumber	AIMING_MODULES/aiming_class.h	/^  int BestPIDParamNumber = 0;$/;"	m	class:AimingParamOptimizator
BestStatNumber	UTILITES/engine_statistics.h	/^    int BestStatNumber = 1;$/;"	m	class:StatisticGroup
BestStatNumberValue	UTILITES/engine_statistics.h	/^    int BestStatNumberValue = 0;$/;"	m	class:StatisticGroup
BigSize	gui_sources/widget_main_window.h	/^enum InterfaceSizes {SmallSize = 0, BigSize = 1};$/;"	e	enum:InterfaceSizes
BlockCounterClass	UTILITES/debug_output_filter.h	/^  BlockCounterClass() {};$/;"	f	class:BlockCounterClass
BlockCounterClass	UTILITES/debug_output_filter.h	/^  BlockCounterClass(const BlockCounterClass& Node) {this->Counter = Node.Counter; this->Peak = Node.Peak;};$/;"	f	class:BlockCounterClass
BlockCounterClass	UTILITES/debug_output_filter.h	/^  BlockCounterClass(int Peak, bool isInverse = false) { this->Peak = Peak; this->FlagInverse = isInverse;}$/;"	f	class:BlockCounterClass
BlockCounterClass	UTILITES/debug_output_filter.h	/^class BlockCounterClass$/;"	c
BlockOutput	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::BlockOutput(bool channelx, bool channely)$/;"	f	class:AimingClass
BlockOutput1	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	bool BlockOutput1 = false;$/;"	m	class:SinusGeneratorClass
BlockOutput2	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	bool BlockOutput2 = false;$/;"	m	class:SinusGeneratorClass
BlockTypesInfo	COMMON/type_block_enum.h	/^class BlockTypesInfo$/;"	c
BlotchObject	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    cv::Mat BlotchObject;$/;"	m	class:AimImageImitatorClass
BracketStyle	gui_sources/qcustomplot.h	/^  enum BracketStyle { bsSquare  \/\/\/< A brace with angled edges$/;"	g	class:QCPItemBracket
BracketStyle	gui_sources/qcustomplot.h	/^  enum BracketStyle { bsSquareBracket \/\/\/< A square bracket is drawn.$/;"	g	class:QCPSelectionDecoratorBracket
BreedMultiplier	UTILITES/thread_operation_nodes.h	/^  double BreedMultiplier = 2;$/;"	m	class:ValueBreeder
Brushes	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^	std::vector<QBrush> Brushes;$/;"	m	class:PlotGraphicsInterface
BufferChunkSize	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	uint8_t  BufferChunkSize = 100;$/;"	m	class:IteratorMode::MessageIteratorGenericBase
BufferSize	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^	std::size_t  BufferSize = S_M*N_M;$/;"	m	class:engine_ring_buffer_dense
BufferSize	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^	std::size_t  BufferSize = M_S*M_N;$/;"	m	class:RingBufferGeneric
BufferToRead	CAMERA_INTERFACE/camera_interface_class.h	/^    std::vector<uint8_t*>::iterator BufferToRead;$/;"	m	class:CameraInterfaceAravis
BufferToRead	CAMERA_INTERFACE/interface_camera_hik.h	/^    std::vector<uint8_t*>::iterator BufferToRead;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
BufferToWrite	CAMERA_INTERFACE/camera_interface_class.h	/^    std::vector<uint8_t*>::iterator BufferToWrite;$/;"	m	class:CameraInterfaceAravis
BufferToWrite	CAMERA_INTERFACE/interface_camera_hik.cpp	/^std::vector<uint8_t*>::iterator CameraInterfaceHIK::CameraImageStorage::BufferToWrite;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage	file:
BufferToWrite	CAMERA_INTERFACE/interface_camera_hik.h	/^    static std::vector<uint8_t*>::iterator BufferToWrite;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
Buffers	CAMERA_INTERFACE/camera_interface_class.h	/^    std::vector<uint8_t*> Buffers;$/;"	m	class:CameraInterfaceAravis
Buffers	CAMERA_INTERFACE/interface_camera_hik.cpp	/^std::vector<uint8_t*> CameraInterfaceHIK::CameraImageStorage::Buffers;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage	file:
Buffers	CAMERA_INTERFACE/interface_camera_hik.h	/^    static std::vector<uint8_t*> Buffers;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
BuffersArv	CAMERA_INTERFACE/camera_interface_class.h	/^    std::vector<ArvBuffer*> BuffersArv;$/;"	m	class:CameraInterfaceAravis
BytesTo	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	int  BytesTo(const MessageIteratorGenericBase<H>& It) { return It.PtrMessageBegin - PtrMessageBegin;}; $/;"	f	class:IteratorMode::MessageIteratorGenericBase
CALC_BY_LUMEN	CV_IMAGE_PROCESSING/optimization_threshold.h	/^enum class PROCESS_METHOD { PARALLEL_BY_DISPERSION, CALC_BY_LUMEN, RUNAWAY_FROM_DISPERSION};$/;"	m	class:PROCESS_METHOD
CAMERA_WIDGET_H	gui_sources/widget_camera_control.h	2;"	d
CANConnectionEngine	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.cpp	/^CANConnectionEngine::CANConnectionEngine(QObject *parent) : ConnectionInterface(parent)$/;"	f	class:CANConnectionEngine
CANConnectionEngine	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^class CANConnectionEngine : public ConnectionInterface$/;"	c
CANDelayMeasure	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  CANDelayMeasure(QObject* parent = nullptr) : CANTestMessage(parent) {};$/;"	f	class:CANDelayMeasure
CANDelayMeasure	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^class CANDelayMeasure: public CANTestMessage$/;"	c
CANTestMessage	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  CANTestMessage(QObject* parent = nullptr) : QObject(parent) $/;"	f	class:CANTestMessage
CANTestMessage	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^class CANTestMessage: public QObject$/;"	c
CAN_ENGINE_INTERFACE_H	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	2;"	d
CMAKE_BINARY_DIR	Makefile	/^CMAKE_BINARY_DIR = \/home\/orangepi\/DEVELOPMENT\/PROJECTS\/CURRENT\/TRACKING_PROB_RTSP$/;"	m
CMAKE_COMMAND	Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	Makefile	/^CMAKE_SOURCE_DIR = \/home\/orangepi\/DEVELOPMENT\/PROJECTS\/CURRENT\/TRACKING_PROB_RTSP$/;"	m
CN	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^      CN     = (1 << 1),$/;"	e	enum:cv::tracking::TrackerKCF::MODE
COMMONHEADERS_H	include/CommonHeaders.h	2;"	d
COMMON_CAMERA_CONTROL_INTERFACE_H	CAMERA_INTERFACE/camera_control_interface.h	2;"	d
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	109;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	123;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	175;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	204;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	220;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	225;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	271;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	274;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	289;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	304;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	325;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	353;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	362;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	393;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	396;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	109;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	123;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	147;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	168;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	182;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	197;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	204;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	240;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	256;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	298;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	305;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	319;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	333;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	351;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	360;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	378;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	381;"	d	file:
COMPILER_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	109;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	123;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	175;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	204;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	220;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	225;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	271;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	274;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	289;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	304;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	325;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	353;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	362;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	393;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	396;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	109;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	123;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	147;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	168;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	182;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	197;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	204;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	240;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	256;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	298;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	305;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	319;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	333;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	351;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	360;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	378;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	381;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_VERSION	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	242;"	d	file:
COMPILER_VERSION	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_VERSION	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	242;"	d	file:
COMPILER_VERSION	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	372;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	302;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	365;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	372;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	302;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	365;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
COMPILER_VERSION_INTERNAL_STR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
COMPILER_VERSION_INTERNAL_STR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	236;"	d	file:
COMPILER_VERSION_INTERNAL_STR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
COMPILER_VERSION_INTERNAL_STR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	236;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	150;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	205;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	259;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	277;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	305;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	315;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	326;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	356;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	35;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	369;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	378;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	383;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	87;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	150;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	163;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	177;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	183;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	192;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	199;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	213;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	271;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	276;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	287;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	299;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	321;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	323;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	335;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	354;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	35;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	362;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	87;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	150;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	205;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	259;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	277;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	305;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	315;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	326;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	356;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	35;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	369;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	378;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	383;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	87;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	150;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	163;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	177;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	183;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	192;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	199;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	213;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	271;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	276;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	287;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	299;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	321;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	323;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	335;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	354;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	35;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	362;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	87;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	151;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	156;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	164;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	184;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	228;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	283;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	294;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	306;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	328;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	338;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	357;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	365;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	384;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	132;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	141;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	151;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	156;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	171;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	206;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	222;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	234;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	245;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	260;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	272;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	310;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	326;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	363;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	368;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	36;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	151;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	156;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	164;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	184;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	228;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	283;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	294;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	306;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	328;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	338;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	357;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	365;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	384;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	132;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	141;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	151;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	156;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	171;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	206;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	222;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	234;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	245;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	260;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	272;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	310;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	326;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	363;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	368;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	36;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	201;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	208;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	216;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	229;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	261;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	295;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	317;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	331;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	342;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	345;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	366;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	371;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	380;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	134;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	246;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	278;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	289;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	301;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	311;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	329;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	356;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	369;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	47;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	201;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	208;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	216;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	229;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	261;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	295;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	317;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	331;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	342;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	345;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	366;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	371;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	380;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	134;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	246;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	278;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	289;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	301;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	311;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	329;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	356;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	369;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	47;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	301;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	295;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	347;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	301;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	295;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	347;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
CONNECTION_INTERFACE_H	TRANSMISSION/TRANSMISSION_MODULES/connection_interface.h	2;"	d
CONTAINER_WIDGET_H	gui_sources/widget_container_group.h	2;"	d
CONTOUR_PROCESSING_H	CV_IMAGE_PROCESSING/contour_processing.h	2;"	d
COUNTER	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	uint16_t COUNTER = 0;$/;"	m	class:SinusGeneratorClass
CUSTOM	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^      CUSTOM = (1 << 2)$/;"	e	enum:cv::tracking::TrackerKCF::MODE
CV_AIM_IMIT_H	AIM_IMAGE_IMITATION/imitator_image_aim.h	2;"	d
CV_OVERRIDE	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^    virtual ~TrackerCSRT() CV_OVERRIDE;$/;"	m	class:cv::tracking::TrackerCSRT
CV_OVERRIDE	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^    virtual ~TrackerKCF() CV_OVERRIDE;$/;"	m	class:cv::tracking::TrackerKCF
CXX_STD	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	725;"	d	file:
CXX_STD	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	727;"	d	file:
CXX_STD	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	730;"	d	file:
CXX_STD	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	733;"	d	file:
CXX_STD	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	735;"	d	file:
CXX_STD	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	725;"	d	file:
CXX_STD	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	727;"	d	file:
CXX_STD	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	730;"	d	file:
CXX_STD	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	733;"	d	file:
CXX_STD	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	735;"	d	file:
C_VERSION	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	739;"	d	file:
C_VERSION	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	741;"	d	file:
C_VERSION	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	744;"	d	file:
C_VERSION	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	746;"	d	file:
C_VERSION	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	748;"	d	file:
C_VERSION	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	750;"	d	file:
C_VERSION	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	752;"	d	file:
C_VERSION	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	739;"	d	file:
C_VERSION	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	741;"	d	file:
C_VERSION	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	744;"	d	file:
C_VERSION	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	746;"	d	file:
C_VERSION	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	748;"	d	file:
C_VERSION	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	750;"	d	file:
C_VERSION	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	752;"	d	file:
CachedLabel	gui_sources/qcustomplot.h	/^  struct CachedLabel$/;"	s	class:QCPAxisPainterPrivate
CachedLabel	gui_sources/qcustomplot.h	/^  struct CachedLabel$/;"	s	class:QCPLabelPainterPrivate
CalcCentroid	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^bool ImageTrackerCentroid::CalcCentroid(cv::Mat& Image)$/;"	f	class:ImageTrackerCentroid
CalcCentroid	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^bool ImageTrackerCentroidGPU::CalcCentroid(cv::UMat& Image)$/;"	f	class:ImageTrackerCentroidGPU
CalcContoursStatistic	CV_IMAGE_PROCESSING/contour_processing.cpp	/^void ContoursProcessorClass::CalcContoursStatistic()$/;"	f	class:ContoursProcessorClass
CalcDispersion	UTILITES/engine_statistics.h	/^void StatisticCoord<T>::CalcDispersion()$/;"	f	class:StatisticCoord
CalcDispersion	UTILITES/engine_statistics.h	/^void StatisticValue<T>::CalcDispersion()$/;"	f	class:StatisticValue
CalcThreshold	CV_IMAGE_PROCESSING/image_processing_node.h	/^    virtual void CalcThreshold() {};$/;"	f	class:ModuleImageProcessing
CalcThreshold	CV_IMAGE_PROCESSING/optimization_threshold.cpp	/^void ThresholdAdjustionDispersion::CalcThreshold(const cv::Mat& Image)$/;"	f	class:ThresholdAdjustionDispersion
CalcThreshold	CV_IMAGE_PROCESSING/optimization_threshold.cpp	/^void ThresholdCalculationLumen::CalcThreshold(const cv::Mat& Image)$/;"	f	class:ThresholdCalculationLumen
CalcThreshold	CV_IMAGE_PROCESSING/optimization_threshold.cpp	/^void ThresholdFindingParallelDispersion::CalcThreshold(const cv::Mat& Image)$/;"	f	class:ThresholdFindingParallelDispersion
CalcThreshold	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^void ImageTrackerCentroid::CalcThreshold() $/;"	f	class:ImageTrackerCentroid
CalcTransformationScale	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^double RotateOperationContainer::CalcTransformationScale(vector<pair<double,double>> test_input, vector<pair<double,double>> test_output)$/;"	f	class:RotateOperationContainer
CalcVelocityToengine	AIMING_MODULES/pid_class.cpp	/^QPair<float,float> PIDClass::CalcVelocityToengine(QPair<float,float> CoordError)$/;"	f	class:PIDClass
CalcVirtualZComponent	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^double RotateOperationContainer::CalcVirtualZComponent(QPair<float,float> InputCoord)$/;"	f	class:RotateOperationContainer
CallList	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_generic.h	/^    std::vector<MessageCall> CallList;$/;"	m	class:MessageDispatcher
CalmanFilterBlock	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
Camera	CAMERA_INTERFACE/interface_camera_hik.h	/^    CameraInterfaceHIK* Camera = nullptr;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
CameraControlInterface	CAMERA_INTERFACE/camera_control_interface.h	/^class CameraControlInterface $/;"	c
CameraGetExposure	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraGetExposure()$/;"	f	class:CameraInterfaceHIK
CameraGetID	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraGetID()$/;"	f	class:CameraInterfaceHIK
CameraGetTriggerMode	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraGetTriggerMode()$/;"	f	class:CameraInterfaceHIK
CameraImageStorage	CAMERA_INTERFACE/interface_camera_hik.h	/^    explicit CameraImageStorage(CameraInterfaceHIK* CameraDevice) : Camera(CameraDevice) {InitStorage(); };$/;"	f	class:CameraInterfaceHIK::CameraImageStorage
CameraImageStorage	CAMERA_INTERFACE/interface_camera_hik.h	/^  class CameraImageStorage: public ImageSourceInterface$/;"	c	class:CameraInterfaceHIK
CameraInit	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraInit()$/;"	f	class:CameraInterfaceHIK
CameraInterface	CAMERA_INTERFACE/interface_camera_hik.cpp	/^CameraInterfaceHIK* CameraInterfaceHIK::CameraInterface;$/;"	m	class:CameraInterfaceHIK	file:
CameraInterface	CAMERA_INTERFACE/interface_camera_hik.h	/^  static CameraInterfaceHIK* CameraInterface;$/;"	m	class:CameraInterfaceHIK
CameraInterfaceAravis	CAMERA_INTERFACE/camera_interface_class.cpp	/^CameraInterfaceAravis::CameraInterfaceAravis(QObject* parent): ImageSourceInterface(parent) $/;"	f	class:CameraInterfaceAravis
CameraInterfaceAravis	CAMERA_INTERFACE/camera_interface_class.h	/^class CameraInterfaceAravis: public ImageSourceInterface, public CameraControlInterface$/;"	c
CameraInterfaceHIK	CAMERA_INTERFACE/interface_camera_hik.cpp	/^CameraInterfaceHIK::CameraInterfaceHIK()$/;"	f	class:CameraInterfaceHIK
CameraInterfaceHIK	CAMERA_INTERFACE/interface_camera_hik.h	/^class CameraInterfaceHIK : public ImageSourceInterface, public CameraControlInterface$/;"	c
CameraSetCameraID	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraSetCameraID(QString str)$/;"	f	class:CameraInterfaceHIK
CameraSetExposure	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraSetExposure(float Exposure)$/;"	f	class:CameraInterfaceHIK
CameraSetHeight	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraSetHeight(int Height)$/;"	f	class:CameraInterfaceHIK
CameraSetHorisontalReverse	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraSetHorisontalReverse(bool OnOff)$/;"	f	class:CameraInterfaceHIK
CameraSetOffset	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraSetOffset(int XOffset, int YOffset)$/;"	f	class:CameraInterfaceHIK
CameraSetSize	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraSetSize(int Width, int Height) $/;"	f	class:CameraInterfaceHIK
CameraSetTriggerMode	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraSetTriggerMode(int Mode)$/;"	f	class:CameraInterfaceHIK
CameraSetWidth	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraSetWidth(int Width)$/;"	f	class:CameraInterfaceHIK
CameragetImageSize	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameragetImageSize()$/;"	f	class:CameraInterfaceHIK
CamerasControlBlock	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
ChangeFont	gui_sources/widget_adjustable.cpp	/^void AdjustableLabel::ChangeFont(int FontSize)$/;"	f	class:AdjustableLabel
ChangeFont	gui_sources/widget_adjustable.cpp	/^void WidgetAdjustable::ChangeFont(int FontSize)$/;"	f	class:WidgetAdjustable
Channel	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    quint8  Channel = 0;$/;"	m	struct:ControlCommandLaser
Channel	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^    uint16_t  Channel     = 1;$/;"	m	struct:CommandCalibration
ChannelsCount	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^    int ChannelsCount = 1;$/;"	m	class:PlotGraphicsInterface
ChartStyle	gui_sources/qcustomplot.h	/^  enum ChartStyle { csOhlc         \/\/\/< Open-High-Low-Close bar representation$/;"	g	class:QCPFinancial
CheckCentroid	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^bool ImageTrackerCentroid::CheckCentroid() $/;"	f	class:ImageTrackerCentroid
CheckCoord	UTILITES/thread_operation_nodes.h	/^  void CheckCoord(const QPair<T,T>& Coord)$/;"	f	class:CoordDetector
CheckCoordMatch	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^bool AccumulateDataFilter::CheckCoordMatch(QPair<float,float> Coord,QPair<float,float> AimCoord)$/;"	f	class:AccumulateDataFilter
CheckCorrectROI	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^void AimImageImitatorClass::CheckCorrectROI(cv::Rect& ROI)$/;"	f	class:AimImageImitatorClass
CheckCorrectROI	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^void ModuleImageProcessing::CheckCorrectROI(cv::Rect& ROI)$/;"	f	class:ModuleImageProcessing
CheckROI	CV_IMAGE_PROCESSING/contour_processing.cpp	/^void ContoursProcessorClass::CheckROI(cv::Rect& ROI, int SizeImage)$/;"	f	class:ContoursProcessorClass
ChillControlBlock	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
Chunked	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^enum class IteratorMode {Chunked = 0, ChunkedFixed = 1, ChunkedContinous = 2, Continous = 3};$/;"	m	class:IteratorMode
ChunkedContinous	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^enum class IteratorMode {Chunked = 0, ChunkedFixed = 1, ChunkedContinous = 2, Continous = 3};$/;"	m	class:IteratorMode
ChunkedFixed	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^enum class IteratorMode {Chunked = 0, ChunkedFixed = 1, ChunkedContinous = 2, Continous = 3};$/;"	m	class:IteratorMode
ClearBlotchRects	CV_IMAGE_PROCESSING/contour_processing.cpp	/^void ContoursProcessorClass::ClearBlotchRects(cv::Mat& OutputImage)$/;"	f	class:ContoursProcessorClass
Close1	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^struct CommandCloseConnection  { uint8_t Close1   = 0xC6; uint8_t Close2   = 0xC6; };$/;"	m	struct:CommandCloseConnection
Close2	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^struct CommandCloseConnection  { uint8_t Close1   = 0xC6; uint8_t Close2   = 0xC6; };$/;"	m	struct:CommandCloseConnection
ColorInterpolation	gui_sources/qcustomplot.h	/^  enum ColorInterpolation { ciRGB  \/\/\/< Color channels red, green and blue are linearly interpolated$/;"	g	class:QCPColorGradient
ColorList	gui_sources/widget_output_image_display.h	/^  QVector<QColor> ColorList;$/;"	m	class:WidgetOutputImageDisplay
Command	DEVICES/device_generic_interface.h	/^    MessageGenericExt<T_COMMAND,MESSAGE_HEADER_EXT> Command;$/;"	m	class:DeviceGenericInterface
Command	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^    uint16_t  Command     = 0xA1;$/;"	m	struct:CommandCalibration
Command	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^  uint16_t Command = 0;$/;"	m	struct:CommandDevice
Command	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  CommandSetPosScanator Command;$/;"	m	class:CANTestMessage
CommandCalibration	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^struct CommandCalibration$/;"	s
CommandCheckConnection	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^struct CommandCheckConnection  { uint8_t Connect  = 0xC5; uint8_t Connect2 = 0xC6; };$/;"	s
CommandCloseConnection	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^struct CommandCloseConnection  { uint8_t Close1   = 0xC6; uint8_t Close2   = 0xC6; };$/;"	s
CommandDevice	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^struct CommandDevice$/;"	s
CommandDispatcherGeneric	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_generic.h	/^class CommandDispatcherGeneric$/;"	c
CommandSetPos	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^struct CommandSetPos$/;"	s
CommandSetSpeed	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^struct CommandSetSpeed$/;"	s
Common	AIMING_MODULES/pid_param_struct.h	/^	double Common;$/;"	m	class:PIDParamStruct
CommonMatrix	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor CommonMatrix; $/;"	m	class:RotateOperationContainer
CommonMatrixInverse	PYTORCH_PROCESSING/TorchProcessing.h	/^	torch::Tensor CommonMatrixInverse;$/;"	m	class:ImageProcessingTorch
CommonMatrixInverse	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor CommonMatrixInverse;$/;"	m	class:RotateOperationContainer
CommonSubMatrix	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor CommonSubMatrix;$/;"	m	class:RotateOperationContainer
CommonSubMatrixInverse	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor CommonSubMatrixInverse;$/;"	m	class:RotateOperationContainer
Connect	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^struct CommandCheckConnection  { uint8_t Connect  = 0xC5; uint8_t Connect2 = 0xC6; };$/;"	m	struct:CommandCheckConnection
Connect2	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^struct CommandCheckConnection  { uint8_t Connect  = 0xC5; uint8_t Connect2 = 0xC6; };$/;"	m	struct:CommandCheckConnection
ConnectNode	gui_sources/widget_scene_node_interface.cpp	/^LinkLine* WidgetSceneNodeInterface::ConnectNode(int sourcePortNode ,WidgetSceneNodeInterface* Node, int destPortNode)$/;"	f	class:WidgetSceneNodeInterface
Connected	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^       bool Connected  = false;$/;"	m	class:UDPEngineInterface
ConnectedToDevice	DEVICES/LaserPointerControlLib/WindowLaserControl.h	/^    bool ConnectedToDevice = false;$/;"	m	class:LaserControlClass
ConnectionDevice	DEVICES/device_generic_interface.h	/^    T_CONNECTION* ConnectionDevice = nullptr;$/;"	m	class:DeviceGenericInterface
ConnectionInterface	TRANSMISSION/TRANSMISSION_MODULES/connection_interface.h	/^  ConnectionInterface(QObject* parent = nullptr) : QObject(parent) {}; $/;"	f	class:ConnectionInterface
ConnectionInterface	TRANSMISSION/TRANSMISSION_MODULES/connection_interface.h	/^class ConnectionInterface : public QObject$/;"	c
Continous	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^enum class IteratorMode {Chunked = 0, ChunkedFixed = 1, ChunkedContinous = 2, Continous = 3};$/;"	m	class:IteratorMode
ContinousLoad	UTILITES/thread_operation_nodes.h	/^  bool ContinousLoad = false;$/;"	m	class:ValueStorage
ContinousMode	UTILITES/thread_operation_nodes.h	/^  bool ContinousMode = true;$/;"	m	class:CoordStorage
ContourAreas	CV_IMAGE_PROCESSING/contour_processing.h	/^    std::vector<double> ContourAreas;$/;"	m	class:ContoursProcessorClass
ContourRects	CV_IMAGE_PROCESSING/contour_processing.h	/^    std::vector<cv::Rect> ContourRects;$/;"	m	class:ContoursProcessorClass
ContourRectsOld	CV_IMAGE_PROCESSING/contour_processing.h	/^    std::vector<cv::Rect> ContourRectsOld;$/;"	m	class:ContoursProcessorClass
ContourStatistics	CV_IMAGE_PROCESSING/contour_processing.h	/^    std::vector<StatisticNode<double>> ContourStatistics;$/;"	m	class:ContoursProcessorClass
Contours	CV_IMAGE_PROCESSING/contour_processing.h	/^    std::vector<std::vector<cv::Point>> Contours;$/;"	m	class:ContoursProcessorClass
ContoursExtern	CV_IMAGE_PROCESSING/contour_processing.h	/^    std::vector<std::vector<cv::Point>> ContoursExtern;$/;"	m	class:ContoursProcessorClass
ContoursProcessor	CV_IMAGE_PROCESSING/image_finder.h	/^    ContoursProcessorClass ContoursProcessor;$/;"	m	class:ImageTemplateFinder
ContoursProcessorClass	CV_IMAGE_PROCESSING/contour_processing.cpp	/^ContoursProcessorClass::ContoursProcessorClass() $/;"	f	class:ContoursProcessorClass
ContoursProcessorClass	CV_IMAGE_PROCESSING/contour_processing.h	/^class ContoursProcessorClass$/;"	c
ControlCommandLaser	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    ControlCommandLaser()$/;"	f	struct:ControlCommandLaser
ControlCommandLaser	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^struct ControlCommandLaser$/;"	s
ControlData	DEVICES/LaserPointerControlLib/WindowLaserControl.h	/^    ControlCommandLaser ControlData;$/;"	m	class:LaserControlClass
ControlWindow	DEVICES/device_focus_ranger_interface.h	/^    WidgetFocusRangerControl* ControlWindow;$/;"	m	class:DeviceFocusRangerInterface
ControlWindow	DEVICES/device_laser_interface.h	/^                             WidgetLaserControl* ControlWindow  = nullptr;$/;"	m	class:DeviceLaserInterface
ControursProcessors	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  std::vector<ContoursProcessorClass> ControursProcessors;$/;"	m	class:ThresholdFindingParallelDispersion
ConvertInput	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^torch::Tensor RotateOperationContainer::ConvertInput(torch::Tensor& Input)$/;"	f	class:RotateOperationContainer
ConvertInputCoord	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^pair<torch::Tensor,torch::Tensor> RotateOperationContainer::ConvertInputCoord(vector<pair<double,double>> test_input ,vector<pair<double,double>> test_output, bool z_signs_inverse)$/;"	f	class:RotateOperationContainer
ConvertOperationToMatrix	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateOperationContainer::ConvertOperationToMatrix(pair<RotateAxis,torch::Tensor>& Operation, torch::Tensor& Matrix)$/;"	f	class:RotateOperationContainer
CoordAimingError	AIMING_MODULES/pid_class.h	/^	QPair<float,float> CoordAimingError;$/;"	m	class:PIDClass
CoordAvarageGlidingNode	UTILITES/thread_operation_nodes.h	/^	CoordAvarageGlidingNode(){ SamplePoints.resize(10); std::fill(SamplePoints.begin(), $/;"	f	class:CoordAvarageGlidingNode
CoordAvarageGlidingNode	UTILITES/thread_operation_nodes.h	/^	CoordAvarageGlidingNode(int size) {    window_size = size; $/;"	f	class:CoordAvarageGlidingNode
CoordAvarageGlidingNode	UTILITES/thread_operation_nodes.h	/^class CoordAvarageGlidingNode : public PassCoordClass<T>$/;"	c
CoordAvaragePeriodicNode	UTILITES/thread_operation_nodes.h	/^	CoordAvaragePeriodicNode(){};$/;"	f	class:CoordAvaragePeriodicNode
CoordAvaragePeriodicNode	UTILITES/thread_operation_nodes.h	/^	CoordAvaragePeriodicNode(int size) { window_size = size;};$/;"	f	class:CoordAvaragePeriodicNode
CoordAvaragePeriodicNode	UTILITES/thread_operation_nodes.h	/^class CoordAvaragePeriodicNode : public PassCoordClass<T>$/;"	c
CoordData	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
CoordDetector	UTILITES/thread_operation_nodes.h	/^	CoordDetector(){};$/;"	f	class:CoordDetector
CoordDetector	UTILITES/thread_operation_nodes.h	/^	CoordDetector(double tolerance_distance){ tolerance = tolerance_distance; }$/;"	f	class:CoordDetector
CoordDetector	UTILITES/thread_operation_nodes.h	/^	CoordDetector(double tolerance_distance, QPair<T,T> Wait){ tolerance = tolerance_distance;$/;"	f	class:CoordDetector
CoordDetector	UTILITES/thread_operation_nodes.h	/^class CoordDetector : public PassCoordClass<T>$/;"	c
CoordFirst	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	/^	QPair<Type, Type> CoordFirst;$/;"	m	class:Substract
CoordIntegral	AIMING_MODULES/aiming_class.h	/^	QPair<T,T> CoordIntegral;$/;"	m	class:TimeIntegratorClass
CoordInversionAxisNode	UTILITES/thread_operation_nodes.h	/^  CoordInversionAxisNode(int Axis) { SetInversion(Axis);};$/;"	f	class:CoordInversionAxisNode
CoordInversionAxisNode	UTILITES/thread_operation_nodes.h	/^class CoordInversionAxisNode : public PassCoordClass<float>$/;"	c
CoordNormLimit	UTILITES/thread_operation_nodes.h	/^  double CoordNormLimit = 1000;$/;"	m	class:CoordPassFilter
CoordOutput	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	/^	QPair<Type, Type> CoordOutput;$/;"	m	class:Substract
CoordOutput	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	/^	QPair<Type, Type> CoordOutput;$/;"	m	class:SummVec
CoordPassEnd	UTILITES/thread_operation_nodes.h	/^class CoordPassEnd : public PassCoordClass<T>$/;"	c
CoordPassFilter	UTILITES/thread_operation_nodes.h	/^	CoordPassFilter(){};$/;"	f	class:CoordPassFilter
CoordPassFilter	UTILITES/thread_operation_nodes.h	/^	CoordPassFilter(double LimitNorm){ CoordNormLimit = LimitNorm;};$/;"	f	class:CoordPassFilter
CoordPassFilter	UTILITES/thread_operation_nodes.h	/^class CoordPassFilter : public PassCoordClass<T>$/;"	c
CoordPassRandomizer	UTILITES/thread_operation_nodes.h	/^	CoordPassRandomizer(){};$/;"	f	class:CoordPassRandomizer
CoordPassRandomizer	UTILITES/thread_operation_nodes.h	/^  CoordPassRandomizer(float Amplitude): AmplitudeNoize(Amplitude) {}; $/;"	f	class:CoordPassRandomizer
CoordPassRandomizer	UTILITES/thread_operation_nodes.h	/^class CoordPassRandomizer : public PassCoordClass<T>$/;"	c
CoordPassShutter	UTILITES/thread_operation_nodes.h	/^	CoordPassShutter(){};$/;"	f	class:CoordPassShutter
CoordPassShutter	UTILITES/thread_operation_nodes.h	/^class CoordPassShutter : public PassCoordClass<T>$/;"	c
CoordPassThinning	UTILITES/thread_operation_nodes.h	/^	CoordPassThinning(){};$/;"	f	class:CoordPassThinning
CoordPassThinning	UTILITES/thread_operation_nodes.h	/^	CoordPassThinning(int value){ peak = value;};$/;"	f	class:CoordPassThinning
CoordPassThinning	UTILITES/thread_operation_nodes.h	/^class CoordPassThinning : public PassCoordClass<T>$/;"	c
CoordPassWaitNode	UTILITES/thread_operation_nodes.h	/^	CoordPassWaitNode (QPair<T,T> Wait) { WaitCoord = Wait;};$/;"	f	class:CoordPassWaitNode
CoordPassWaitNode	UTILITES/thread_operation_nodes.h	/^  CoordPassWaitNode () {};$/;"	f	class:CoordPassWaitNode
CoordPassWaitNode	UTILITES/thread_operation_nodes.h	/^class CoordPassWaitNode : public PassCoordClass<T>$/;"	c
CoordPopByInputNode	UTILITES/thread_operation_nodes.h	/^	CoordPopByInputNode(){ Coords.resize(2); std::fill(Coords.begin(), Coords.end() , QPair<T,T>(0,0)); CurrentCoord = Coords.begin();};$/;"	f	class:CoordPopByInputNode
CoordPopByInputNode	UTILITES/thread_operation_nodes.h	/^class CoordPopByInputNode : public PassCoordClass<T>$/;"	c
CoordSecond	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	/^	QPair<Type, Type> CoordSecond;$/;"	m	class:Substract
CoordStorage	UTILITES/thread_operation_nodes.h	/^	CoordStorage (int size) {  SetSize(size); };$/;"	f	class:CoordStorage
CoordStorage	UTILITES/thread_operation_nodes.h	/^  CoordStorage ()         {  SetSize(10); };$/;"	f	class:CoordStorage
CoordStorage	UTILITES/thread_operation_nodes.h	/^class CoordStorage : public PassCoordClass<T>$/;"	c
Coords	UTILITES/thread_operation_nodes.h	/^  std::vector<QPair<T,T>> Coords;$/;"	m	class:CoordPopByInputNode
Coords	UTILITES/thread_operation_nodes.h	/^  std::vector<QPair<T,T>> Coords;$/;"	m	class:CoordStorage
CoordsImage	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^std::vector<QPair<int,int>> CoordsImage;$/;"	m	class:AimImageImitatorClass
Copy	controller_process_class.h	/^    ProcessControllerClass(const ProcessControllerClass& Copy) = delete;$/;"	m	class:ProcessControllerClass
Copy	controller_process_class.h	/^    void operator=(const ProcessControllerClass& Copy) = delete;$/;"	m	class:ProcessControllerClass
CopyImageToDisplayImage	gui_sources/widget_processing_image_generic.cpp	/^void WidgetProcessingImage::CopyImageToDisplayImage(const QImage& Image)$/;"	f	class:WidgetProcessingImage
CopyRotation	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateOperationContainer::CopyRotation(const RotateOperationContainer& CopyContainer)$/;"	f	class:RotateOperationContainer
CountMessagesInStore	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^    int CountMessagesInStore() { return MESSAGE_COUNTER;}$/;"	f	class:engine_ring_buffer_dense
CountMessagesInStore	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^    int CountMessagesInStore() { return MESSAGE_COUNTER;}$/;"	f	class:RingBufferGeneric
CountModules	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^int ModuleImageProcessing::CountModules = 0;$/;"	m	class:ModuleImageProcessing	file:
CountModules	CV_IMAGE_PROCESSING/image_processing_node.h	/^    static int CountModules;$/;"	m	class:ModuleImageProcessing
Counter	CAMERA_INTERFACE/camera_interface_class.h	/^    int Counter = 0;$/;"	m	class:CameraInterfaceAravis
Counter	CV_IMAGE_PROCESSING/image_processing_node.h	/^           int Counter = 0;$/;"	m	class:ModuleImageProcessing
Counter	UTILITES/debug_output_filter.h	/^  int Counter = 0;$/;"	m	class:BlockCounterClass
Counter	gui_sources/widget_processing_image_generic.h	/^int Counter = 0;$/;"	m	class:WidgetProcessingImage
CounterWidget	gui_sources/widget_scene_node_interface.cpp	/^int WidgetSceneNodeInterface::CounterWidget = 0;$/;"	m	class:WidgetSceneNodeInterface	file:
CounterWidget	gui_sources/widget_scene_node_interface.h	/^     static int CounterWidget;$/;"	m	class:WidgetSceneNodeInterface
CreateGraphics	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.cpp	/^void PlotGraphicsInterface::CreateGraphics(int Number)$/;"	f	class:PlotGraphicsInterface
CriticalMessageOutput	gui_sources/widget_main_window.h	/^	WidgetOutputTextDisplay* CriticalMessageOutput;$/;"	m	class:WidgetMainWindow
CurrentCoord	UTILITES/thread_operation_nodes.h	/^  typename std::vector<QPair<T,T>>::iterator CurrentCoord; $/;"	m	class:CoordPopByInputNode
CurrentElement	UTILITES/engine_statistics.h	/^	decltype(StatSample.begin()) CurrentElement = StatSample.begin();$/;"	m	class:StatisticCoord
CurrentElement	UTILITES/engine_statistics.h	/^	decltype(StatSample.begin()) CurrentElement = StatSample.begin();$/;"	m	class:StatisticValue
CurrentInputCoord	UTILITES/thread_operation_nodes.h	/^  typename std::vector<QPair<T,T>>::iterator CurrentInputCoord; $/;"	m	class:CoordStorage
CurrentInputValue	UTILITES/thread_operation_nodes.h	/^  typename StorType::iterator CurrentInputValue; $/;"	m	class:ValueStorage
CurrentInterfaceScheme	gui_sources/widget_main_window.h	/^		 int CurrentInterfaceScheme   = (int)InterfaceSizeType + (int)InterfaceType;$/;"	m	class:WidgetMainWindow
CurrentMeasureCoordAbs	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	QPair<float,float> CurrentMeasureCoordAbs;$/;"	m	class:RotateDataMeasureEngine
CurrentMessage	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  MessageStruct<void*,H>* CurrentMessage = 0;$/;"	m	class:engine_ring_buffer_dense
CurrentMessage	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^  MessageGeneric<void*,H>* CurrentMessage = 0;$/;"	m	class:RingBufferGeneric
CurrentOutput	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	QPair<float,float> CurrentOutput;$/;"	m	class:SinusGeneratorClass
CurrentOutputCoord	UTILITES/thread_operation_nodes.h	/^  typename std::vector<QPair<T,T>>::iterator CurrentOutputCoord; $/;"	m	class:CoordStorage
CurrentOutputValue	UTILITES/thread_operation_nodes.h	/^  typename StorType::iterator CurrentOutputValue; $/;"	m	class:ValueStorage
CurrentPoint	UTILITES/thread_operation_nodes.h	/^  typename std::vector<QPair<T,T>>::iterator CurrentPoint;$/;"	m	class:CoordAvarageGlidingNode
CurrentPos	AIMING_MODULES/aiming_class.h	/^  std::vector<QPair<T,T>>::iterator CurrentPos;$/;"	m	class:SignalRegister
CurrentProcess	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  OptimizationThreshold* CurrentProcess = &NodeFindingParallel;$/;"	m	class:ThresholdOptimizatorEngine
CurrentReceiver	CAMERA_INTERFACE/camera_interface_class.h	/^    int CurrentReceiver = 0;$/;"	m	class:CameraInterfaceAravis
CurrentRelativeCoord	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	QPair<float,float> CurrentRelativeCoord;$/;"	m	class:RotateDataMeasureEngine
CurrentStatistic	AIMING_MODULES/aiming_class.h	/^  StatisticNode<float> CurrentStatistic = StatisticNode<float>(200);$/;"	m	class:AimingParamOptimizator
CurrentStoreChannel	CAMERA_INTERFACE/interface_camera_hik.h	/^  typename std::vector<std::shared_ptr<CameraImageStorage>>::iterator CurrentStoreChannel;$/;"	m	class:CameraInterfaceHIK
CurrentTestCoord	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	std::vector<QPair<float,float>>::iterator CurrentTestCoord;$/;"	m	class:TestDataVectorsContainer
Curve	gui_sources/link_line.h	/^    QPainterPath Curve;$/;"	m	class:LinkLine
DATA	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  uint8_t* DATA;$/;"	m	class:engine_ring_buffer_dense
DATA	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^  uint8_t* DATA;$/;"	m	class:RingBufferGeneric
DATA	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic.h	/^    T DATA; $/;"	m	class:MessageGeneric
DATA	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	/^    T DATA; $/;"	m	class:MessageGenericExt
DATATHREADSPROCESSING_H	UTILITES/thread_operation_nodes.h	2;"	d
DATA_AVAILABLE	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^    int DATA_AVAILABLE = 0;$/;"	m	class:RingBufferGeneric
DATA_PASSED	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^    int DATA_PASSED = 0;$/;"	m	class:RingBufferGeneric
DATA_SIZE	TRANSMISSION/GENERIC_MESSAGES/message_header_generic.h	/^    uint16_t DATA_SIZE = 1; $/;"	m	class:MESSAGE_HEADER_GENERIC
DATA_SIZE2	TRANSMISSION/GENERIC_MESSAGES/message_header_generic.h	/^    uint16_t DATA_SIZE2 = 1; $/;"	m	class:MESSAGE_HEADER_GENERIC
DEBUGOUTPUTFILTER_H	UTILITES/debug_output_filter.h	2;"	d
DEC	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	656;"	d	file:
DEC	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	641;"	d	file:
DEC	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	656;"	d	file:
DEC	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	641;"	d	file:
DEVICE_FOCUS_CONTROL_INTERFACE_H	DEVICES/device_focus_ranger_interface.h	2;"	d
DEVICE_GENERIC_CLASS_H	DEVICES/device_generic_interface.h	2;"	d
DISABLED	CV_IMAGE_PROCESSING/optimization_threshold.h	/^	bool DISABLED = false;$/;"	m	class:OptimizationThreshold
DataAvailable	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^template<typename H> int MessageIteratorDense<H>::DataAvailable()   { return std::abs(PtrDataEnd - PtrMessageBegin); }$/;"	f	class:MessageIteratorDense
DataAvailable	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^    template<typename H> int MessageIteratorGeneric<H,IteratorMode::Continous>::DataAvailable()  $/;"	f	class:IteratorMode::MessageIteratorGeneric
DataAvailable	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^template<typename H> int MessageIteratorGenericBase<H>::DataAvailable()   { return PtrDataEnd - PtrMessageBegin; }$/;"	f	class:IteratorMode::MessageIteratorGenericBase
DataCounter	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^    int DataCounter = 0;$/;"	m	class:UDPEngineInterface
DataFilter	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	AccumulateDataFilter DataFilter;$/;"	m	class:RotateDataMeasureEngine
DataInStore	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^    int DataInStore() { return DATA_AVAILABLE; };$/;"	f	class:RingBufferGeneric
DataPassed	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^    int DataPassed() { return DATA_PASSED; };$/;"	f	class:RingBufferGeneric
DataSize	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    quint32 DataSize = 4;$/;"	m	struct:HEADERStruct
DataSourceClass	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^class DataSourceClass$/;"	c
DataVectors	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	TestDataVectorsContainer DataVectors;$/;"	m	class:RotateDataMeasureEngine
DateStrategy	gui_sources/qcustomplot.h	/^  enum DateStrategy {dsNone, dsUniformTimeInDay, dsUniformDayInMonth} mDateStrategy;$/;"	g	class:QCPAxisTickerDateTime
DeinitCamera	CAMERA_INTERFACE/camera_interface_class.cpp	/^void CameraInterfaceAravis::DeinitCamera()$/;"	f	class:CameraInterfaceAravis
DeinitCamera	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::DeinitCamera()$/;"	f	class:CameraInterfaceHIK
DeinitStorage	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraImageStorage::DeinitStorage() { if(Buffers.size()) for(auto Buffer: Buffers) delete Buffer; }$/;"	f	class:CameraInterfaceHIK::CameraImageStorage
Delay	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  std::chrono::microseconds Delay;$/;"	m	class:CANDelayMeasure
DelayCounter	CV_IMAGE_PROCESSING/contour_processing.h	/^    int DelayCounter = 0;$/;"	m	class:ContoursProcessorClass
DeleteModulesLinks	controller_process_class.cpp	/^void ProcessControllerClass::DeleteModulesLinks()$/;"	f	class:ProcessControllerClass
DestroyBufferInfo	CAMERA_INTERFACE/camera_interface_class.cpp	/^void DestroyBufferInfo ( gpointer data)$/;"	f
DeviationAvarage	UTILITES/engine_statistics.h	/^	T DeviationAvarage = 0;$/;"	m	class:StatisticCoord
DeviationMax	UTILITES/engine_statistics.h	/^	T DeviationMax = 0;$/;"	m	class:StatisticCoord
Device	DEVICES/device_rotary_interface.h	/^  DeviceRotaryGenericInterface* Device = nullptr;$/;"	m	class:DynamicModule
DeviceCamera	controller_process_class.cpp	/^shared_ptr<CameraInterfaceHIK>     ProcessControllerClass::DeviceCamera;$/;"	m	class:ProcessControllerClass	file:
DeviceCamera	controller_process_class.h	/^static std::shared_ptr<CameraInterfaceHIK> DeviceCamera;$/;"	m	class:ProcessControllerClass
DeviceFocusGenericInterface	DEVICES/device_generic_interface.h	/^class DeviceFocusGenericInterface$/;"	c
DeviceFocusRangerInterface	DEVICES/device_focus_ranger_interface.h	/^    explicit DeviceFocusRangerInterface(T_CONNECTION* Connection, QString Name) :$/;"	f	class:DeviceFocusRangerInterface
DeviceFocusRangerInterface	DEVICES/device_focus_ranger_interface.h	/^class DeviceFocusRangerInterface : public DeviceGenericInterface<T_CONNECTION, T_COMMAND, T_MESSAGE>, public DeviceFocusGenericInterface$/;"	c
DeviceGenericInterface	DEVICES/device_generic_interface.h	/^    DeviceGenericInterface(T_CONNECTION* Connection, QString Name = "[ DEVICE ]"): TAG_NAME(Name) $/;"	f	class:DeviceGenericInterface
DeviceGenericInterface	DEVICES/device_generic_interface.h	/^class DeviceGenericInterface $/;"	c
DeviceID	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   uint8_t DeviceID = 0;$/;"	m	struct:MessageDevice
DeviceID	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^  uint16_t DeviceID = 0;$/;"	m	struct:CommandDevice
DeviceInterface	DEVICES/LaserPointerControlLib/WindowLaserControl.h	/^    TCPControlInterface* DeviceInterface;$/;"	m	class:LaserControlClass
DeviceLaserGenericInterface	DEVICES/device_generic_interface.h	/^class DeviceLaserGenericInterface$/;"	c
DeviceLaserInterface	DEVICES/device_laser_interface.h	/^DeviceLaserInterface<T_CONNECTION, T_COMMAND, T_MESSAGE>::DeviceLaserInterface(T_CONNECTION* Connection, QString Name): $/;"	f	class:DeviceLaserInterface
DeviceLaserInterface	DEVICES/device_laser_interface.h	/^class DeviceLaserInterface : public DeviceGenericInterface<T_CONNECTION, T_COMMAND, T_MESSAGE>, public DeviceLaserGenericInterface$/;"	c
DeviceRotary	controller_process_class.cpp	/^shared_ptr<DeviceRotaryGenericInterface> ProcessControllerClass::DeviceRotary;$/;"	m	class:ProcessControllerClass	file:
DeviceRotary	controller_process_class.h	/^static std::shared_ptr<DeviceRotaryGenericInterface> DeviceRotary;$/;"	m	class:ProcessControllerClass
DeviceRotaryGenericInterface	DEVICES/device_generic_interface.h	/^class DeviceRotaryGenericInterface: public PassCoordClass<float>$/;"	c
DeviceRotaryInterface	DEVICES/device_rotary_interface.h	/^DeviceRotaryInterface<T_CONNECTION, T_COMMAND, T_MESSAGE>::DeviceRotaryInterface(T_CONNECTION* Connection, QString Name): $/;"	f	class:DeviceRotaryInterface
DeviceRotaryInterface	DEVICES/device_rotary_interface.h	/^class DeviceRotaryInterface : public DeviceGenericInterface<T_CONNECTION, T_COMMAND, T_MESSAGE>, public DeviceRotaryGenericInterface$/;"	c
DeviceScanator	controller_process_class.cpp	/^shared_ptr<DeviceRotaryGenericInterface> ProcessControllerClass::DeviceScanator;$/;"	m	class:ProcessControllerClass	file:
DeviceScanator	controller_process_class.h	/^static std::shared_ptr<DeviceRotaryGenericInterface> DeviceScanator;$/;"	m	class:ProcessControllerClass
Diff	UTILITES/thread_operation_nodes.h	/^  T Diff;$/;"	m	class:ValueDifference
DiffParam	AIMING_MODULES/pid_param_struct.h	/^	double DiffParam;$/;"	m	class:PIDParamStruct
Direction	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    int Direction = 0;$/;"	m	class:ManualAimControl
Disable	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  void Disable(){ DISABLED = true;};$/;"	f	class:OptimizationThreshold
DispatchNextMessage	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_app.h	/^void MessageDispatcherClass::DispatchNextMessage(RingBufferType& RingBuffer)$/;"	f	class:MessageDispatcherClass
DispatchNextMessage	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_generic.h	/^void MessageDispatcher<H,RingBufferType>::DispatchNextMessage(RingBufferType& RingBuffer)$/;"	f	class:MessageDispatcher
Dispatcher	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^    DispatcherType* Dispatcher = nullptr;$/;"	m	class:TCPConnectionEngine
DispersionThreshold	UTILITES/thread_operation_nodes.h	/^     int DispersionThreshold = 20; $/;"	m	class:TrackHoldDetectorNode
DisplayCriticalMessage	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::DisplayCriticalMessage(QString Message) {}$/;"	f	class:WidgetMainWindow
DisplayImage	gui_sources/widget_output_image_display.cpp	/^void WidgetOutputImageDisplay::DisplayImage(QImage Image)$/;"	f	class:WidgetOutputImageDisplay
DisplayImage	gui_sources/widget_output_image_display.cpp	/^void WidgetOutputImageDisplay::DisplayImage(uchar* Image, int width, int height)$/;"	f	class:WidgetOutputImageDisplay
DisplayImage	gui_sources/widget_processing_image_generic.h	/^        QImage  DisplayImage;$/;"	m	class:WidgetProcessingImage
DisplayImagesMini	gui_sources/widget_processing_image_generic.h	/^QVector<QImage> DisplayImagesMini;$/;"	m	class:WidgetProcessingImage
DisplayLine	gui_sources/widget_output_image_display.cpp	/^void WidgetOutputImageDisplay::DisplayLine(QLine line)$/;"	f	class:WidgetOutputImageDisplay
DisplayLineList	gui_sources/widget_output_image_display.h	/^  QVector<QLine> DisplayLineList;$/;"	m	class:WidgetOutputImageDisplay
DisplayPair	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.cpp	/^void PlotGraphicsInterface::DisplayPair(double pos,double pos2)$/;"	f	class:PlotGraphicsInterface
DisplayRect	gui_sources/widget_output_image_display.cpp	/^void WidgetOutputImageDisplay::DisplayRect(QRect rect) $/;"	f	class:WidgetOutputImageDisplay
DisplayRectList	gui_sources/widget_output_image_display.h	/^  QVector<QRect> DisplayRectList;$/;"	m	class:WidgetOutputImageDisplay
DisplaySeriesPairGeneric	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^void PlotGraphicsInterface::DisplaySeriesPairGeneric(const std::vector<INPUT_TYPE>& Values1,const std::vector<OUTPUT_TYPE>& Values2)$/;"	f	class:PlotGraphicsInterface
DisplaySeriesPairGeneric	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^void PlotGraphicsInterface::DisplaySeriesPairGeneric(const std::vector<INPUT_TYPE>& Values1,const std::vector<OUTPUT_TYPE>& Values2,$/;"	f	class:PlotGraphicsInterface
DisplaySingleSeriesGeneric	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^void PlotGraphicsInterface::DisplaySingleSeriesGeneric(const std::vector<INPUT_TYPE>& Values)$/;"	f	class:PlotGraphicsInterface
DisplayString	gui_sources/widget_output_image_display.cpp	/^void WidgetOutputImageDisplay::DisplayString(QString str) $/;"	f	class:WidgetOutputImageDisplay
DisplayStringList	gui_sources/widget_output_image_display.h	/^  QStringList    DisplayStringList;$/;"	m	class:WidgetOutputImageDisplay
DisplayTimeSeriesGeneric	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^void PlotGraphicsInterface::DisplayTimeSeriesGeneric(const std::vector<INPUT_TYPE>& Times, const std::vector<OUTPUT_TYPE>& Values)$/;"	f	class:PlotGraphicsInterface
Distance	UTILITES/thread_operation_nodes.h	/^   double Distance = 0;$/;"	m	class:CoordPassWaitNode
Duration	CAMERA_INTERFACE/camera_interface_class.h	/^    std::chrono::duration<double> Duration;$/;"	m	class:CameraInterfaceAravis
Duration	COMMON/interface_image_source.h	/^    std::chrono::duration<double> Duration;$/;"	m	class:FramePeriodMeasure
Duty	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    quint16 Duty = 20;$/;"	m	struct:ControlCommandLaser
DynamicAimControl	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^class DynamicAimControl : public AimControlInterface$/;"	c
DynamicControl	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    DynamicAimControl DynamicControl;$/;"	m	class:AimImageImitatorClass
DynamicModule	DEVICES/device_rotary_interface.h	/^  explicit DynamicModule(DeviceRotaryGenericInterface* DeviceRotary) $/;"	f	class:DynamicModule
DynamicModule	DEVICES/device_rotary_interface.h	/^class DynamicModule: public QObject$/;"	c
ENGINE_UDP_INTERFACE_H	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	2;"	d
EQUALS	Makefile	/^EQUALS = =$/;"	m
End	AIMING_MODULES/aiming_class.h	/^  std::vector<QPair<T,T>>::iterator End;$/;"	m	class:SignalRegister
EndMessageBuffer	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  	uint8_t* EndMessageBuffer;$/;"	m	struct:MessageIteratorDense::MessagesRange
EndMessageBuffer	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^		uint8_t* EndMessageBuffer;$/;"	m	struct:IteratorMode::MessageIteratorGenericBase::MessagesRange
EndPos	UTILITES/engine_statistics.h	/^	decltype(StatSample.begin()) EndPos = StatSample.end();$/;"	m	class:StatisticCoord
EndPos	UTILITES/engine_statistics.h	/^	decltype(StatSample.begin()) EndPos = StatSample.end();$/;"	m	class:StatisticValue
EndReceiver	UTILITES/thread_operation_nodes.h	/^class EndReceiver: public PassValueClass<T>$/;"	c
EndingStyle	gui_sources/qcustomplot.h	/^  enum EndingStyle { esNone          \/\/\/< No ending decoration$/;"	g	class:QCPLineEnding
EnumerateCameras	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::EnumerateCameras()$/;"	f	class:CameraInterfaceHIK
ErrorType	gui_sources/qcustomplot.h	/^  enum ErrorType { etKeyError    \/\/\/< The errors are for the key dimension (bars appear parallel to the key axis)$/;"	g	class:QCPErrorBars
ErrorsSumm	AIMING_MODULES/pid_class.h	/^	QPair<float,float> ErrorsSumm;$/;"	m	class:PIDClass
ExportPen	gui_sources/qcustomplot.h	/^enum ExportPen { epNoCosmetic     \/\/\/< Cosmetic pens are converted to pens with pixel width 1 when exporting$/;"	g	namespace:QCP
ExtractData	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_generic.h	/^    static T* ExtractData(MessageType* Message) {$/;"	f	class:MessageDispatcher
FILTER_BLOTCH_H	CV_IMAGE_PROCESSING/filter_blotch.h	2;"	d
FLAG	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    quint16 FLAG = 0xC2C4;$/;"	m	struct:TestCommand
FLAG_CAMERA_CONNECTED	CAMERA_INTERFACE/camera_interface_class.h	/^    bool FLAG_CAMERA_CONNECTED = false;$/;"	m	class:CameraInterfaceAravis
FLAG_CAMERA_WORK	CAMERA_INTERFACE/camera_interface_class.h	/^    bool FLAG_CAMERA_WORK = false;$/;"	m	class:CameraInterfaceAravis
FLAG_CHECK_OBJECT_HOLD	CV_IMAGE_PROCESSING/image_processing_node.h	/^    bool FLAG_CHECK_OBJECT_HOLD = false;$/;"	m	class:ModuleImageProcessing
FLAG_CLIENT_CONNECTED	stream_video_rtsp.cpp	/^std::atomic_bool VideoStreamRTSP::FLAG_CLIENT_CONNECTED = false; $/;"	m	class:VideoStreamRTSP	file:
FLAG_CLIENT_CONNECTED	stream_video_rtsp.h	/^  static std::atomic_bool FLAG_CLIENT_CONNECTED; $/;"	m	class:VideoStreamRTSP
FLAG_CONTROL_PARAM_REGIM	AIMING_MODULES/aiming_class.h	/^  bool FLAG_CONTROL_PARAM_REGIM = false;$/;"	m	class:AimingParamOptimizator
FLAG_DISPLAY_TIME	gui_sources/widget_output_image_display.h	/^  bool FLAG_DISPLAY_TIME = false;$/;"	m	class:WidgetOutputImageDisplay
FLAG_DISPLAY_TIME	gui_sources/widget_output_text_display.h	/^  bool FLAG_DISPLAY_TIME = false;$/;"	m	class:WidgetOutputTextDisplay
FLAG_ENABLE_NOIZE	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^    bool FLAG_ENABLE_NOIZE = false;$/;"	m	class:SinusGeneratorClass
FLAG_FRAME_AVAILABLE	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^bool FLAG_FRAME_AVAILABLE = false;$/;"	m	class:AimImageImitatorClass
FLAG_INIT_DONE	stream_video_rtsp.h	/^                     bool FLAG_INIT_DONE = false;$/;"	m	class:VideoStreamRTSP
FLAG_OBJECT_HOLD	CV_IMAGE_PROCESSING/image_processing_node.h	/^    bool FLAG_OBJECT_HOLD = false;$/;"	m	class:ModuleImageProcessing
FLAG_OUTPUT_PIPE_WAIT_DATA	stream_video_rtsp.cpp	/^std::atomic_bool VideoStreamRTSP::FLAG_OUTPUT_PIPE_WAIT_DATA = false; $/;"	m	class:VideoStreamRTSP	file:
FLAG_OUTPUT_PIPE_WAIT_DATA	stream_video_rtsp.h	/^  static std::atomic_bool FLAG_OUTPUT_PIPE_WAIT_DATA; $/;"	m	class:VideoStreamRTSP
FLAG_PAINT_TRAJECTORY	gui_sources/widget_processing_image_generic.h	/^bool FLAG_PAINT_TRAJECTORY = false;$/;"	m	class:WidgetProcessingImage
FLAG_REGISTRATION_REGIM	AIMING_MODULES/aiming_class.h	/^  bool FLAG_REGISTRATION_REGIM = true;$/;"	m	class:AimingParamOptimizator
FLAG_SETTINGS_LOADED	UTILITES/register_settings.cpp	/^bool SettingsRegister::FLAG_SETTINGS_LOADED = false;$/;"	m	class:SettingsRegister	file:
FLAG_SETTINGS_LOADED	UTILITES/register_settings.h	/^    static bool FLAG_SETTINGS_LOADED;$/;"	m	class:SettingsRegister
FLAG_SLAVE_MOVE	CV_IMAGE_PROCESSING/image_processing_node.h	/^    bool FLAG_SLAVE_MOVE  = false;$/;"	m	class:ModuleImageProcessing
FLAG_TRACK_MODE	CV_IMAGE_PROCESSING/image_processing_node.h	/^    bool FLAG_TRACK_MODE  = false;$/;"	m	class:ModuleImageProcessing
FaultStatistic	AIMING_MODULES/aiming_class.h	/^  StatisticNode<float> FaultStatistic;$/;"	m	class:AimingClass
FeatureExtractorCallbackFN	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^    typedef void (*FeatureExtractorCallbackFN)(const Mat, const Rect, Mat&);$/;"	t	class:cv::tracking::TrackerKCF
FillOrder	gui_sources/qcustomplot.h	/^  enum FillOrder { foRowsFirst    \/\/\/< Rows are filled first, and a new element is wrapped to the next column if the row count would exceed \\ref setWrap.$/;"	g	class:QCPLayoutGrid
Filter	UTILITES/debug_output_filter.h	/^    static OutputFilter& Filter(int size, const std::source_location& location = std::source_location::current()) $/;"	f	class:OutputFilter
FilterBlotch	CV_IMAGE_PROCESSING/image_finder.h	/^        FilterBlotchClass  FilterBlotch;$/;"	m	class:ImageTemplateFinder
FilterBlotch	CV_IMAGE_PROCESSING/tracker_centroid.h	/^        FilterBlotchClass FilterBlotch;$/;"	m	class:ImageTrackerCentroid
FilterBlotchClass	CV_IMAGE_PROCESSING/filter_blotch.h	/^class FilterBlotchClass$/;"	c
FilterErosion	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    std::function<void (cv::Mat&, cv::Mat&)> FilterErosion;$/;"	m	class:ImageTrackerCentroid
FilterErosionGPU	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    std::function<void (cv::UMat&, cv::UMat&)> FilterErosionGPU;$/;"	m	class:ImageTrackerCentroidGPU
FilterImage	CV_IMAGE_PROCESSING/filter_blotch.cpp	/^void FilterBlotchClass::FilterImage(cv::Mat& FilteringImage, cv::Mat& RawImage)$/;"	f	class:FilterBlotchClass
FilterOpened	UTILITES/thread_operation_nodes.h	/^  bool FilterOpened = false;$/;"	m	class:CoordPassFilter
FilterOpened	UTILITES/thread_operation_nodes.h	/^  bool FilterOpened = false;$/;"	m	class:CoordPassThinning
FilterSharpen	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    std::function<void (cv::Mat&, cv::Mat&)> FilterSharpen;$/;"	m	class:ImageTrackerCentroid
FilterSharpenGPU	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    std::function<void (cv::UMat&, cv::UMat&)> FilterSharpenGPU;$/;"	m	class:ImageTrackerCentroidGPU
FilterSobel	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    std::function<void (cv::Mat&, cv::Mat&)> FilterSobel;$/;"	m	class:ImageTrackerCentroid
FilterSobelGPU	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    std::function<void (cv::UMat&, cv::UMat&)> FilterSobelGPU;$/;"	m	class:ImageTrackerCentroidGPU
Filters	UTILITES/debug_output_filter.cpp	/^std::map<int,OutputFilter> OutputFilter::Filters;/;"	m	class:OutputFilter	file:
Filters	UTILITES/debug_output_filter.h	/^    static std::map<int,OutputFilter> Filters;$/;"	m	class:OutputFilter
FindArbitraryRotationToVectors	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateOperationContainer::FindArbitraryRotationToVectors(vector<pair<double,double>> test_input, vector<pair<double,double>> test_output)$/;"	f	class:RotateOperationContainer
FindContours	CV_IMAGE_PROCESSING/filter_blotch.h	/^    ContoursProcessorClass FindContours;$/;"	m	class:FilterBlotchClass
FindImageTemplate	CV_IMAGE_PROCESSING/image_finder.cpp	/^void ImageTemplateFinder::FindImageTemplate(cv::Mat& Image)$/;"	f	class:ImageTemplateFinder
FindObject	CV_IMAGE_PROCESSING/tracker_template.cpp	/^void ImageTrackerTemplate::FindObject()$/;"	f	class:ImageTrackerTemplate
FindObjectCentroid	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^void ImageTrackerCentroid::FindObjectCentroid(cv::Mat& Image)$/;"	f	class:ImageTrackerCentroid
FindObjectCentroidGPU	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^void ImageTrackerCentroidGPU::FindObjectCentroidGPU(cv::Mat& Image)$/;"	f	class:ImageTrackerCentroidGPU
FitToTestVectors	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^torch::Tensor RotateOperationContainer::FitToTestVectors(torch::Tensor test_input, torch::Tensor test_output, float gamma, float speed, int number_iteration)$/;"	f	class:RotateOperationContainer
FitToTestVectors	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^torch::Tensor RotateOperationContainer::FitToTestVectors(vector<pair<double,double>> test_input, vector<pair<double,double>> test_output, float gamma, float speed, int number_iteration)$/;"	f	class:RotateOperationContainer
FlagInverse	UTILITES/debug_output_filter.h	/^  bool FlagInverse = false;$/;"	m	class:BlockCounterClass
FlagInversion	UTILITES/thread_operation_nodes.h	/^  bool FlagInversion = false;$/;"	m	class:ValueDetector
FlagInversion	UTILITES/thread_operation_nodes.h	/^  bool FlagInversion = false;$/;"	m	class:ValuePassShutter
FlagRegisterFilled	AIMING_MODULES/aiming_class.h	/^  bool FlagRegisterFilled = false;$/;"	m	class:SignalRegister
FractionStyle	gui_sources/qcustomplot.h	/^  enum FractionStyle { fsFloatingPoint     \/\/\/< Fractions are displayed as regular decimal floating point numbers, e.g. "0.25" or "0.125".$/;"	g	class:QCPAxisTickerPi
FrameMeasureInput	COMMON/interface_image_source.h	/^    FramePeriodMeasure FrameMeasureInput;$/;"	m	class:ImageSourceInterface
FrameMeasureInput	CV_IMAGE_PROCESSING/tracker_template.h	/^    FramePeriodMeasure FrameMeasureInput;$/;"	m	class:ImageTrackerTemplate
FrameMeasureProcess	COMMON/interface_image_source.h	/^    FramePeriodMeasure FrameMeasureProcess;$/;"	m	class:ImageSourceInterface
FrameMeasureProcess	CV_IMAGE_PROCESSING/tracker_template.h	/^    FramePeriodMeasure FrameMeasureProcess;$/;"	m	class:ImageTrackerTemplate
FrameNumber	CAMERA_INTERFACE/interface_camera_hik.cpp	/^long int CameraInterfaceHIK::CameraImageStorage::FrameNumber;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage	file:
FrameNumber	CAMERA_INTERFACE/interface_camera_hik.h	/^    static long int FrameNumber;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
FramePeriodMeasure	COMMON/interface_image_source.h	/^class FramePeriodMeasure$/;"	c
FrameProcessed	CAMERA_INTERFACE/interface_camera_hik.h	/^           long int FrameProcessed = 0;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
Freq	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	QPair<float,float> Freq = QPair<float,float>(1,1);$/;"	m	class:SinusGeneratorClass
FrequencyDevider	CAMERA_INTERFACE/camera_interface_class.h	/^    int FrequencyDevider = 4;$/;"	m	class:CameraInterfaceAravis
GRAY	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^      GRAY   = (1 << 0),$/;"	e	enum:cv::tracking::TrackerKCF::MODE
GenerateAimImage	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^void AimImageImitatorClass::GenerateAimImage()$/;"	f	class:AimImageImitatorClass
GenerateTimeSeries	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.cpp	/^void PlotGraphicsInterface::GenerateTimeSeries(double TimeStep, int length)$/;"	f	class:PlotGraphicsInterface
GeometryDistortionImage	CV_IMAGE_PROCESSING/image_estimations.h	/^class GeometryDistortionImage$/;"	c
GetAbsError	AIMING_MODULES/aiming_class.cpp	/^float AimingClass::GetAbsError() { return std::hypot(CoordAimingError.first, CoordAimingError.second); }$/;"	f	class:AimingClass
GetAimPosition	AIMING_MODULES/aiming_class.cpp	/^const QPair<float,float>& AimingClass::GetAimPosition()  { return CoordAim; }$/;"	f	class:AimingClass
GetAimingError	AIMING_MODULES/aiming_class.cpp	/^const QPair<float,float>& AimingClass::GetAimingError()  $/;"	f	class:AimingClass
GetAvarageCoord	UTILITES/engine_statistics.h	/^	const QPair<T, T>& GetAvarageCoord() { return CoordAvarage;};$/;"	f	class:StatisticCoord
GetAvarageDeviation	UTILITES/engine_statistics.h	/^		T GetAvarageDeviation() { return DeviationAvarage; }$/;"	f	class:StatisticCoord
GetAvarageValue	UTILITES/engine_statistics.h	/^	 const T& GetAvarageValue() { return NodeValue.GetAvarageValue();}$/;"	f	class:StatisticNode
GetAvarageValue	UTILITES/engine_statistics.h	/^	const T& GetAvarageValue() {    return ValueAvarage;};$/;"	f	class:StatisticValue
GetBeamPosition	AIMING_MODULES/aiming_class.cpp	/^const QPair<float,float>& AimingClass::GetBeamPosition() { return CoordAimingError; }$/;"	f	class:AimingClass
GetBestStatisticsCoord	UTILITES/engine_statistics.h	/^    int GetBestStatisticsCoord() { return 0;};$/;"	f	class:StatisticGroup
GetBestStatisticsValue	UTILITES/engine_statistics.h	/^    int GetBestStatisticsValue() { return 0;};$/;"	f	class:StatisticGroup
GetCentroid	CV_IMAGE_PROCESSING/contour_processing.cpp	/^QPair<float,float> ContoursProcessorClass::GetCentroid(const cv::Mat& Image)$/;"	f	class:ContoursProcessorClass
GetCentroid	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^QPair<float,float> ImageTrackerCentroid::GetCentroid(cv::Mat& Image)$/;"	f	class:ImageTrackerCentroid
GetCoords	UTILITES/thread_operation_nodes.h	/^  std::vector<QPair<T,T>>& GetCoords() { return Coords;}$/;"	f	class:CoordStorage
GetCurrentCameraRegion	CAMERA_INTERFACE/camera_interface_class.cpp	/^void CameraInterfaceAravis::GetCurrentCameraRegion() { arv_camera_get_region (camera, &ImagePos.first, &ImagePos.second, &SizeImage.first, &SizeImage.second, NULL); }$/;"	f	class:CameraInterfaceAravis
GetDispersionCoord	UTILITES/engine_statistics.h	/^	const QPair<T, T>& GetDispersionCoord() { return CoordDispersion;};$/;"	f	class:StatisticCoord
GetDispersionNorm	UTILITES/engine_statistics.h	/^	               T   GetDispersionNorm() { return Norm(CoordDispersion);};$/;"	f	class:StatisticCoord
GetDispersionNorm	UTILITES/engine_statistics.h	/^	 T GetDispersionNorm() { return NodeCoord.GetDispersionNorm();}$/;"	f	class:StatisticNode
GetDispersionValue	UTILITES/engine_statistics.h	/^	 T GetDispersionValue() { return NodeValue.GetDispersionValue();}$/;"	f	class:StatisticNode
GetDispersionValue	UTILITES/engine_statistics.h	/^	const T& GetDispersionValue() { return ValueDispersion;};$/;"	f	class:StatisticValue
GetFirstOutput	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^std::pair<double,double> AccumulateDataFilter::GetFirstOutput()$/;"	f	class:AccumulateDataFilter
GetHeader	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^template<typename H>   H& MessageIteratorDense<H>::GetHeader()     { return *reinterpret_cast<H*>(PtrMessageBegin); }$/;"	f	class:MessageIteratorDense
GetHeader	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^template<typename H>   H& MessageIteratorDense<H>::GetHeader(uint8_t* PtrHeader) { return *reinterpret_cast<H*>(PtrHeader); }$/;"	f	class:MessageIteratorDense
GetHeader	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^template<typename H>   H& MessageIteratorGenericBase<H>::GetHeader()     { return *reinterpret_cast<H*>(PtrMessageBegin); }$/;"	f	class:IteratorMode::MessageIteratorGenericBase
GetHeader	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^template<typename H>   H& MessageIteratorGenericBase<H>::GetHeader(uint8_t* PtrHeader) { return *reinterpret_cast<H*>(PtrHeader); }$/;"	f	class:IteratorMode::MessageIteratorGenericBase
GetInstance	controller_process_class.cpp	/^ProcessControllerClass* ProcessControllerClass::GetInstance(QObject* parent)$/;"	f	class:ProcessControllerClass
GetLastCoordError	AIMING_MODULES/pid_class.h	/^	QPair<float,float> GetLastCoordError() { return this->CoordAimingError;};$/;"	f	class:PIDClass
GetLastInput	UTILITES/thread_operation_nodes.h	/^  QPair<T,T> GetLastInput() { return *CurrentInputCoord;}$/;"	f	class:CoordStorage
GetLastInput	UTILITES/thread_operation_nodes.h	/^  T GetLastInput() { return *CurrentInputValue; }$/;"	f	class:ValueStorage
GetLastWidget	gui_sources/widget_main_window.h	/^	WidgetSceneNodeInterface* GetLastWidget() { return ModuleWidgets.last();};$/;"	f	class:WidgetMainWindow
GetLinkScheme	gui_sources/link_line.cpp	/^std::tuple<int,int,int,int> LinkLine::GetLinkScheme()$/;"	f	class:LinkLine
GetMaxContourRect	CV_IMAGE_PROCESSING/contour_processing.cpp	/^cv::Rect ContoursProcessorClass::GetMaxContourRect()$/;"	f	class:ContoursProcessorClass
GetMaxCoord	UTILITES/engine_statistics.h	/^	const QPair<T, T>& GetMaxCoord() { return CoordMax;};$/;"	f	class:StatisticCoord
GetMaxDeviation	UTILITES/engine_statistics.h	/^		T GetMaxDeviation() { return DeviationMax; };$/;"	f	class:StatisticCoord
GetMaxTypeSize	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static size_t GetMaxTypeSize() {return TypeSizeMax;}$/;"	f	class:TypeRegister
GetMessagePtr	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^MessageStruct<void*,H>* MessageIteratorDense<H>::GetMessagePtr() { return reinterpret_cast<MessageStruct<void*,H>* >(PtrMessageBegin); }$/;"	f	class:MessageIteratorDense
GetMessagePtr	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^MessageGeneric<void*,H>* MessageIteratorGenericBase<H>::GetMessagePtr() { return reinterpret_cast<MessageGeneric<void*,H>* >(PtrMessageBegin); }$/;"	f	class:IteratorMode::MessageIteratorGenericBase
GetMinCoord	UTILITES/engine_statistics.h	/^	const QPair<T, T>& GetMinCoord() { return CoordMin;};$/;"	f	class:StatisticCoord
GetMinTypeSize	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static size_t GetMinTypeSize() {return TypeSizeMin;}$/;"	f	class:TypeRegister
GetMinimumContourDispersion	CV_IMAGE_PROCESSING/contour_processing.cpp	/^double ContoursProcessorClass::GetMinimumContourDispersion()$/;"	f	class:ContoursProcessorClass
GetMostStableContour	CV_IMAGE_PROCESSING/contour_processing.cpp	/^cv::Rect ContoursProcessorClass::GetMostStableContour()$/;"	f	class:ContoursProcessorClass
GetObjectPos	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^   QPair<float,float> GetObjectPos() $/;"	f	class:TrackerFirst
GetObjectRect	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^   cv::Rect& GetObjectRect() { return bbox; };$/;"	f	class:TrackerFirst
GetPair	UTILITES/register_settings.h	/^    static std::pair<float,float> GetPair(const QString& setting_name)$/;"	f	class:SettingsRegister
GetResult	CV_IMAGE_PROCESSING/image_estimations.cpp	/^float GeometryDistortionImage::GetResult() { return ImageDistortion; }$/;"	f	class:GeometryDistortionImage
GetResult	CV_IMAGE_PROCESSING/optimization_threshold.cpp	/^int  ThresholdFindingParallelDispersion::GetResult()$/;"	f	class:ThresholdFindingParallelDispersion
GetSecondOutput	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^std::pair<double,double> AccumulateDataFilter::GetSecondOutput()$/;"	f	class:AccumulateDataFilter
GetSeries	gui_sources/GRAPHICS_WINDOW_GRAPH/linegraph.cpp	/^QLineSeries* GraphPointsLineInterface::GetSeries() $/;"	f	class:GraphPointsLineInterface
GetSize	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic.h	/^         int GetSize()    { return HEADER.DATA_SIZE + sizeof(H);};$/;"	f	class:MessageGeneric
GetSize	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	/^         int GetSize()    { return this->toByteArray().size(); };$/;"	f	class:MessageGenericExt
GetSizeFromHeader	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic.h	/^         int GetSizeFromHeader(){ return HEADER.DATA_SIZE + sizeof(H);};$/;"	f	class:MessageGeneric
GetSizeFromHeader	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	/^         int GetSizeFromHeader(){ return HEADER.DATA_SIZE + sizeof(H);};$/;"	f	class:MessageGenericExt
GetSizeStatic	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic.h	/^  static int GetSizeStatic() {return sizeof(T) + sizeof(uint8_t) + sizeof(H);};$/;"	f	class:MessageGeneric
GetSizeStatic	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	/^  static int GetSizeStatic() {return sizeof(T) + sizeof(H);};$/;"	f	class:MessageGenericExt
GetString	UTILITES/register_settings.h	/^    static QString GetString(const QString& setting_name)$/;"	f	class:SettingsRegister
GetTestCoord	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^QPair<float,float> TestDataVectorsContainer::GetTestCoord()$/;"	f	class:TestDataVectorsContainer
GetTypeCount	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static size_t  GetTypeCount() { return TypeCount;}$/;"	f	class:TypeRegister
GetTypeID	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static size_t  GetTypeID() { return TYPE_ID;}$/;"	f	class:TypeRegister
GetTypeMax	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static size_t  GetTypeMax() { return TypeRegister<>::TypeIDMax;}$/;"	f	class:TypeRegister
GetTypeName	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static QString GetTypeName()  { return typeid(T).name(); }$/;"	f	class:TypeRegister
GetTypeSize	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static size_t GetTypeSize()    {return sizeof(T);}$/;"	f	class:TypeRegister
GetValue	COMMON/interface_pass_value.h	/^	virtual const V& GetValue() { return Value;};$/;"	f	class:PassValueClass
GetValue	UTILITES/register_settings.h	/^    static float GetValue(const QString& setting_name)$/;"	f	class:SettingsRegister
GetValues	UTILITES/thread_operation_nodes.h	/^  StorType& GetValues() { CurrentInputValue  = Values.begin(); $/;"	f	class:ValueStorage
GetWaitInputCoord	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	QPair<float,float>& GetWaitInputCoord() { return DataFilter.WaitInputCoord;};$/;"	f	class:RotateDataMeasureEngine
GradientPreset	gui_sources/qcustomplot.h	/^  enum GradientPreset { gpGrayscale  \/\/\/< Continuous lightness from black to white (suited for non-biased data representation)$/;"	g	class:QCPColorGradient
Graph1	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^	PlotGraphicsInterface* Graph1 = nullptr;$/;"	m	class:WidgetGraphisPlot
GraphPointsLineInterface	gui_sources/GRAPHICS_WINDOW_GRAPH/linegraph.cpp	/^GraphPointsLineInterface::GraphPointsLineInterface(QObject *parent)$/;"	f	class:GraphPointsLineInterface
GraphPointsLineInterface	gui_sources/GRAPHICS_WINDOW_GRAPH/linegraph.h	/^class GraphPointsLineInterface : public QObject$/;"	c
GraphPointsStorage	gui_sources/GRAPHICS_WINDOW_GRAPH/widget_line_graph.h	/^    GraphPointsLineInterface *GraphPointsStorage;$/;"	m	class:WidgetLineGraph
GraphPointsStorage2	gui_sources/GRAPHICS_WINDOW_GRAPH/widget_line_graph.h	/^    GraphPointsLineInterface *GraphPointsStorage2;$/;"	m	class:WidgetLineGraph
GraphicsDisplay	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^	QCustomPlot* GraphicsDisplay;$/;"	m	class:PlotGraphicsInterface
GridType	gui_sources/qcustomplot.h	/^  enum GridType { gtAngular = 0x01 \/\/\/< $/;"	g	class:QCPPolarGrid
GroupCount	UTILITES/thread_operation_nodes.h	/^  int    GroupCount = 10;   $/;"	m	class:ValueCategorizer
GroupDispersion	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  std::vector<double>    GroupDispersion;$/;"	m	class:ThresholdFindingParallelDispersion
GroupImages	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  std::vector<cv::Mat>    GroupImages;$/;"	m	class:ThresholdFindingParallelDispersion
GroupSpan	UTILITES/thread_operation_nodes.h	/^  double GroupSpan = LimitValue\/GroupCount;$/;"	m	class:ValueCategorizer
GroupStatistics	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  std::vector<StatisticNode<double>> GroupStatistics;$/;"	m	class:ThresholdFindingParallelDispersion
GroupThreshold	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  std::vector<int> GroupThreshold;$/;"	m	class:ThresholdFindingParallelDispersion
HEADER	TRANSMISSION/GENERIC_MESSAGES/message_header_generic.h	/^    uint16_t HEADER = 0x8220; $/;"	m	class:MESSAGE_HEADER_GENERIC
HEADER	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic.h	/^    H HEADER;$/;"	m	class:MessageGeneric
HEADER	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	/^    H HEADER;$/;"	m	class:MessageGenericExt
HEADER1	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    quint8 HEADER1 = 0xF1;$/;"	m	struct:HEADERStruct
HEADER2	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    quint8 HEADER2 = 0xC1;$/;"	m	struct:HEADERStruct
HEADERStruct	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^struct HEADERStruct$/;"	s
HEX	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	667;"	d	file:
HEX	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	652;"	d	file:
HEX	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	667;"	d	file:
HEX	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	652;"	d	file:
Header	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    HEADERStruct Header;$/;"	m	struct:ControlCommandLaser
Header	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    HEADERStruct Header;$/;"	m	struct:TestCommand
HideLabel	gui_sources/widget_processing_image_control.cpp	/^void WidgetProcessingImageControl::HideLabel() $/;"	f	class:WidgetProcessingImageControl
HideLinks	gui_sources/widget_scene_node_interface.cpp	/^void WidgetSceneNodeInterface::HideLinks() { for(auto Line: LinkLineList) Line->hide(); }$/;"	f	class:WidgetSceneNodeInterface
HideNodes	gui_sources/widget_scene_node_interface.cpp	/^void WidgetSceneNodeInterface::HideNodes() { for(auto Node: PortNodes) Node->hide(); }$/;"	f	class:WidgetSceneNodeInterface
Hierarchy	CV_IMAGE_PROCESSING/contour_processing.h	/^    std::vector<cv::Vec4i>  Hierarchy;$/;"	m	class:ContoursProcessorClass
ID	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      constexpr static int ID() { return 0; };$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<CommandCalibration       >::ID() { return 11;}; int ID11 = TypeRegister<CommandSetPosScanator   >::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<CommandCheckConnection   >::ID() { return 24;}; int ID14 = TypeRegister<CommandCheckConnection  >::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<CommandCloseConnection   >::ID() { return 25;}; int ID15 = TypeRegister<CommandCloseConnection  >::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<CommandDeviceController  >::ID() { return 3; }; int ID3 = TypeRegister<CommandDeviceController  >::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<CommandDeviceFocusator   >::ID() { return 6; }; int ID6 = TypeRegister<CommandDeviceFocusator   >::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<CommandDeviceLaserPointer>::ID() { return 5; }; int ID5 = TypeRegister<CommandDeviceLaserPointer>::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<CommandDeviceLaserPower  >::ID() { return 4; }; int ID4 = TypeRegister<CommandDeviceLaserPower  >::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<CommandSetPosRotary      >::ID() { return 2; }; int ID2 = TypeRegister<CommandSetPosRotary      >::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<CommandSetPosScanator    >::ID() { return 1; }; int ID1 = TypeRegister<CommandSetPosScanator    >::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<MessageDeviceController  >::ID() { return 7; }; int ID7 = TypeRegister<MessageDeviceController  >::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<MessageDeviceFocusator   >::ID() { return 10;}; int ID10 = TypeRegister<CommandSetPosScanator   >::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<MessageDeviceLaserPointer>::ID() { return 9; }; int ID9 = TypeRegister<MessageDeviceLaserPointer>::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<MessageDeviceLaserPower  >::ID() { return 8; }; int ID8 = TypeRegister<MessageDeviceLaserPower  >::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<MessagePositionState<0>  >::ID() { return 12;}; int ID12 = TypeRegister<MessagePositionState<0> >::RegisterType();$/;"	f	class:TypeRegister
ID	main.cpp	/^template<> constexpr int TypeRegister<MessagePositionState<1>  >::ID() { return 20;}; int ID13 = TypeRegister<MessagePositionState<1> >::RegisterType();$/;"	f	class:TypeRegister
ID1	main.cpp	/^template<> constexpr int TypeRegister<CommandSetPosScanator    >::ID() { return 1; }; int ID1 = TypeRegister<CommandSetPosScanator    >::RegisterType();$/;"	v
ID10	main.cpp	/^template<> constexpr int TypeRegister<MessageDeviceFocusator   >::ID() { return 10;}; int ID10 = TypeRegister<CommandSetPosScanator   >::RegisterType();$/;"	v
ID11	main.cpp	/^template<> constexpr int TypeRegister<CommandCalibration       >::ID() { return 11;}; int ID11 = TypeRegister<CommandSetPosScanator   >::RegisterType();$/;"	v
ID12	main.cpp	/^template<> constexpr int TypeRegister<MessagePositionState<0>  >::ID() { return 12;}; int ID12 = TypeRegister<MessagePositionState<0> >::RegisterType();$/;"	v
ID13	main.cpp	/^template<> constexpr int TypeRegister<MessagePositionState<1>  >::ID() { return 20;}; int ID13 = TypeRegister<MessagePositionState<1> >::RegisterType();$/;"	v
ID14	main.cpp	/^template<> constexpr int TypeRegister<CommandCheckConnection   >::ID() { return 24;}; int ID14 = TypeRegister<CommandCheckConnection  >::RegisterType();$/;"	v
ID15	main.cpp	/^template<> constexpr int TypeRegister<CommandCloseConnection   >::ID() { return 25;}; int ID15 = TypeRegister<CommandCloseConnection  >::RegisterType();$/;"	v
ID2	main.cpp	/^template<> constexpr int TypeRegister<CommandSetPosRotary      >::ID() { return 2; }; int ID2 = TypeRegister<CommandSetPosRotary      >::RegisterType();$/;"	v
ID3	main.cpp	/^template<> constexpr int TypeRegister<CommandDeviceController  >::ID() { return 3; }; int ID3 = TypeRegister<CommandDeviceController  >::RegisterType();$/;"	v
ID4	main.cpp	/^template<> constexpr int TypeRegister<CommandDeviceLaserPower  >::ID() { return 4; }; int ID4 = TypeRegister<CommandDeviceLaserPower  >::RegisterType();$/;"	v
ID5	main.cpp	/^template<> constexpr int TypeRegister<CommandDeviceLaserPointer>::ID() { return 5; }; int ID5 = TypeRegister<CommandDeviceLaserPointer>::RegisterType();$/;"	v
ID6	main.cpp	/^template<> constexpr int TypeRegister<CommandDeviceFocusator   >::ID() { return 6; }; int ID6 = TypeRegister<CommandDeviceFocusator   >::RegisterType();$/;"	v
ID7	main.cpp	/^template<> constexpr int TypeRegister<MessageDeviceController  >::ID() { return 7; }; int ID7 = TypeRegister<MessageDeviceController  >::RegisterType();$/;"	v
ID8	main.cpp	/^template<> constexpr int TypeRegister<MessageDeviceLaserPower  >::ID() { return 8; }; int ID8 = TypeRegister<MessageDeviceLaserPower  >::RegisterType();$/;"	v
ID9	main.cpp	/^template<> constexpr int TypeRegister<MessageDeviceLaserPointer>::ID() { return 9; }; int ID9 = TypeRegister<MessageDeviceLaserPointer>::RegisterType();$/;"	v
ID_PARAM_KEY	DEVICES/device_laser_interface.h	/^	std::map<uint8_t, std::map<uint8_t,uint8_t>> ID_PARAM_KEY; \/\/GET COMMAND CODE FROM [COMMAND_ID PARAM]$/;"	m	class:DeviceLaserInterface
ID_VOID_MAIN	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
ID_VOID_MAIN	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
IMAGE_ESTIMATORS_H	CV_IMAGE_PROCESSING/image_estimations.h	2;"	d
IMAGE_FINDER_H	CV_IMAGE_PROCESSING/image_finder.h	2;"	d
IMAGE_PROCESSING_WIDGET_H	gui_sources/widget_processing_image_control.h	2;"	d
IMAGE_PROC_NODE_H	CV_IMAGE_PROCESSING/image_processing_node.h	2;"	d
IMITATOR_WIDGET_H	gui_sources/widget_imitator_control.h	2;"	d
IMITATOR_WORK	main.cpp	38;"	d	file:
IPLocal	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^    QString IPLocal = "127.0.0.1";$/;"	m	class:TCPConnectionEngine
IPRemote	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^    QString IPRemote = "127.0.0.1";$/;"	m	class:TCPConnectionEngine
IPRemote	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^    QString IPRemote;$/;"	m	class:UDPEngineInterface
IP_DEVICE	DEVICES/LaserPointerControlLib/WindowLaserControl.h	/^    QString IP_DEVICE = "172.16.16.16";$/;"	m	class:LaserControlClass
IP_PORT	DEVICES/LaserPointerControlLib/WindowLaserControl.h	/^    qint32 IP_PORT = 2325;$/;"	m	class:LaserControlClass
Image	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    cv::Mat Image;$/;"	m	class:ImageTrackerCentroid
ImageCallBackEx	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void __stdcall CameraInterfaceHIK::ImageCallBackEx(unsigned char * pData, MV_FRAME_OUT_INFO_EX* FrameInfo, void* pUser)$/;"	f	class:CameraInterfaceHIK
ImageChanneledStore	CAMERA_INTERFACE/interface_camera_hik.h	/^           std::vector<std::shared_ptr<CameraImageStorage>> ImageChanneledStore;$/;"	m	class:CameraInterfaceHIK
ImageCounter	gui_sources/widget_processing_image_generic.h	/^int ImageCounter = 0;$/;"	m	class:WidgetProcessingImage
ImageDisplay	gui_sources/widget_main_window.h	/^	WidgetOutputImageDisplay* ImageDisplay;$/;"	m	class:WidgetMainWindow
ImageDistortion	CV_IMAGE_PROCESSING/image_estimations.cpp	/^float GeometryDistortionImage::ImageDistortion = 0;$/;"	m	class:GeometryDistortionImage	file:
ImageDistortion	CV_IMAGE_PROCESSING/image_estimations.h	/^    static float ImageDistortion;$/;"	m	class:GeometryDistortionImage
ImageFinder	CV_IMAGE_PROCESSING/tracker_template.h	/^    ImageTemplateFinder ImageFinder;$/;"	m	class:ImageTrackerTemplate
ImageGPU	CV_IMAGE_PROCESSING/image_processing_node.h	/^    cv::UMat ImageGPU;$/;"	m	class:ModuleImageProcessing
ImageGPU	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    cv::UMat ImageGPU;$/;"	m	class:ImageTrackerCentroidGPU
ImageGPU2	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    cv::UMat ImageGPU2;$/;"	m	class:ImageTrackerCentroidGPU
ImageGPURoi	CV_IMAGE_PROCESSING/image_processing_node.h	/^    cv::UMat ImageGPURoi;$/;"	m	class:ModuleImageProcessing
ImageGPUTemp	CV_IMAGE_PROCESSING/image_processing_node.h	/^    cv::UMat ImageGPUTemp;$/;"	m	class:ModuleImageProcessing
ImageGPU_ROI	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    cv::UMat ImageGPU_ROI;$/;"	m	class:ImageTrackerCentroidGPU
ImageGPU_ROI2	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    cv::UMat ImageGPU_ROI2;$/;"	m	class:ImageTrackerCentroidGPU
ImageHeight	gui_sources/widget_output_image_display.h	/^  int ImageHeight = 192;$/;"	m	class:WidgetOutputImageDisplay
ImageImitator	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    AimImageImitatorClass* ImageImitator = 0;$/;"	m	class:AimControlInterface
ImageInput	CV_IMAGE_PROCESSING/image_processing_node.h	/^    cv::Mat  ImageInput;$/;"	m	class:ModuleImageProcessing
ImageInputTemp	CV_IMAGE_PROCESSING/image_processing_node.h	/^    cv::Mat  ImageInputTemp;$/;"	m	class:ModuleImageProcessing
ImageProc	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    cv::Mat ImageProc;$/;"	m	class:AimImageImitatorClass
ImageProcBlock	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
ImageProcStore	CV_IMAGE_PROCESSING/image_processing_node.h	/^    std::queue<cv::Mat> ImageProcStore;$/;"	m	class:ModuleImageProcessing
ImageProcessing	CV_IMAGE_PROCESSING/image_processing_node.h	/^    cv::Mat  ImageProcessing;$/;"	m	class:ModuleImageProcessing
ImageProcessingROI	CV_IMAGE_PROCESSING/image_processing_node.h	/^    cv::Mat  ImageProcessingROI;$/;"	m	class:ModuleImageProcessing
ImageProcessingTorch	PYTORCH_PROCESSING/TorchProcessing.cpp	/^ImageProcessingTorch::ImageProcessingTorch()$/;"	f	class:ImageProcessingTorch
ImageProcessingTorch	PYTORCH_PROCESSING/TorchProcessing.h	/^class TORCH_PROCESSING_MODULE_EXPORT ImageProcessingTorch$/;"	c
ImageSource	stream_video_rtsp.h	/^  ImageSourceInterface* ImageSource = nullptr;$/;"	m	class:VideoStreamRTSP
ImageSourceActive	gui_sources/widget_processing_image_generic.h	/^std::shared_ptr<ImageSourceInterface> ImageSourceActive;$/;"	m	class:WidgetProcessingImage
ImageSourceInterface	COMMON/interface_image_source.cpp	/^ImageSourceInterface::ImageSourceInterface(QObject* parent): QObject(parent){};$/;"	f	class:ImageSourceInterface
ImageSourceInterface	COMMON/interface_image_source.h	/^class ImageSourceInterface: public QObject$/;"	c
ImageSources	gui_sources/widget_processing_image_generic.h	/^std::vector<std::shared_ptr<ImageSourceInterface>> ImageSources;$/;"	m	class:WidgetProcessingImage
ImageTemp	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    cv::Mat ImageTemp;$/;"	m	class:ImageTrackerCentroid
ImageTemplate	CV_IMAGE_PROCESSING/image_finder.h	/^    cv::Mat  ImageTemplate;$/;"	m	class:ImageTemplateFinder
ImageTemplateFinder	CV_IMAGE_PROCESSING/image_finder.cpp	/^ImageTemplateFinder::ImageTemplateFinder(QObject* parent) : ModuleImageProcessing(parent)$/;"	f	class:ImageTemplateFinder
ImageTemplateFinder	CV_IMAGE_PROCESSING/image_finder.h	/^class ImageTemplateFinder : public ModuleImageProcessing$/;"	c
ImageTestObject	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    cv::Mat ImageTestObject;$/;"	m	class:AimImageImitatorClass
ImageToDisplay	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    QImage  ImageToDisplay;$/;"	m	class:AimImageImitatorClass
ImageToDisplay	CAMERA_INTERFACE/camera_interface_class.h	/^    QImage ImageToDisplay;$/;"	m	class:CameraInterfaceAravis
ImageToDisplay	CAMERA_INTERFACE/interface_camera_hik.cpp	/^QImage CameraInterfaceHIK::CameraImageStorage::ImageToDisplay;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage	file:
ImageToDisplay	CAMERA_INTERFACE/interface_camera_hik.h	/^    static QImage ImageToDisplay;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
ImageToDisplay	CV_IMAGE_PROCESSING/image_processing_node.h	/^      QImage ImageToDisplay;$/;"	m	class:ModuleImageProcessing
ImageToDisplay	gui_sources/widget_output_image_display.h	/^  QImage ImageToDisplay;$/;"	m	class:WidgetOutputImageDisplay
ImageToProcess	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    cv::Mat ImageToProcess;$/;"	m	class:AimImageImitatorClass
ImageToProcess	CAMERA_INTERFACE/camera_interface_class.h	/^    cv::Mat ImageToProcess;$/;"	m	class:CameraInterfaceAravis
ImageToProcess	CAMERA_INTERFACE/interface_camera_hik.h	/^    cv::Mat ImageToProcess;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
ImageTrackerCentroid	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^ImageTrackerCentroid::ImageTrackerCentroid(QObject* parent) : ModuleImageProcessing(parent)$/;"	f	class:ImageTrackerCentroid
ImageTrackerCentroid	CV_IMAGE_PROCESSING/tracker_centroid.h	/^class ImageTrackerCentroid : public ModuleImageProcessing$/;"	c
ImageTrackerCentroidGPU	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^ImageTrackerCentroidGPU::ImageTrackerCentroidGPU(QObject* parent) : ImageTrackerCentroid(parent)$/;"	f	class:ImageTrackerCentroidGPU
ImageTrackerCentroidGPU	CV_IMAGE_PROCESSING/tracker_centroid.h	/^class ImageTrackerCentroidGPU : public ImageTrackerCentroid$/;"	c
ImageTrackerTemplate	CV_IMAGE_PROCESSING/tracker_template.h	/^    explicit ImageTrackerTemplate(QObject* parent = 0) {};$/;"	f	class:ImageTrackerTemplate
ImageTrackerTemplate	CV_IMAGE_PROCESSING/tracker_template.h	/^class ImageTrackerTemplate : public ModuleImageProcessing$/;"	c
ImageWidth	gui_sources/widget_output_image_display.h	/^  int ImageWidth = 712; $/;"	m	class:WidgetOutputImageDisplay
ImitationModule	gui_sources/widget_imitator_control.h	/^    std::shared_ptr<AimImageImitatorClass> ImitationModule;$/;"	m	class:WidgetImageImitator
IncommingPointer	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^	MessageIteratorDense<H> IncommingPointer;$/;"	m	class:engine_ring_buffer_dense
IncommingPointer	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^	MessageIteratorGeneric<H,I_T> IncommingPointer;$/;"	m	class:RingBufferGeneric
Increment	UTILITES/debug_output_filter.h	/^  void Increment() { Counter++;}$/;"	f	class:BlockCounterClass
Init	gui_sources/widget_scene_node_interface.cpp	/^void WidgetSceneNodeInterface::Init(QWidget* widget)$/;"	f	class:WidgetSceneNodeInterface
InitCamera	CAMERA_INTERFACE/camera_interface_class.cpp	/^int CameraInterfaceAravis::InitCamera()$/;"	f	class:CameraInterfaceAravis
InitGraphWidget	gui_sources/GRAPHICS_WINDOW_GRAPH/widget_line_graph.cpp	/^void WidgetLineGraph::InitGraphWidget()$/;"	f	class:WidgetLineGraph
InitStorage	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraImageStorage::InitStorage()$/;"	f	class:CameraInterfaceHIK::CameraImageStorage
InputCoord	PYTORCH_PROCESSING/TorchProcessing.h	/^	torch::Tensor InputCoord;$/;"	m	class:ImageProcessingTorch
InputCoord	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor InputCoord;$/;"	m	class:RotateOperationContainer
InputCoord	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^  QPair<float,float> InputCoord;$/;"	m	class:AccumulateDataFilter
InputCount	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	/^	int InputCount = 0;$/;"	m	class:Substract
InputCount	UTILITES/thread_operation_nodes.h	/^	int InputCount = 0;$/;"	m	class:SubstractNode
InputFunction	COMMON/interface_pass_coord.h	/^    std::function<void(T&,QPair<float,float>)> InputFunction = nullptr;$/;"	m	class:PortAdapter
InputImage	CV_IMAGE_PROCESSING/contour_processing.h	/^    cv::Mat InputImage;$/;"	m	class:ContoursProcessorClass
InputImage	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  cv::Mat InputImage;$/;"	m	class:ThresholdFindingParallelDispersion
InputSeries1	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^    QVector<double> InputSeries1;$/;"	m	class:PlotGraphicsInterface
InputSeries2	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^    QVector<double> InputSeries2;$/;"	m	class:PlotGraphicsInterface
InputSeries3	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^    QVector<double> InputSeries3;$/;"	m	class:PlotGraphicsInterface
InputValue	CV_IMAGE_PROCESSING/optimization_threshold.h	/^	double InputValue = 0;$/;"	m	class:OptimizationThreshold
InputValue	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  double InputValue = 0;$/;"	m	class:ValueSpongeShift
InputValue	UTILITES/thread_operation_nodes.h	/^  double InputValue = 0;$/;"	m	class:ValueCategorizer
InsetPlacement	gui_sources/qcustomplot.h	/^  enum InsetPlacement { ipFree            \/\/\/< The element may be positioned\/sized arbitrarily, see \\ref setInsetRect$/;"	g	class:QCPLayoutInset
IntParam	AIMING_MODULES/pid_param_struct.h	/^	double IntParam;$/;"	m	class:PIDParamStruct
Integrator	AIMING_MODULES/aiming_class.h	/^  TimeIntegratorClass<float> Integrator;$/;"	m	class:AimingClass
IntegratorClass	AIMING_MODULES/aiming_class.h	/^class IntegratorClass : public PassCoordClass<T>$/;"	c
IntegratorInput	AIMING_MODULES/aiming_class.h	/^  TimeIntegratorClass<float> IntegratorInput;$/;"	m	class:AimingClass
IntegratorInputSignal	AIMING_MODULES/aiming_class.h	/^  TimeIntegratorClass<float> IntegratorInputSignal;$/;"	m	class:AimingClass
Interaction	gui_sources/qcustomplot.h	/^enum Interaction { iNone              = 0x000 \/\/\/< <tt>0x000<\/tt> None of the interactions are possible$/;"	g	namespace:QCP
InterfaceDebugScheme	gui_sources/widget_main_window.h	/^enum InterfaceScheme {InterfaceWorkScheme = 0, InterfaceDebugScheme = 2};$/;"	e	enum:InterfaceScheme
InterfaceScheme	gui_sources/widget_main_window.h	/^enum InterfaceScheme {InterfaceWorkScheme = 0, InterfaceDebugScheme = 2};$/;"	g
InterfaceSizeType	gui_sources/widget_main_window.h	/^	InterfaceSizes  InterfaceSizeType = BigSize;$/;"	m	class:WidgetMainWindow
InterfaceSizes	gui_sources/widget_main_window.h	/^enum InterfaceSizes {SmallSize = 0, BigSize = 1};$/;"	g
InterfaceType	gui_sources/widget_main_window.h	/^    InterfaceScheme InterfaceType     = InterfaceWorkScheme; $/;"	m	class:WidgetMainWindow
InterfaceWorkScheme	gui_sources/widget_main_window.h	/^enum InterfaceScheme {InterfaceWorkScheme = 0, InterfaceDebugScheme = 2};$/;"	e	enum:InterfaceScheme
Inverse	AIMING_MODULES/rotate_vector_class.h	/^RotateVectorClass<T>& RotateVectorClass<T>::Inverse()$/;"	f	class:RotateVectorClass
Inverse	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateOperationContainer::Inverse()$/;"	f	class:RotateOperationContainer
InversionBinary	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    ValueBinaryInversion<double> InversionBinary;$/;"	m	class:ImageTrackerCentroid
InversionBinary	UTILITES/thread_operation_nodes.h	/^    ValueBinaryInversion<float> InversionBinary;$/;"	m	class:TrackHoldDetectorNode
InversionLogic	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  ValueBinaryInversion<double> InversionLogic;$/;"	m	class:ValueSpongeShift
IsBestStatisticFaund	UTILITES/engine_statistics.h	/^    bool IsBestStatisticFaund() { return BestStatNumber != -1; };$/;"	f	class:StatisticGroup
IsCoordLoaded	UTILITES/engine_statistics.h	/^	 bool IsCoordLoaded() { return NodeCoord.isLoaded();}$/;"	f	class:StatisticNode
IsDataFull	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^    bool IsDataFull() { return output_to_optimize_rotation.size() == TEST_DATA_COUNT; } ;$/;"	f	class:RotateOperationContainer
IsHeaderValid	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^template<typename H> bool MessageIteratorDense<H>::IsHeaderValid() { return GetHeader().isValid(); }$/;"	f	class:MessageIteratorDense
IsHeaderValid	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^template<typename H> bool MessageIteratorGenericBase<H>::IsHeaderValid() { return GetHeader().isValid(); }$/;"	f	class:IteratorMode::MessageIteratorGenericBase
IsMemoryAtEnd	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^template<typename H> bool MessageIteratorDense<H>::IsMemoryAtEnd()  { return (PtrBufferEnd - PtrMessageBegin) < 2*MAX_MESSAGE_SIZE; }$/;"	f	class:MessageIteratorDense
IsMemoryAtEnd	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^    template<typename H> bool MessageIteratorGeneric<H,IteratorMode::Continous>::IsMemoryAtEnd() $/;"	f	class:IteratorMode::MessageIteratorGeneric
IsROIValid	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^bool AimImageImitatorClass::IsROIValid(cv::Rect& ROI)$/;"	f	class:AimImageImitatorClass
IsROIValid	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^bool ModuleImageProcessing::IsROIValid(cv::Rect& ROI)$/;"	f	class:ModuleImageProcessing
IsStatisticsLoaded	UTILITES/engine_statistics.h	/^    bool IsStatisticsLoaded() { return Statistics[Statistics.size()-1].IsCoordLoaded();};$/;"	f	class:StatisticGroup
IsValueLoaded	UTILITES/engine_statistics.h	/^	 bool IsValueLoaded() { return NodeValue.isLoaded();}$/;"	f	class:StatisticNode
IteratorMode	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^enum class IteratorMode {Chunked = 0, ChunkedFixed = 1, ChunkedContinous = 2, Continous = 3};$/;"	c
KEY_MODULE	DEVICES/device_laser_interface.h	/^    std::map<uint8_t, uint8_t> KEY_MODULE;       \/\/GET NUMBER MODULE FROM COMMAND CODE$/;"	m	class:DeviceLaserInterface
KEY_MODULE_PARAM	DEVICES/device_laser_interface.h	/^    std::map<uint8_t, uint8_t> KEY_MODULE_PARAM; \/\/KEY PARAM VALUE FROM COMMAND CODE$/;"	m	class:DeviceLaserInterface
KF	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^	cv::KalmanFilter KF = cv::KalmanFilter(4, 2, 0);$/;"	m	class:TrackerFirst
KLPInterfaceBlock	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
LABELIMAGE_H	gui_sources/labelimage.h	2;"	d
LASER_BEAM_OFF	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	114;"	d
LASER_BEAM_ON	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	113;"	d
LASER_CHECK	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	108;"	d
LASER_CONTROL_CLASS_H	DEVICES/device_laser_interface.h	2;"	d
LASER_DATASTRUCTURES_H	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	2;"	d
LASER_FAULT	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	118;"	d
LASER_MODULE	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	120;"	d
LASER_MODULE_BEAM	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	121;"	d
LASER_MODULE_PILOT	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	122;"	d
LASER_MODULE_POWER	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	123;"	d
LASER_OFF	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	110;"	d
LASER_ON	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	109;"	d
LASER_PILOT_OFF	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	116;"	d
LASER_PILOT_ON	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	115;"	d
LASER_SET_POWER	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	112;"	d
LINKLINE_H	gui_sources/link_line.h	2;"	d
LabelBlockName	build/ImageProcProject_autogen/include/ui_widget_output_text_display.h	/^    QLabel *LabelBlockName;$/;"	m	class:Ui_OutputTextDisplay
LabelData	gui_sources/qcustomplot.h	/^  struct LabelData$/;"	s	class:QCPLabelPainterPrivate
LabelImage	build/ImageProcProject_autogen/include/ui_widget_output_image_display.h	/^    QLabel *LabelImage;$/;"	m	class:Ui_WidgetOutputImageDisplay
LabelImage	gui_sources/labelimage.cpp	/^LabelImage::LabelImage(QWidget *parent)$/;"	f	class:LabelImage
LabelImage	gui_sources/labelimage.h	/^class LabelImage : public AdjustableLabel$/;"	c
LabelMode	gui_sources/qcustomplot.h	/^  enum LabelMode { lmUpright   \/\/\/< $/;"	g	class:QCPPolarAxisAngular
LabelMode	gui_sources/qcustomplot.h	/^  enum LabelMode { lmUpright   \/\/\/< $/;"	g	class:QCPPolarAxisRadial
LabelSide	gui_sources/qcustomplot.h	/^  enum LabelSide { lsInside    \/\/\/< Tick labels will be displayed inside the axis rect and clipped to the inner axis rect$/;"	g	class:QCPAxis
Labels	gui_sources/widget_processing_image_generic.h	/^    QVector<LabelImage*> Labels;$/;"	m	class:WidgetMiniLabelsGroup
LaserControlClass	DEVICES/LaserPointerControlLib/WindowLaserControl.h	/^class LaserControlClass : public QObject$/;"	c
LaserStateStruct	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^struct LaserStateStruct$/;"	s
LasersBlock	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
LastInputFirst	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	QPair<float,float> LastInputFirst;$/;"	m	class:AccumulateDataFilter
LastMessage	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  	uint8_t* LastMessage;$/;"	m	struct:MessageIteratorDense::MessagesRange
LastMessage	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^		uint8_t* LastMessage;$/;"	m	struct:IteratorMode::MessageIteratorGenericBase::MessagesRange
LastTimePoint	AIMING_MODULES/aiming_class.h	/^    std::chrono::time_point<std::chrono::high_resolution_clock> LastTimePoint;$/;"	m	class:TimeIntegratorClass
LastTimePoint	UTILITES/thread_operation_nodes.h	/^  std::chrono::time_point<std::chrono::high_resolution_clock> LastTimePoint = std::chrono::high_resolution_clock::now();$/;"	m	class:ValuePeriodMeasure
LastWidgetPressedNumber	gui_sources/widget_main_window.h	/^	int LastWidgetPressedNumber = 0;$/;"	m	class:WidgetMainWindow
LayerInsertMode	gui_sources/qcustomplot.h	/^  enum LayerInsertMode { limBelow  \/\/\/< Layer is inserted below other layer$/;"	g	class:QCustomPlot
LayerMode	gui_sources/qcustomplot.h	/^  enum LayerMode { lmLogical   \/\/\/< Layer is used only for rendering order, and shares paint buffer with all other adjacent logical layers.$/;"	g	class:QCPLayer
Layout	gui_sources/GRAPHICS_WINDOW_GRAPH/widget_line_graph.h	/^    QHBoxLayout *Layout;$/;"	m	class:WidgetLineGraph
LimitDispersionCounter	AIMING_MODULES/aiming_class.h	/^  int LimitDispersionCounter = 0;$/;"	m	class:AimingParamOptimizator
LimitValue	UTILITES/thread_operation_nodes.h	/^  double LimitValue = 100;$/;"	m	class:ValueCategorizer
LineGraph_H	gui_sources/GRAPHICS_WINDOW_GRAPH/linegraph.h	5;"	d
LineStyle	gui_sources/qcustomplot.h	/^  enum LineStyle { lsNone        \/\/\/< data points are not connected with any lines (e.g. data only represented$/;"	g	class:QCPGraph
LineStyle	gui_sources/qcustomplot.h	/^  enum LineStyle { lsNone        \/\/\/< data points are not connected with any lines (e.g. data only represented$/;"	g	class:QCPPolarGraph
LineStyle	gui_sources/qcustomplot.h	/^  enum LineStyle { lsNone  \/\/\/< No line is drawn between data points (e.g. only scatters)$/;"	g	class:QCPCurve
Link	ROTATE_OPTIMIZATION/RotationContainerLib/PassTwoCoordClass.h	/^	PassCoordClass<float>* Link = 0;$/;"	m	class:PassCoordClass
LinkAdapter	COMMON/interface_pass_coord.h	/^    void LinkAdapter(T* LinkObject,std::function<void(T&,QPair<float,float>)> SetFunction, std::function<QPair<float,float>(T&)> GetFunction)$/;"	f	class:PortAdapter
LinkCount	gui_sources/link_line.cpp	/^int LinkLine::LinkCount = 0;$/;"	m	class:LinkLine	file:
LinkCount	gui_sources/link_line.h	/^    static int LinkCount;$/;"	m	class:LinkLine
LinkLine	gui_sources/link_line.cpp	/^LinkLine::LinkLine(WidgetSceneNodeInterface* sourcePortNode, WidgetSceneNodeInterface* destPortNode, int PortOutput, int PortIntput)$/;"	f	class:LinkLine
LinkLine	gui_sources/link_line.h	/^class LinkLine : public QGraphicsObject$/;"	c
LinkLineColor	gui_sources/link_line.h	/^	QColor LinkLineColor = QColor(Qt::black);$/;"	m	class:LinkLine
LinkLineList	gui_sources/widget_main_window.h	/^	QList<LinkLine*> LinkLineList;$/;"	m	class:WidgetMainWindow
LinkLineList	gui_sources/widget_scene_node_interface.h	/^    QList<LinkLine*> LinkLineList;$/;"	m	class:WidgetSceneNodeInterface
LinkTo	gui_sources/widget_process_controller.cpp	/^void WidgetProcessController::LinkTo(ProcessControllerClass* ProcessController)$/;"	f	class:WidgetProcessController
LinkToBuffer	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_app.h	/^    void LinkToBuffer(RingBufferType& RingBuffer) { this->DispatchNextMessage(RingBuffer); }$/;"	f	class:MessageDispatcherClass
LinkToBuffer	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_generic.h	/^    void LinkToBuffer(RingBufferType& RingBuffer) { this->DispatchNextMessage(RingBuffer); }$/;"	f	class:MessageDispatcher
LinkToDevice	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	void LinkToDevice(PassCoordClass<float>& Receiver) { LinkedReceiver = &Receiver;}$/;"	f	class:SinusGeneratorClass
LinkToDevice	gui_sources/widget_camera_control.cpp	/^void WidgetCameraControl::LinkToDevice(std::shared_ptr<CameraControlInterface> CameraInterface)$/;"	f	class:WidgetCameraControl
LinkToDevice	gui_sources/widget_scanator_control.cpp	/^void WidgetScanatorControl::LinkToDevice(std::shared_ptr<ScanatorControlClass> EngineModule)$/;"	f	class:WidgetScanatorControl
LinkToImageImitator	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^void AimControlInterface::LinkToImageImitator(AimImageImitatorClass* ImitatorObjectPtr)$/;"	f	class:AimControlInterface
LinkToModule	AIM_IMAGE_IMITATION/widget_sinus_source.cpp	/^void WidgetSinusSource::LinkToModule(std::shared_ptr<SinusGeneratorClass> SinusGenerator)$/;"	f	class:WidgetSinusSource
LinkToModule	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^void ModuleImageProcessing::LinkToModule(std::shared_ptr<ImageSourceInterface> Source)$/;"	f	class:ModuleImageProcessing
LinkToModule	gui_sources/widget_aiming_control.cpp	/^void WidgetAimingControl::LinkToModule(std::shared_ptr<AimingClass> Module)$/;"	f	class:WidgetAimingControl
LinkToModule	gui_sources/widget_imitator_control.cpp	/^void WidgetImageImitator::LinkToModule(std::shared_ptr<AimImageImitatorClass> Imitator)$/;"	f	class:WidgetImageImitator
LinkToModule	gui_sources/widget_processing_image_control.cpp	/^void WidgetProcessingImageControl::LinkToModule(std::shared_ptr<ModuleImageProcessing> ControlInterface)$/;"	f	class:WidgetProcessingImageControl
LinkToModule	gui_sources/widget_processing_image_generic.cpp	/^void WidgetProcessingImage::LinkToModule(std::shared_ptr<ImageSourceInterface> Source)$/;"	f	class:WidgetProcessingImage
LinkToPort	AIMING_MODULES/aiming_class.h	/^    void LinkToPort(PassCoordClass<float>* Port) { SetCoordPort = Port;};$/;"	f	class:SignalPortAdapter
LinkedDetector	UTILITES/thread_operation_nodes.h	/^  ValueDetector<T>*  LinkedDetector = 0;$/;"	m	class:ValueDetector
LinkedDetector	UTILITES/thread_operation_nodes.h	/^  ValueDetector<T>* LinkedDetector = 0;$/;"	m	class:ValuePassShutter
LinkedReceiver	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	PassCoordClass<float>* LinkedReceiver = 0;$/;"	m	class:SinusGeneratorClass
LinkedWidget	gui_sources/widget_processing_image_generic.h	/^WidgetAdjustable* LinkedWidget = 0;$/;"	m	class:WidgetProcessingImage
ListPoints	gui_sources/GRAPHICS_WINDOW_GRAPH/linegraph.h	/^    QLineSeries* ListPoints;$/;"	m	class:GraphPointsLineInterface
LoadData	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^void MessageIteratorDense<H>::LoadData(uint8_t* DataSourceBuffer, uint16_t BytesCountReceived)$/;"	f	class:MessageIteratorDense
LoadData	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	void MessageIteratorGeneric<H,IteratorMode::Chunked>::LoadData(uint8_t* DataSourceBuffer, uint16_t BytesCountReceived)$/;"	f	class:IteratorMode::MessageIteratorGeneric
LoadData	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	void MessageIteratorGeneric<H,IteratorMode::ChunkedContinous>::LoadData(uint8_t* DataSourceBuffer, uint16_t BytesCountReceived)$/;"	f	class:IteratorMode::MessageIteratorGeneric
LoadData	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	void MessageIteratorGeneric<H,IteratorMode::Continous>::LoadData(uint8_t* DataSourceBuffer, uint16_t BytesCountReceived)$/;"	f	class:IteratorMode::MessageIteratorGeneric
LoadData	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	void MessageIteratorGeneric<H,Mode>::LoadData(uint8_t* DataSourceBuffer, uint16_t BytesCountReceived)$/;"	f	class:IteratorMode::MessageIteratorGeneric
LoadPIDParam	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::LoadPIDParam(QString SettingsFile)$/;"	f	class:AimingClass
LoadRotationFromFile	AIMING_MODULES/rotate_vector_class.h	/^void RotateVectorClass<T>::LoadRotationFromFile(QString Filename)$/;"	f	class:RotateVectorClass
LoadRotationFromFile	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateOperationContainer::LoadRotationFromFile(QString Filename)$/;"	f	class:RotateOperationContainer
LoadSettings	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::LoadSettings()$/;"	f	class:AimingClass
LoadSettings	UTILITES/register_settings.cpp	/^void SettingsRegister::LoadSettings()$/;"	f	class:SettingsRegister
LoadWidgetsLinks	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::LoadWidgetsLinks()$/;"	f	class:WidgetMainWindow
LoadWidgetsPosition	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::LoadWidgetsPosition()$/;"	f	class:WidgetMainWindow
MAX_MESSAGE_IN_STORE	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^    int MAX_MESSAGE_IN_STORE = 40;$/;"	m	class:engine_ring_buffer_dense
MAX_MESSAGE_IN_STORE	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^    int MAX_MESSAGE_IN_STORE = M_N-2;$/;"	m	class:RingBufferGeneric
MAX_MESSAGE_SIZE	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^    int MAX_MESSAGE_SIZE = S_M;$/;"	m	class:engine_ring_buffer_dense
MAX_MESSAGE_SIZE	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  int MAX_MESSAGE_SIZE = 50;$/;"	m	class:MessageIteratorDense
MAX_MESSAGE_SIZE	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^    int MAX_MESSAGE_SIZE = M_S;$/;"	m	class:RingBufferGeneric
MESSAGE_COUNTER	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^    int MESSAGE_COUNTER = 0;$/;"	m	class:engine_ring_buffer_dense
MESSAGE_COUNTER	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^    int MESSAGE_COUNTER = 0;$/;"	m	class:RingBufferGeneric
MESSAGE_DISPATCHER_EXT_H	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_generic.h	2;"	d
MESSAGE_HEADER_EXT	TRANSMISSION/GENERIC_MESSAGES/message_header_generic_ext.h	/^class MESSAGE_HEADER_EXT : public MESSAGE_HEADER_GENERIC$/;"	c
MESSAGE_HEADER_GENERIC	TRANSMISSION/GENERIC_MESSAGES/message_header_generic.h	/^class MESSAGE_HEADER_GENERIC$/;"	c
MESSAGE_HEADER_GENERIC_EXT_H	TRANSMISSION/GENERIC_MESSAGES/message_header_generic_ext.h	2;"	d
MESSAGE_HEADER_GENERIC_H	TRANSMISSION/GENERIC_MESSAGES/message_header_generic.h	2;"	d
MESSAGE_IDENT	TRANSMISSION/GENERIC_MESSAGES/message_header_generic.h	/^    uint8_t  MESSAGE_IDENT = 1; $/;"	m	class:MESSAGE_HEADER_GENERIC
MESSAGE_NUMBER	TRANSMISSION/GENERIC_MESSAGES/message_header_generic.h	/^    uint32_t MESSAGE_NUMBER = 0x0; $/;"	m	class:MESSAGE_HEADER_GENERIC
MESSAGE_PROCESSOR_H	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_app.h	2;"	d
MESSAGE_STRUCT_ENGINE_H	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	2;"	d
MESSAGE_TYPE	TRANSMISSION/GENERIC_MESSAGES/message_header_generic.h	/^    uint8_t  MESSAGE_TYPE  = 0xF1; $/;"	m	class:MESSAGE_HEADER_GENERIC
MIN_MESSAGE_SIZE	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^    int MIN_MESSAGE_SIZE = S_M\/2;$/;"	m	class:engine_ring_buffer_dense
MIN_MESSAGE_SIZE	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^    int MIN_MESSAGE_SIZE = M_S;$/;"	m	class:RingBufferGeneric
MODE	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^    enum MODE {$/;"	g	class:cv::tracking::TrackerKCF
MYWIDGET_H	gui_sources/widget_processing_image_generic.h	2;"	d
MainBlock1	gui_sources/widget_main_window.h	/^	WidgetSceneNodeInterface* MainBlock1;$/;"	m	class:WidgetMainWindow
MainContoller	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
ManualAimControl	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^class ManualAimControl : public AimControlInterface$/;"	c
ManualControl	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    ManualAimControl ManualControl;$/;"	m	class:AimImageImitatorClass
ManualControl	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    quint16 ManualControl = 0; $/;"	m	struct:LaserStateStruct
ManualControl	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    quint16 ManualControl = 0;$/;"	m	struct:ControlCommandLaser
MarginSide	gui_sources/qcustomplot.h	/^enum MarginSide { msLeft     = 0x01 \/\/\/< <tt>0x01<\/tt> left margin$/;"	g	namespace:QCP
MaskImage	CV_IMAGE_PROCESSING/contour_processing.h	/^    cv::Mat MaskImage;$/;"	m	class:ContoursProcessorClass
MatrixToString	AIMING_MODULES/rotate_vector_class.h	/^std::string RotateVectorClass<T>::MatrixToString()$/;"	f	class:RotateVectorClass
MatrixToString	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^string RotateOperationContainer::MatrixToString()$/;"	f	class:RotateOperationContainer
MaxImageDistortion	CV_IMAGE_PROCESSING/image_processing_node.h	/^      int MaxImageDistortion = 8;$/;"	m	class:ModuleImageProcessing
MaxImageWeight	CV_IMAGE_PROCESSING/image_processing_node.h	/^      int MaxImageWeight = 150*150*255;$/;"	m	class:ModuleImageProcessing
MaxThresholdFinding	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  int MaxThresholdFinding = 250;$/;"	m	class:ThresholdOptimizatorEngine
MeasureFilter	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	RotateDataMeasureEngine MeasureFilter;$/;"	m	class:RotateOperationContainer
MemoryAvailable	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^template<typename H> int MessageIteratorDense<H>::MemoryAvailable() { return (PtrBufferEnd - PtrMessageBegin) - 2*MAX_MESSAGE_SIZE; }$/;"	f	class:MessageIteratorDense
MemoryAvailable	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^    template<typename H> int MessageIteratorGeneric<H,IteratorMode::Continous>::MemoryAvailable()$/;"	f	class:IteratorMode::MessageIteratorGeneric
MessageDataSize	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	uint8_t  MessageDataSize = 25;$/;"	m	class:IteratorMode::MessageIteratorGenericBase
MessageDevice	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^struct MessageDevice$/;"	s
MessageDispatcher	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_generic.h	/^    MessageDispatcher() { CallList.resize(30); std::fill(CallList.begin(), CallList.end(), nullptr);}$/;"	f	class:MessageDispatcher
MessageDispatcher	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_generic.h	/^class MessageDispatcher $/;"	c
MessageDispatcherClass	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_app.h	/^class MessageDispatcherClass : public QObject$/;"	c
MessageGeneric	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic.h	/^MessageGeneric<T,H>::MessageGeneric()$/;"	f	class:MessageGeneric
MessageGeneric	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic.h	/^class MessageGeneric$/;"	c
MessageGenericExt	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	/^MessageGenericExt<T,H>::MessageGenericExt()$/;"	f	class:MessageGenericExt
MessageGenericExt	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	/^class MessageGenericExt$/;"	c
MessageGeneric_H	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic.h	2;"	d
MessageIteratorDense	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^MessageIteratorDense<H>::MessageIteratorDense()$/;"	f	class:MessageIteratorDense
MessageIteratorDense	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^MessageIteratorDense<H>::MessageIteratorDense(uint8_t* STORAGE, std::size_t Size)$/;"	f	class:MessageIteratorDense
MessageIteratorDense	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^class MessageIteratorDense {$/;"	c
MessageIteratorGeneric	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^    MessageIteratorGeneric(): MessageIteratorGenericBase<H>() {};$/;"	f	class:IteratorMode::MessageIteratorGeneric
MessageIteratorGeneric	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^    MessageIteratorGeneric(uint8_t* STORAGE, std::size_t ChunkSize, std::size_t NumberChunks) :$/;"	f	class:IteratorMode::MessageIteratorGeneric
MessageIteratorGeneric	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^class MessageIteratorGeneric : public MessageIteratorGenericBase<H> $/;"	c	class:IteratorMode
MessageIteratorGeneric	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^class MessageIteratorGeneric<H,IteratorMode::Chunked> : public MessageIteratorGenericBase<H> $/;"	c	class:IteratorMode
MessageIteratorGeneric	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^class MessageIteratorGeneric<H,IteratorMode::ChunkedContinous> : public MessageIteratorGenericBase<H> $/;"	c	class:IteratorMode
MessageIteratorGeneric	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^class MessageIteratorGeneric<H,IteratorMode::Continous> : public MessageIteratorGenericBase<H> $/;"	c	class:IteratorMode
MessageIteratorGenericBase	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^MessageIteratorGenericBase<H>::MessageIteratorGenericBase()$/;"	f	class:IteratorMode::MessageIteratorGenericBase
MessageIteratorGenericBase	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^MessageIteratorGenericBase<H>::MessageIteratorGenericBase(uint8_t* STORAGE, std::size_t ChunkSize, std::size_t NumberChunks)$/;"	f	class:IteratorMode::MessageIteratorGenericBase
MessageIteratorGenericBase	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^class MessageIteratorGenericBase$/;"	c	class:IteratorMode
MessageIteratorGeneric_H	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	2;"	d
MessageMoveState	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^struct MessageMoveState$/;"	s
MessageNumber	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  uint32_t MessageNumber = 0;$/;"	m	class:MessageIteratorDense
MessageNumber	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	uint32_t MessageNumber = 0;$/;"	m	class:IteratorMode::MessageIteratorGenericBase
MessagePointer	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^	MessageIteratorDense<H> MessagePointer;$/;"	m	class:engine_ring_buffer_dense
MessagePointer	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^	MessageIteratorGeneric<H,I_T> MessagePointer;$/;"	m	class:RingBufferGeneric
MessagePositionState	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^struct MessagePositionState$/;"	s
MessageSize	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^template<typename H> int MessageIteratorDense<H>::MessageSize()      $/;"	f	class:MessageIteratorDense
MessageSize	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^template<typename H> int MessageIteratorGenericBase<H>::MessageSize()      $/;"	f	class:IteratorMode::MessageIteratorGenericBase
MessageSize	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^template<typename H> int MessageIteratorGenericBase<H>::MessageSize(uint8_t* PtrMessage)$/;"	f	class:IteratorMode::MessageIteratorGenericBase
MessagesRange	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  struct MessagesRange$/;"	s	class:MessageIteratorDense
MessagesRange	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	struct MessagesRange$/;"	s	class:IteratorMode::MessageIteratorGenericBase
MiddleObject	ROTATE_OPTIMIZATION/rotation_find_executor.h	/^	std::shared_ptr<PassCoordClass<float>> MiddleObject = nullptr;$/;"	m	class:RotationFindProcessClass
MinImageWeight	CV_IMAGE_PROCESSING/image_processing_node.h	/^      int MinImageWeight = 4*4*255;$/;"	m	class:ModuleImageProcessing
MinThreshold	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  int MinThreshold = 0;$/;"	m	class:ThresholdFindingParallelDispersion
MinThresholdFinding	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  int MinThresholdFinding = 10;$/;"	m	class:ThresholdOptimizatorEngine
Module	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   uint8_t Module = 0;$/;"	m	struct:MessageDevice
ModuleAiming1	controller_process_class.cpp	/^shared_ptr<AimingClass>          ProcessControllerClass::ModuleAiming1;$/;"	m	class:ProcessControllerClass	file:
ModuleAiming1	controller_process_class.h	/^static std::shared_ptr<AimingClass>          ModuleAiming1;$/;"	m	class:ProcessControllerClass
ModuleAiming2	controller_process_class.cpp	/^shared_ptr<AimingClass>          ProcessControllerClass::ModuleAiming2;$/;"	m	class:ProcessControllerClass	file:
ModuleAiming2	controller_process_class.h	/^static std::shared_ptr<AimingClass>          ModuleAiming2;$/;"	m	class:ProcessControllerClass
ModuleCounter	AIMING_MODULES/aiming_class.cpp	/^int AimingClass::ModuleCounter = 0;$/;"	m	class:AimingClass	file:
ModuleCounter	AIMING_MODULES/aiming_class.h	/^  static int ModuleCounter;$/;"	m	class:AimingClass
ModuleImageProc	controller_process_class.cpp	/^shared_ptr<ImageTrackerCentroid>    ProcessControllerClass::ModuleImageProc;$/;"	m	class:ProcessControllerClass	file:
ModuleImageProc	controller_process_class.h	/^static std::shared_ptr<ImageTrackerCentroid>    ModuleImageProc;$/;"	m	class:ProcessControllerClass
ModuleImageProc2	controller_process_class.cpp	/^shared_ptr<ImageTrackerCentroid>    ProcessControllerClass::ModuleImageProc2;$/;"	m	class:ProcessControllerClass	file:
ModuleImageProc2	controller_process_class.h	/^static std::shared_ptr<ImageTrackerCentroid>    ModuleImageProc2;$/;"	m	class:ProcessControllerClass
ModuleImageProc3	controller_process_class.cpp	/^shared_ptr<ImageTrackerCentroidGPU> ProcessControllerClass::ModuleImageProc3;$/;"	m	class:ProcessControllerClass	file:
ModuleImageProc3	controller_process_class.h	/^static std::shared_ptr<ImageTrackerCentroidGPU> ModuleImageProc3;$/;"	m	class:ProcessControllerClass
ModuleImageProcessing	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^ModuleImageProcessing::ModuleImageProcessing(QObject* parent) : ImageSourceInterface(parent) $/;"	f	class:ModuleImageProcessing
ModuleImageProcessing	CV_IMAGE_PROCESSING/image_processing_node.h	/^class ModuleImageProcessing : public ImageSourceInterface, public PassCoordClass<float>$/;"	c
ModuleImitatorImage	controller_process_class.cpp	/^shared_ptr<AimImageImitatorClass>  ProcessControllerClass::ModuleImitatorImage;$/;"	m	class:ProcessControllerClass	file:
ModuleImitatorImage	controller_process_class.h	/^static std::shared_ptr<AimImageImitatorClass>   ModuleImitatorImage;$/;"	m	class:ProcessControllerClass
ModulePID	AIMING_MODULES/aiming_class.h	/^  PIDClass ModulePID;$/;"	m	class:AimingClass
ModuleVideoOutput	controller_process_class.cpp	/^shared_ptr<VideoStreamRTSP>      ProcessControllerClass::ModuleVideoOutput;$/;"	m	class:ProcessControllerClass	file:
ModuleVideoOutput	controller_process_class.h	/^static std::shared_ptr<VideoStreamRTSP>      ModuleVideoOutput;$/;"	m	class:ProcessControllerClass
ModuleWathing	AIMING_MODULES/aiming_class.h	/^  AimingClass* ModuleWathing = 0;$/;"	m	class:AimingWatcherClass
ModuleWidgets	gui_sources/widget_main_window.h	/^	QList<WidgetSceneNodeInterface*> ModuleWidgets;$/;"	m	class:WidgetMainWindow
Modules	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^std::vector<ModuleImageProcessing*> ModuleImageProcessing::Modules;$/;"	m	class:ModuleImageProcessing	file:
Modules	CV_IMAGE_PROCESSING/image_processing_node.h	/^    static std::vector<ModuleImageProcessing*> Modules;$/;"	m	class:ModuleImageProcessing
Modules	gui_sources/widget_aiming_control.h	/^	std::vector<std::shared_ptr<AimingClass>> Modules;$/;"	m	class:WidgetAimingControl
MoveAimingCorrection	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::MoveAimingCorrection(const QPair<float,float>& Velocity) { Velocity >> Integrator >> CoordAimCorrection; }$/;"	f	class:AimingClass
MoveDataToBegin	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^void MessageIteratorDense<H>::MoveDataToBegin()$/;"	f	class:MessageIteratorDense
MoveDataToBegin	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^    void MessageIteratorGeneric<H,IteratorMode::Continous>::MoveDataToBegin()$/;"	f	class:IteratorMode::MessageIteratorGeneric
MoveGeneratorToThread	AIM_IMAGE_IMITATION/sinus_generator_class.cpp	/^void SinusGeneratorClass::MoveGeneratorToThread(QThread* Thread)$/;"	f	class:SinusGeneratorClass
MutexImageAccess	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^std::mutex ModuleImageProcessing::MutexImageAccess;$/;"	m	class:ModuleImageProcessing	file:
MutexImageAccess	CV_IMAGE_PROCESSING/image_processing_node.h	/^    static std::mutex MutexImageAccess;$/;"	m	class:ModuleImageProcessing
NEURAL_TRACKER_H	CV_IMAGE_PROCESSING/tracker_neural.h	2;"	d
NODE_H	gui_sources/node.h	2;"	d
NOMINMAX	main.cpp	5;"	d	file:
NanHandling	gui_sources/qcustomplot.h	/^  enum NanHandling { nhNone \/\/\/< NaN data points are not explicitly handled and shouldn't occur in the data (this gives slight performance improvement)$/;"	g	class:QCPColorGradient
NeuralTracker	CV_IMAGE_PROCESSING/tracker_neural.h	/^    explicit NeuralTracker(QObject* parent = 0) {};$/;"	f	class:NeuralTracker
NeuralTracker	CV_IMAGE_PROCESSING/tracker_neural.h	/^class NeuralTracker : public ModuleImageProcessing$/;"	c
NewTimePoint	UTILITES/thread_operation_nodes.h	/^  std::chrono::time_point<std::chrono::high_resolution_clock> NewTimePoint = std::chrono::high_resolution_clock::now();$/;"	m	class:ValuePeriodMeasure
Node	gui_sources/node.cpp	/^Node::Node()$/;"	f	class:Node
Node	gui_sources/node.cpp	/^Node::Node(int NumberInWidget): Node() { this->Number = NumberInWidget; }$/;"	f	class:Node
Node	gui_sources/node.h	/^class Node : public QGraphicsItem$/;"	c
NodeDispersionRunaway	CV_IMAGE_PROCESSING/optimization_threshold.h	/^        ThresholdAdjustionDispersion NodeDispersionRunaway;$/;"	m	class:ThresholdOptimizatorEngine
NodeErosion	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    std::function<void (cv::Mat&)> NodeErosion;$/;"	m	class:ImageTrackerCentroid
NodeGetForLumen	CV_IMAGE_PROCESSING/optimization_threshold.h	/^        ThresholdCalculationLumen    NodeGetForLumen;$/;"	m	class:ThresholdOptimizatorEngine
NodeMedianFilter	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    std::function<void (cv::Mat&)> NodeMedianFilter;$/;"	m	class:ImageTrackerCentroid
NodePositionX	gui_sources/widget_scene_node_interface.h	/^    int NodePositionX = 0;$/;"	m	class:WidgetSceneNodeInterface
NodePositionY	gui_sources/widget_scene_node_interface.h	/^    int NodePositionY = 0;$/;"	m	class:WidgetSceneNodeInterface
NodeThresholdFilter	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    std::function<void (cv::Mat&)> NodeThresholdFilter;$/;"	m	class:ImageTrackerCentroid
NodeTracker	CV_IMAGE_PROCESSING/tracker_template.h	/^    TrackerFirst NodeTracker;$/;"	m	class:ImageTrackerTemplate
NodeType	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^    uint16_t  NodeType    = 0xA0;$/;"	m	struct:CommandCalibration
NodesLinked	COMMON/interface_pass_coord.h	/^	std::vector<PassCoordClass*> NodesLinked ;$/;"	m	class:PassCoordClass
NodesLinked	COMMON/interface_pass_image.h	/^	std::vector<PassImageClass*> NodesLinked;$/;"	m	class:PassImageClass
NodesLinked	COMMON/interface_pass_value.h	/^	std::vector<PassValueClass*> NodesLinked;$/;"	m	class:PassValueClass
Noize	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^    QPair<float,float> Noize = QPair<float,float>(0,0);$/;"	m	class:SinusGeneratorClass
NopNode	UTILITES/thread_operation_nodes.h	/^  PassCoordNop<T> NopNode;$/;"	m	class:CoordAvaragePeriodicNode
NopNode	UTILITES/thread_operation_nodes.h	/^  PassCoordNop<T> NopNode;$/;"	m	class:CoordPassFilter
NopNode	UTILITES/thread_operation_nodes.h	/^  PassCoordNop<T> NopNode;$/;"	m	class:CoordPassShutter
NopNode	UTILITES/thread_operation_nodes.h	/^  PassCoordNop<T> NopNode;$/;"	m	class:CoordPassThinning
NopNode	UTILITES/thread_operation_nodes.h	/^  PassCoordNop<T> NopNode;$/;"	m	class:CoordPassWaitNode
Norm	UTILITES/engine_statistics.h	/^	static T Norm(QPair<T,T> Coord) { return std::sqrt(std::pow(Coord.first,2) + std::pow(Coord.second,2)); }$/;"	f	class:StatisticCoord
NormAvarage	UTILITES/engine_statistics.h	/^	T NormAvarage = 0;$/;"	m	class:StatisticCoord
NormDispersion	UTILITES/engine_statistics.h	/^	T NormDispersion = 0;$/;"	m	class:StatisticCoord
NormMax	UTILITES/engine_statistics.h	/^	T NormMax = 0;$/;"	m	class:StatisticCoord
NormMin	UTILITES/engine_statistics.h	/^	T NormMin = 0;$/;"	m	class:StatisticCoord
Number	gui_sources/node.h	/^    int Number = 0;$/;"	m	class:Node
NumberActiveChannel	gui_sources/widget_processing_image_generic.h	/^int NumberActiveChannel = -1;$/;"	m	class:WidgetProcessingImage
NumberChannel	AIMING_MODULES/aiming_class.h	/^  int NumberChannel = 0;$/;"	m	class:AimingClass
NumberChannel	gui_sources/widget_container_group.h	/^    int NumberChannel = -1;$/;"	m	class:WidgetContainerGroup
NumberChannel	gui_sources/widget_processing_image_generic.h	/^    int NumberChannel = -1;$/;"	m	class:WidgetMiniLabelsGroup
NumberFrameToProcess	CAMERA_INTERFACE/camera_interface_class.h	/^    int NumberFrameToProcess = 0;$/;"	m	class:CameraInterfaceAravis
NumberGroup	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  int NumberGroup = 10;$/;"	m	class:ThresholdFindingParallelDispersion
NumberLink	gui_sources/link_line.h	/^    int NumberLink = 0;$/;"	m	class:LinkLine
NumberMaxContour	CV_IMAGE_PROCESSING/contour_processing.h	/^    int NumberMaxContour = 0;$/;"	m	class:ContoursProcessorClass
NumberSteps	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^    uint16_t  NumberSteps   = 1;$/;"	m	struct:CommandCalibration
NumberWidget	gui_sources/widget_scene_node_interface.h	/^     int NumberWidget = 0;$/;"	m	class:WidgetSceneNodeInterface
OPENCV_CONTRIB_TRACKING_HPP	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	6;"	d
OPTIMIZTION_THREDHOLD_H	CV_IMAGE_PROCESSING/optimization_threshold.h	2;"	d
ObjectFindRect	gui_sources/widget_processing_image_generic.h	/^QRect  ObjectFindRect;$/;"	m	class:WidgetProcessingImage
ObjectPosRect	gui_sources/widget_processing_image_generic.h	/^QRect  ObjectPosRect;$/;"	m	class:WidgetProcessingImage
ObjectVelLine	gui_sources/widget_processing_image_generic.h	/^QLineF ObjectVelLine;$/;"	m	class:WidgetProcessingImage
Offset	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^    int Offset = 0;$/;"	m	class:SinusGeneratorClass
Offset	UTILITES/transform_coord_class.h	/^	double Offset = 0;$/;"	m	class:TransformCoordClass
OpenCL_Init	main.cpp	/^void OpenCL_Init()$/;"	f
OptimizationThreshold	CV_IMAGE_PROCESSING/optimization_threshold.h	/^class OptimizationThreshold : public PassValueClass<double>$/;"	c
Output	UTILITES/transform_coord_class.h	/^	QPair<float,float> Output;$/;"	m	class:TransformCoordClass
OutputCoord	PYTORCH_PROCESSING/TorchProcessing.h	/^	torch::Tensor OutputCoord;$/;"	m	class:ImageProcessingTorch
OutputCoord	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor OutputCoord;$/;"	m	class:RotateOperationContainer
OutputCoordVector	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^    std::vector<float> OutputCoordVector = {0,0,0};$/;"	m	class:RotateOperationContainer
OutputFilter	UTILITES/debug_output_filter.h	/^    OutputFilter(int peak = 100) {this->peak = peak;}; $/;"	f	class:OutputFilter
OutputFilter	UTILITES/debug_output_filter.h	/^class OutputFilter$/;"	c
OutputFirstCenter	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	QPair<float,float> OutputFirstCenter = QPair<float,float>(0,0);$/;"	m	class:AccumulateDataFilter
OutputFunction	COMMON/interface_pass_coord.h	/^    std::function<QPair<float,float>(T&)> OutputFunction = nullptr;$/;"	m	class:PortAdapter
OutputImage	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    cv::Mat OutputImage;$/;"	m	class:AimImageImitatorClass
OutputSecondCenter	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	QPair<float,float> OutputSecondCenter = QPair<float,float>(0,0);$/;"	m	class:AccumulateDataFilter
OutputString	gui_sources/widget_output_text_display.h	/^  QString OutputString;$/;"	m	class:WidgetOutputTextDisplay
OutputTextDisplay	build/ImageProcProject_autogen/include/ui_widget_output_text_display.h	/^    class OutputTextDisplay: public Ui_OutputTextDisplay {};$/;"	c	namespace:Ui
OutputVector	AIMING_MODULES/rotate_vector_class.h	/^	Eigen::Matrix< float, 3, 1 > OutputVector;$/;"	m	class:RotateVectorClass
PARALLEL_BY_DISPERSION	CV_IMAGE_PROCESSING/optimization_threshold.h	/^enum class PROCESS_METHOD { PARALLEL_BY_DISPERSION, CALC_BY_LUMEN, RUNAWAY_FROM_DISPERSION};$/;"	m	class:PROCESS_METHOD
PERIOD	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	uint16_t PERIOD = 360\/2;$/;"	m	class:SinusGeneratorClass
PIDBlock	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
PIDCLASS_H	AIMING_MODULES/pid_class.h	2;"	d
PIDClass	AIMING_MODULES/pid_class.cpp	/^PIDClass::PIDClass()$/;"	f	class:PIDClass
PIDClass	AIMING_MODULES/pid_class.h	/^class PIDClass : public PassCoordClass<float>$/;"	c
PIDControlOutput	AIMING_MODULES/pid_class.h	/^	QPair<float,float> PIDControlOutput;$/;"	m	class:PIDClass
PIDPARAMSTRUCT_H	AIMING_MODULES/pid_param_struct.h	2;"	d
PIDParam	AIMING_MODULES/pid_class.h	/^	PIDParamStruct PIDParam;$/;"	m	class:PIDClass
PIDParamGroupStat	AIMING_MODULES/aiming_class.h	/^  StatisticGroup<float> PIDParamGroupStat = StatisticGroup(10,200);$/;"	m	class:AimingParamOptimizator
PIDParamNumber	AIMING_MODULES/aiming_class.h	/^  int PIDParamNumber = 0;$/;"	m	class:AimingClass
PIDParamStruct	AIMING_MODULES/pid_param_struct.h	/^    PIDParamStruct() {RateParam = 0; DiffParam = 0; IntParam = 0;};$/;"	f	class:PIDParamStruct
PIDParamStruct	AIMING_MODULES/pid_param_struct.h	/^    PIDParamStruct(double Rate, double Diff, double Int) { RateParam = Rate; DiffParam = Diff; IntParam = Int;};$/;"	f	class:PIDParamStruct
PIDParamStruct	AIMING_MODULES/pid_param_struct.h	/^class PIDParamStruct$/;"	c
PIDParamTable	AIMING_MODULES/aiming_class.h	/^  std::vector<PIDParamStruct> PIDParamTable;$/;"	m	class:AimingClass
PIDParamTable	AIMING_MODULES/aiming_class.h	/^  std::vector<PIDParamStruct> PIDParamTable;$/;"	m	class:AimingParamOptimizator
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	421;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	424;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	427;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	430;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	433;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	436;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	439;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	442;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	445;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	448;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	451;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	454;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	457;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	460;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	463;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	466;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	469;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	472;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	475;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	478;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	481;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	484;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	487;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	490;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	493;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	497;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	500;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	503;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	506;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	509;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	512;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	517;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	520;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	524;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	406;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	412;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	415;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	418;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	421;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	424;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	427;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	430;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	433;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	436;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	439;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	442;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	445;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	448;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	451;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	454;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	457;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	460;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	463;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	466;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	469;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	472;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	475;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	478;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	482;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	485;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	488;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	491;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	494;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	497;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	502;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	505;"	d	file:
PLATFORM_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	509;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	421;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	424;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	427;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	430;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	433;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	436;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	439;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	442;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	445;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	448;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	451;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	454;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	457;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	460;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	463;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	466;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	469;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	472;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	475;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	478;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	481;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	484;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	487;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	490;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	493;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	497;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	500;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	503;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	506;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	509;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	512;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	517;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	520;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	524;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	406;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	412;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	415;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	418;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	421;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	424;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	427;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	430;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	433;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	436;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	439;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	442;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	445;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	448;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	451;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	454;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	457;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	460;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	463;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	466;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	469;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	472;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	475;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	478;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	482;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	485;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	488;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	491;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	494;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	497;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	502;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	505;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	509;"	d	file:
PROCESS_CONTROLLER_H	controller_process_class.h	2;"	d
PROCESS_CONTROLLER_WIDGET_H	gui_sources/widget_process_controller.h	2;"	d
PROCESS_METHOD	CV_IMAGE_PROCESSING/optimization_threshold.h	/^enum class PROCESS_METHOD { PARALLEL_BY_DISPERSION, CALC_BY_LUMEN, RUNAWAY_FROM_DISPERSION};$/;"	c
PROJECT_TEST_CAN	main.cpp	45;"	d	file:
PainterMode	gui_sources/qcustomplot.h	/^  enum PainterMode { pmDefault       = 0x00   \/\/\/< <tt>0x00<\/tt> Default mode for painting on screen devices$/;"	g	class:QCPPainter
Param	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^  uint16_t Param = 0;$/;"	m	struct:CommandDevice
Param1	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^    uint16_t Param1;$/;"	m	struct:MessagePositionState
Param1	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   int16_t Param1 = 0;$/;"	m	struct:CommandSetSpeed
Param1	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   int16_t Param1 = 0;$/;"	m	struct:MessageMoveState
Param1	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   uint16_t Param1 = 0;$/;"	m	struct:CommandSetPos
Param1	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   uint16_t Param1 = 0;$/;"	m	struct:MessageDevice
Param2	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^    uint16_t Param2;$/;"	m	struct:MessagePositionState
Param2	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   int16_t Param2 = 0;$/;"	m	struct:CommandSetSpeed
Param2	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   int16_t Param2 = 0;$/;"	m	struct:MessageMoveState
Param2	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   uint16_t Param2 = 0;$/;"	m	struct:CommandSetPos
Param2	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   uint16_t Param2 = 0;$/;"	m	struct:MessageDevice
Param3	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^    uint16_t Param3;$/;"	m	struct:MessagePositionState
Param3	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   uint16_t Param3 = 0;$/;"	m	struct:MessageDevice
Param3	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   uint16_t Param3 = 1;$/;"	m	struct:MessageMoveState
Param4	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^    uint16_t Param4;$/;"	m	struct:MessagePositionState
Param4	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   uint16_t Param4 = 1;$/;"	m	struct:MessageMoveState
Params	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^    struct CV_EXPORTS_W_SIMPLE Params$/;"	s	class:cv::tracking::TrackerCSRT
Params	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^    struct CV_EXPORTS_W_SIMPLE Params$/;"	s	class:cv::tracking::TrackerKCF
PassBlocked	COMMON/interface_pass_coord.h	/^    bool PassBlocked = false;$/;"	m	class:PassCoordClass
PassCoordClass	COMMON/interface_pass_coord.h	/^class PassCoordClass$/;"	c
PassCoordClass	ROTATE_OPTIMIZATION/RotationContainerLib/PassTwoCoordClass.h	/^class PassCoordClass<float>$/;"	c
PassCoordClass	ROTATE_OPTIMIZATION/RotationContainerLib/PassTwoCoordClass.h	2;"	d
PassCoordNop	UTILITES/thread_operation_nodes.h	/^class PassCoordNop : public PassCoordClass<T>$/;"	c
PassCounter	AIMING_MODULES/aiming_class.h	/^  BlockCounterClass PassCounter = BlockCounterClass(200,true);$/;"	m	class:AimingClass
PassImage	COMMON/interface_pass_image.h	/^	void PassImage() { if(!isLinked()) return; for(auto& link: NodesLinked) *this >> *link; }$/;"	f	class:PassImageClass
PassImageClass	COMMON/interface_pass_image.h	/^class PassImageClass$/;"	c
PassNop	UTILITES/thread_operation_nodes.h	/^    PassValueNop<V> PassNop;$/;"	m	class:ThinningFilter
PassNop	UTILITES/thread_operation_nodes.h	/^  PassValueNop<T> PassNop;$/;"	m	class:ValuePassShutter
PassValueClass	COMMON/interface_pass_value.h	/^class PassValueClass$/;"	c
PassValueNop	UTILITES/thread_operation_nodes.h	/^class PassValueNop : public PassValueClass<T>$/;"	c
Peak	UTILITES/debug_output_filter.h	/^  int Peak = 10000;$/;"	m	class:BlockCounterClass
PenList	gui_sources/widget_output_image_display.h	/^  QVector<QPen> PenList;$/;"	m	class:WidgetOutputImageDisplay
Pens	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^	std::vector<QPen> Pens;$/;"	m	class:PlotGraphicsInterface
PerformAvailableData	UTILITES/engine_statistics.h	/^    void PerformAvailableData() {};$/;"	f	class:StatisticGroup
Period	UTILITES/thread_operation_nodes.h	/^  std::chrono::milliseconds Period;$/;"	m	class:ValuePeriodMeasure
PeriodProcess	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^    uint16_t  PeriodProcess = 1;$/;"	m	struct:CommandCalibration
Pi	gui_sources/link_line.cpp	/^static const double Pi = 3.14159265358979323846264338327950288419717;$/;"	v	file:
PixToRadian	AIMING_MODULES/aiming_class.h	/^  TransformCoordClass PixToRadian;$/;"	m	class:AimingClass
PlotGraphicsInterface	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.cpp	/^PlotGraphicsInterface::PlotGraphicsInterface(QCustomPlot* Graphics, int NumberChannels)$/;"	f	class:PlotGraphicsInterface
PlotGraphicsInterface	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^class PlotGraphicsInterface : public QObject, public PassCoordClass<float>$/;"	c
PlotWidget	gui_sources/GRAPHICS_WINDOW_GRAPH/widget_line_graph.h	/^    QQuickWidget *PlotWidget;$/;"	m	class:WidgetLineGraph
PlottingHint	gui_sources/qcustomplot.h	/^enum PlottingHint { phNone              = 0x000 \/\/\/< <tt>0x000<\/tt> No hints are set$/;"	g	namespace:QCP
PopCoord	UTILITES/thread_operation_nodes.h	/^  QPair<float,float> PopCoord() $/;"	f	class:CoordPopByInputNode
PortAdapter	COMMON/interface_pass_coord.h	/^    PortAdapter(){};$/;"	f	class:PortAdapter
PortAdapter	COMMON/interface_pass_coord.h	/^class PortAdapter : public PassCoordClass<float>$/;"	c
PortCalibration	AIMING_MODULES/aiming_class.h	/^  std::shared_ptr<PortAdapter<AimingClass>> PortCalibration = nullptr;$/;"	m	class:AimingClass
PortCorrection	AIMING_MODULES/aiming_class.h	/^  std::shared_ptr<PortAdapter<AimingClass>> PortCorrection = nullptr;$/;"	m	class:AimingClass
PortCorrectionOutput	AIMING_MODULES/aiming_class.h	/^  std::shared_ptr<PortAdapter<AimingClass>> PortCorrectionOutput = nullptr;$/;"	m	class:AimingClass
PortLocal	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^        int PortLocal = 2325;$/;"	m	class:TCPConnectionEngine
PortLocal	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^        int PortLocal  = 7575;$/;"	m	class:UDPEngineInterface
PortMoveAiming	AIMING_MODULES/aiming_class.h	/^  std::shared_ptr<PortAdapter<AimingClass>> PortMoveAiming = nullptr;$/;"	m	class:AimingClass
PortMoveRelative	DEVICES/device_rotary_interface.h	/^std::shared_ptr<PortAdapter<DeviceRotaryGenericInterface>> PortMoveRelative = nullptr;$/;"	m	class:DeviceRotaryInterface
PortNodes	gui_sources/widget_scene_node_interface.h	/^    std::vector<Node*> PortNodes;$/;"	m	class:WidgetSceneNodeInterface
PortRemote	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^        int PortRemote = 2325;$/;"	m	class:TCPConnectionEngine
PortRemote	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^        int PortRemote = 7575;$/;"	m	class:UDPEngineInterface
PortSetAiming	AIMING_MODULES/aiming_class.h	/^  std::shared_ptr<PortAdapter<AimingClass>> PortSetAiming = nullptr;$/;"	m	class:AimingClass
PortSignalSetAiming	AIMING_MODULES/aiming_class.h	/^  SignalPortAdapter PortSignalSetAiming;$/;"	m	class:AimingClass
PositionType	gui_sources/qcustomplot.h	/^  enum PositionType { ptAbsolute        \/\/\/< Static positioning in pixels, starting from the top left corner of the viewport\/widget.$/;"	g	class:QCPItemPosition
PrintContoursRect	CV_IMAGE_PROCESSING/contour_processing.cpp	/^void ContoursProcessorClass::PrintContoursRect(cv::Mat& OutputImage)$/;"	f	class:ContoursProcessorClass
PrintDeviceInfo	CAMERA_INTERFACE/interface_camera_hik.cpp	/^bool CameraInterfaceHIK::PrintDeviceInfo(MV_CC_DEVICE_INFO* pstMVDevInfo)$/;"	f	class:CameraInterfaceHIK
PrintFilter	UTILITES/thread_operation_nodes.h	/^  OutputFilter PrintFilter;$/;"	m	class:ValueDebugOutput
PrintIterator	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^void MessageIteratorDense<H>::PrintIterator()$/;"	f	class:MessageIteratorDense
PrintIterator	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^void MessageIteratorGenericBase<H>::PrintIterator()$/;"	f	class:IteratorMode::MessageIteratorGenericBase
PrintLinkLineScheme	gui_sources/link_line.cpp	/^QString LinkLine::PrintLinkLineScheme()$/;"	f	class:LinkLine
PrintSettingsList	UTILITES/register_settings.h	/^    static void PrintSettingsList() $/;"	f	class:SettingsRegister
PrintpassCoords	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::PrintpassCoords(QPair<float,float> Coord)$/;"	f	class:AimingClass
ProcessAiming	controller_process_class.h	/^enum class ProcessStateList  { ProcessAiming, ProcessImitation, ProcessTestSignal, ProcessCalibration}; $/;"	m	class:ProcessStateList
ProcessControllerClass	controller_process_class.cpp	/^ProcessControllerClass::ProcessControllerClass(QObject* parrent): QObject(parrent)$/;"	f	class:ProcessControllerClass
ProcessControllerClass	controller_process_class.h	/^class ProcessControllerClass : public QObject$/;"	c
ProcessControllerInstance	controller_process_class.h	/^    static ProcessControllerClass* ProcessControllerInstance;$/;"	m	class:ProcessControllerClass
ProcessDirect1	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::ProcessDirect1()$/;"	f	class:AimingClass
ProcessDirect2	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::ProcessDirect2()$/;"	f	class:AimingClass
ProcessDirect3	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::ProcessDirect3()$/;"	f	class:AimingClass
ProcessDirect4	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::ProcessDirect4()$/;"	f	class:AimingClass
ProcessFunctionList	CV_IMAGE_PROCESSING/optimization_threshold.h	/^	std::vector<std::function<void(int, cv::Mat)>> ProcessFunctionList;$/;"	m	class:ThresholdFindingParallelDispersion
ProcessImageGPU	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^  cv::UMat ProcessImageGPU;$/;"	m	class:TrackerFirst
ProcessImitation	controller_process_class.h	/^enum class ProcessStateList  { ProcessAiming, ProcessImitation, ProcessTestSignal, ProcessCalibration}; $/;"	m	class:ProcessStateList
ProcessInfo	CV_IMAGE_PROCESSING/image_processing_node.h	/^    QString ProcessInfo = "[ NO DATA ]";$/;"	m	class:ModuleImageProcessing
ProcessInput	CV_IMAGE_PROCESSING/tracker_template.cpp	/^void ImageTrackerTemplate::ProcessInput()$/;"	f	class:ImageTrackerTemplate
ProcessLoop1	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::ProcessLoop1()$/;"	f	class:AimingClass
ProcessLoop2	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::ProcessLoop2()$/;"	f	class:AimingClass
ProcessLoop3	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::ProcessLoop3() $/;"	f	class:AimingClass
ProcessLoop4	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::ProcessLoop4() $/;"	f	class:AimingClass
ProcessLoopForCalibration	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::ProcessLoopForCalibration()$/;"	f	class:AimingClass
ProcessResult	CV_IMAGE_PROCESSING/image_finder.h	/^    cv::Mat  ProcessResult;$/;"	m	class:ImageTemplateFinder
ProcessStateList	controller_process_class.h	/^enum class ProcessStateList  { ProcessAiming, ProcessImitation, ProcessTestSignal, ProcessCalibration}; $/;"	c
ProcessTestSignal	controller_process_class.h	/^enum class ProcessStateList  { ProcessAiming, ProcessImitation, ProcessTestSignal, ProcessCalibration}; $/;"	m	class:ProcessStateList
ProcessTimePoint	CV_IMAGE_PROCESSING/image_processing_node.h	/^    std::chrono::time_point<std::chrono::high_resolution_clock> ProcessTimePoint;$/;"	m	class:ModuleImageProcessing
ProcessTimePoint2	CV_IMAGE_PROCESSING/image_processing_node.h	/^    std::chrono::time_point<std::chrono::high_resolution_clock> ProcessTimePoint2;$/;"	m	class:ModuleImageProcessing
PtrBufferBegin	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  uint8_t* PtrBufferBegin;$/;"	m	class:MessageIteratorDense
PtrBufferBegin	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	uint8_t* PtrBufferBegin;$/;"	m	class:IteratorMode::MessageIteratorGenericBase
PtrBufferEnd	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  uint8_t* PtrBufferEnd;$/;"	m	class:MessageIteratorDense
PtrBufferEnd	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	uint8_t* PtrBufferEnd;$/;"	m	class:IteratorMode::MessageIteratorGenericBase
PtrDataEnd	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  uint8_t* PtrDataEnd = 0;$/;"	m	class:MessageIteratorDense
PtrDataEnd	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	uint8_t* PtrDataEnd = 0;$/;"	m	class:IteratorMode::MessageIteratorGenericBase
PtrMessageBegin	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  uint8_t* PtrMessageBegin;$/;"	m	class:MessageIteratorDense
PtrMessageBegin	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	uint8_t* PtrMessageBegin;$/;"	m	class:IteratorMode::MessageIteratorGenericBase
PtrMessageBeginPrevious	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  uint8_t* PtrMessageBeginPrevious;$/;"	m	class:MessageIteratorDense
PtrMessageBeginPrevious	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	uint8_t* PtrMessageBeginPrevious; $/;"	m	class:IteratorMode::MessageIteratorGeneric
PtrMessageBeginPrevious	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	uint8_t* PtrMessageBeginPrevious;$/;"	m	class:IteratorMode::MessageIteratorGenericBase
PushTick	COMMON/interface_image_source.h	/^    void PushTick()$/;"	f	class:FramePeriodMeasure
PutNewFrameToStorage	CAMERA_INTERFACE/camera_interface_class.cpp	/^void CameraInterfaceAravis::PutNewFrameToStorage(ArvBuffer* buffer)$/;"	f	class:CameraInterfaceAravis
PutNewFrameToStorage	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraImageStorage::PutNewFrameToStorage(uint8_t* Data, int Size, int Width, int Height)$/;"	f	class:CameraInterfaceHIK::CameraImageStorage
QCP	gui_sources/qcustomplot.h	/^namespace QCP {$/;"	n
QCPAbstractItem	gui_sources/qcustomplot.cpp	/^QCPAbstractItem::QCPAbstractItem(QCustomPlot *parentPlot) :$/;"	f	class:QCPAbstractItem
QCPAbstractItem	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPAbstractItem : public QCPLayerable$/;"	c
QCPAbstractLegendItem	gui_sources/qcustomplot.cpp	/^QCPAbstractLegendItem::QCPAbstractLegendItem(QCPLegend *parent) :$/;"	f	class:QCPAbstractLegendItem
QCPAbstractLegendItem	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPAbstractLegendItem : public QCPLayoutElement$/;"	c
QCPAbstractPaintBuffer	gui_sources/qcustomplot.cpp	/^QCPAbstractPaintBuffer::QCPAbstractPaintBuffer(const QSize &size, double devicePixelRatio) :$/;"	f	class:QCPAbstractPaintBuffer
QCPAbstractPaintBuffer	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPAbstractPaintBuffer$/;"	c
QCPAbstractPlottable	gui_sources/qcustomplot.cpp	/^QCPAbstractPlottable::QCPAbstractPlottable(QCPAxis *keyAxis, QCPAxis *valueAxis) :$/;"	f	class:QCPAbstractPlottable
QCPAbstractPlottable	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPAbstractPlottable : public QCPLayerable$/;"	c
QCPAbstractPlottable1D	gui_sources/qcustomplot.h	/^QCPAbstractPlottable1D<DataType>::QCPAbstractPlottable1D(QCPAxis *keyAxis, QCPAxis *valueAxis) :$/;"	f	class:QCPAbstractPlottable1D
QCPAbstractPlottable1D	gui_sources/qcustomplot.h	/^class QCPAbstractPlottable1D : public QCPAbstractPlottable, public QCPPlottableInterface1D \/\/ no QCP_LIB_DECL, template class ends up in header (cpp included below)$/;"	c
QCPAxis	gui_sources/qcustomplot.cpp	/^QCPAxis::QCPAxis(QCPAxisRect *parent, AxisType type) :$/;"	f	class:QCPAxis
QCPAxis	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPAxis : public QCPLayerable$/;"	c
QCPAxisPainterPrivate	gui_sources/qcustomplot.cpp	/^QCPAxisPainterPrivate::QCPAxisPainterPrivate(QCustomPlot *parentPlot) :$/;"	f	class:QCPAxisPainterPrivate
QCPAxisPainterPrivate	gui_sources/qcustomplot.h	/^class QCPAxisPainterPrivate$/;"	c
QCPAxisRect	gui_sources/qcustomplot.cpp	/^QCPAxisRect::QCPAxisRect(QCustomPlot *parentPlot, bool setupDefaultAxes) :$/;"	f	class:QCPAxisRect
QCPAxisRect	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPAxisRect : public QCPLayoutElement$/;"	c
QCPAxisTicker	gui_sources/qcustomplot.cpp	/^QCPAxisTicker::QCPAxisTicker() :$/;"	f	class:QCPAxisTicker
QCPAxisTicker	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPAxisTicker$/;"	c
QCPAxisTickerDateTime	gui_sources/qcustomplot.cpp	/^QCPAxisTickerDateTime::QCPAxisTickerDateTime() :$/;"	f	class:QCPAxisTickerDateTime
QCPAxisTickerDateTime	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPAxisTickerDateTime : public QCPAxisTicker$/;"	c
QCPAxisTickerFixed	gui_sources/qcustomplot.cpp	/^QCPAxisTickerFixed::QCPAxisTickerFixed() :$/;"	f	class:QCPAxisTickerFixed
QCPAxisTickerFixed	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPAxisTickerFixed : public QCPAxisTicker$/;"	c
QCPAxisTickerLog	gui_sources/qcustomplot.cpp	/^QCPAxisTickerLog::QCPAxisTickerLog() :$/;"	f	class:QCPAxisTickerLog
QCPAxisTickerLog	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPAxisTickerLog : public QCPAxisTicker$/;"	c
QCPAxisTickerPi	gui_sources/qcustomplot.cpp	/^QCPAxisTickerPi::QCPAxisTickerPi() :$/;"	f	class:QCPAxisTickerPi
QCPAxisTickerPi	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPAxisTickerPi : public QCPAxisTicker$/;"	c
QCPAxisTickerText	gui_sources/qcustomplot.cpp	/^QCPAxisTickerText::QCPAxisTickerText() :$/;"	f	class:QCPAxisTickerText
QCPAxisTickerText	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPAxisTickerText : public QCPAxisTicker$/;"	c
QCPAxisTickerTime	gui_sources/qcustomplot.cpp	/^QCPAxisTickerTime::QCPAxisTickerTime() :$/;"	f	class:QCPAxisTickerTime
QCPAxisTickerTime	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPAxisTickerTime : public QCPAxisTicker$/;"	c
QCPBars	gui_sources/qcustomplot.cpp	/^QCPBars::QCPBars(QCPAxis *keyAxis, QCPAxis *valueAxis) :$/;"	f	class:QCPBars
QCPBars	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPBars : public QCPAbstractPlottable1D<QCPBarsData>$/;"	c
QCPBarsData	gui_sources/qcustomplot.cpp	/^QCPBarsData::QCPBarsData() :$/;"	f	class:QCPBarsData
QCPBarsData	gui_sources/qcustomplot.cpp	/^QCPBarsData::QCPBarsData(double key, double value) :$/;"	f	class:QCPBarsData
QCPBarsData	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPBarsData$/;"	c
QCPBarsDataContainer	gui_sources/qcustomplot.h	/^typedef QCPDataContainer<QCPBarsData> QCPBarsDataContainer;$/;"	t
QCPBarsGroup	gui_sources/qcustomplot.cpp	/^QCPBarsGroup::QCPBarsGroup(QCustomPlot *parentPlot) :$/;"	f	class:QCPBarsGroup
QCPBarsGroup	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPBarsGroup : public QObject$/;"	c
QCPColorGradient	gui_sources/qcustomplot.cpp	/^QCPColorGradient::QCPColorGradient() :$/;"	f	class:QCPColorGradient
QCPColorGradient	gui_sources/qcustomplot.cpp	/^QCPColorGradient::QCPColorGradient(GradientPreset preset) :$/;"	f	class:QCPColorGradient
QCPColorGradient	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPColorGradient$/;"	c
QCPColorMap	gui_sources/qcustomplot.cpp	/^QCPColorMap::QCPColorMap(QCPAxis *keyAxis, QCPAxis *valueAxis) :$/;"	f	class:QCPColorMap
QCPColorMap	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPColorMap : public QCPAbstractPlottable$/;"	c
QCPColorMapData	gui_sources/qcustomplot.cpp	/^QCPColorMapData::QCPColorMapData(const QCPColorMapData &other) :$/;"	f	class:QCPColorMapData
QCPColorMapData	gui_sources/qcustomplot.cpp	/^QCPColorMapData::QCPColorMapData(int keySize, int valueSize, const QCPRange &keyRange, const QCPRange &valueRange) :$/;"	f	class:QCPColorMapData
QCPColorMapData	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPColorMapData$/;"	c
QCPColorScale	gui_sources/qcustomplot.cpp	/^QCPColorScale::QCPColorScale(QCustomPlot *parentPlot) :$/;"	f	class:QCPColorScale
QCPColorScale	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPColorScale : public QCPLayoutElement$/;"	c
QCPColorScaleAxisRectPrivate	gui_sources/qcustomplot.cpp	/^QCPColorScaleAxisRectPrivate::QCPColorScaleAxisRectPrivate(QCPColorScale *parentColorScale) :$/;"	f	class:QCPColorScaleAxisRectPrivate
QCPColorScaleAxisRectPrivate	gui_sources/qcustomplot.h	/^class QCPColorScaleAxisRectPrivate : public QCPAxisRect$/;"	c
QCPCurve	gui_sources/qcustomplot.cpp	/^QCPCurve::QCPCurve(QCPAxis *keyAxis, QCPAxis *valueAxis) :$/;"	f	class:QCPCurve
QCPCurve	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPCurve : public QCPAbstractPlottable1D<QCPCurveData>$/;"	c
QCPCurveData	gui_sources/qcustomplot.cpp	/^QCPCurveData::QCPCurveData() :$/;"	f	class:QCPCurveData
QCPCurveData	gui_sources/qcustomplot.cpp	/^QCPCurveData::QCPCurveData(double t, double key, double value) :$/;"	f	class:QCPCurveData
QCPCurveData	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPCurveData$/;"	c
QCPCurveDataContainer	gui_sources/qcustomplot.h	/^typedef QCPDataContainer<QCPCurveData> QCPCurveDataContainer;$/;"	t
QCPDataContainer	gui_sources/qcustomplot.h	/^QCPDataContainer<DataType>::QCPDataContainer() :$/;"	f	class:QCPDataContainer
QCPDataContainer	gui_sources/qcustomplot.h	/^class QCPDataContainer \/\/ no QCP_LIB_DECL, template class ends up in header (cpp included below)$/;"	c
QCPDataRange	gui_sources/qcustomplot.cpp	/^QCPDataRange::QCPDataRange() :$/;"	f	class:QCPDataRange
QCPDataRange	gui_sources/qcustomplot.cpp	/^QCPDataRange::QCPDataRange(int begin, int end) :$/;"	f	class:QCPDataRange
QCPDataRange	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPDataRange$/;"	c
QCPDataSelection	gui_sources/qcustomplot.cpp	/^QCPDataSelection::QCPDataSelection()$/;"	f	class:QCPDataSelection
QCPDataSelection	gui_sources/qcustomplot.cpp	/^QCPDataSelection::QCPDataSelection(const QCPDataRange &range)$/;"	f	class:QCPDataSelection
QCPDataSelection	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPDataSelection$/;"	c
QCPErrorBars	gui_sources/qcustomplot.cpp	/^QCPErrorBars::QCPErrorBars(QCPAxis *keyAxis, QCPAxis *valueAxis) :$/;"	f	class:QCPErrorBars
QCPErrorBars	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPErrorBars : public QCPAbstractPlottable, public QCPPlottableInterface1D$/;"	c
QCPErrorBarsData	gui_sources/qcustomplot.cpp	/^QCPErrorBarsData::QCPErrorBarsData() :$/;"	f	class:QCPErrorBarsData
QCPErrorBarsData	gui_sources/qcustomplot.cpp	/^QCPErrorBarsData::QCPErrorBarsData(double error) :$/;"	f	class:QCPErrorBarsData
QCPErrorBarsData	gui_sources/qcustomplot.cpp	/^QCPErrorBarsData::QCPErrorBarsData(double errorMinus, double errorPlus) :$/;"	f	class:QCPErrorBarsData
QCPErrorBarsData	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPErrorBarsData$/;"	c
QCPErrorBarsDataContainer	gui_sources/qcustomplot.h	/^typedef QVector<QCPErrorBarsData> QCPErrorBarsDataContainer;$/;"	t
QCPFinancial	gui_sources/qcustomplot.cpp	/^QCPFinancial::QCPFinancial(QCPAxis *keyAxis, QCPAxis *valueAxis) :$/;"	f	class:QCPFinancial
QCPFinancial	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPFinancial : public QCPAbstractPlottable1D<QCPFinancialData>$/;"	c
QCPFinancialData	gui_sources/qcustomplot.cpp	/^QCPFinancialData::QCPFinancialData() :$/;"	f	class:QCPFinancialData
QCPFinancialData	gui_sources/qcustomplot.cpp	/^QCPFinancialData::QCPFinancialData(double key, double open, double high, double low, double close) :$/;"	f	class:QCPFinancialData
QCPFinancialData	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPFinancialData$/;"	c
QCPFinancialDataContainer	gui_sources/qcustomplot.h	/^typedef QCPDataContainer<QCPFinancialData> QCPFinancialDataContainer;$/;"	t
QCPGraph	gui_sources/qcustomplot.cpp	/^QCPGraph::QCPGraph(QCPAxis *keyAxis, QCPAxis *valueAxis) :$/;"	f	class:QCPGraph
QCPGraph	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPGraph : public QCPAbstractPlottable1D<QCPGraphData>$/;"	c
QCPGraphData	gui_sources/qcustomplot.cpp	/^QCPGraphData::QCPGraphData() :$/;"	f	class:QCPGraphData
QCPGraphData	gui_sources/qcustomplot.cpp	/^QCPGraphData::QCPGraphData(double key, double value) :$/;"	f	class:QCPGraphData
QCPGraphData	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPGraphData$/;"	c
QCPGraphDataContainer	gui_sources/qcustomplot.h	/^typedef QCPDataContainer<QCPGraphData> QCPGraphDataContainer;$/;"	t
QCPGrid	gui_sources/qcustomplot.cpp	/^QCPGrid::QCPGrid(QCPAxis *parentAxis) :$/;"	f	class:QCPGrid
QCPGrid	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPGrid :public QCPLayerable$/;"	c
QCPItemAnchor	gui_sources/qcustomplot.cpp	/^QCPItemAnchor::QCPItemAnchor(QCustomPlot *parentPlot, QCPAbstractItem *parentItem, const QString &name, int anchorId) :$/;"	f	class:QCPItemAnchor
QCPItemAnchor	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPItemAnchor$/;"	c
QCPItemBracket	gui_sources/qcustomplot.cpp	/^QCPItemBracket::QCPItemBracket(QCustomPlot *parentPlot) :$/;"	f	class:QCPItemBracket
QCPItemBracket	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPItemBracket : public QCPAbstractItem$/;"	c
QCPItemCurve	gui_sources/qcustomplot.cpp	/^QCPItemCurve::QCPItemCurve(QCustomPlot *parentPlot) :$/;"	f	class:QCPItemCurve
QCPItemCurve	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPItemCurve : public QCPAbstractItem$/;"	c
QCPItemEllipse	gui_sources/qcustomplot.cpp	/^QCPItemEllipse::QCPItemEllipse(QCustomPlot *parentPlot) :$/;"	f	class:QCPItemEllipse
QCPItemEllipse	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPItemEllipse : public QCPAbstractItem$/;"	c
QCPItemLine	gui_sources/qcustomplot.cpp	/^QCPItemLine::QCPItemLine(QCustomPlot *parentPlot) :$/;"	f	class:QCPItemLine
QCPItemLine	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPItemLine : public QCPAbstractItem$/;"	c
QCPItemPixmap	gui_sources/qcustomplot.cpp	/^QCPItemPixmap::QCPItemPixmap(QCustomPlot *parentPlot) :$/;"	f	class:QCPItemPixmap
QCPItemPixmap	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPItemPixmap : public QCPAbstractItem$/;"	c
QCPItemPosition	gui_sources/qcustomplot.cpp	/^QCPItemPosition::QCPItemPosition(QCustomPlot *parentPlot, QCPAbstractItem *parentItem, const QString &name) :$/;"	f	class:QCPItemPosition
QCPItemPosition	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPItemPosition : public QCPItemAnchor$/;"	c
QCPItemRect	gui_sources/qcustomplot.cpp	/^QCPItemRect::QCPItemRect(QCustomPlot *parentPlot) :$/;"	f	class:QCPItemRect
QCPItemRect	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPItemRect : public QCPAbstractItem$/;"	c
QCPItemStraightLine	gui_sources/qcustomplot.cpp	/^QCPItemStraightLine::QCPItemStraightLine(QCustomPlot *parentPlot) :$/;"	f	class:QCPItemStraightLine
QCPItemStraightLine	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPItemStraightLine : public QCPAbstractItem$/;"	c
QCPItemText	gui_sources/qcustomplot.cpp	/^QCPItemText::QCPItemText(QCustomPlot *parentPlot) :$/;"	f	class:QCPItemText
QCPItemText	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPItemText : public QCPAbstractItem$/;"	c
QCPItemTracer	gui_sources/qcustomplot.cpp	/^QCPItemTracer::QCPItemTracer(QCustomPlot *parentPlot) :$/;"	f	class:QCPItemTracer
QCPItemTracer	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPItemTracer : public QCPAbstractItem$/;"	c
QCPLabelPainterPrivate	gui_sources/qcustomplot.cpp	/^QCPLabelPainterPrivate::QCPLabelPainterPrivate(QCustomPlot *parentPlot) :$/;"	f	class:QCPLabelPainterPrivate
QCPLabelPainterPrivate	gui_sources/qcustomplot.h	/^class QCPLabelPainterPrivate$/;"	c
QCPLayer	gui_sources/qcustomplot.cpp	/^QCPLayer::QCPLayer(QCustomPlot *parentPlot, const QString &layerName) :$/;"	f	class:QCPLayer
QCPLayer	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPLayer : public QObject$/;"	c
QCPLayerable	gui_sources/qcustomplot.cpp	/^QCPLayerable::QCPLayerable(QCustomPlot *plot, QString targetLayer, QCPLayerable *parentLayerable) :$/;"	f	class:QCPLayerable
QCPLayerable	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPLayerable : public QObject$/;"	c
QCPLayout	gui_sources/qcustomplot.cpp	/^QCPLayout::QCPLayout()$/;"	f	class:QCPLayout
QCPLayout	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPLayout : public QCPLayoutElement$/;"	c
QCPLayoutElement	gui_sources/qcustomplot.cpp	/^QCPLayoutElement::QCPLayoutElement(QCustomPlot *parentPlot) :$/;"	f	class:QCPLayoutElement
QCPLayoutElement	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPLayoutElement : public QCPLayerable$/;"	c
QCPLayoutGrid	gui_sources/qcustomplot.cpp	/^QCPLayoutGrid::QCPLayoutGrid() :$/;"	f	class:QCPLayoutGrid
QCPLayoutGrid	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPLayoutGrid : public QCPLayout$/;"	c
QCPLayoutInset	gui_sources/qcustomplot.cpp	/^QCPLayoutInset::QCPLayoutInset()$/;"	f	class:QCPLayoutInset
QCPLayoutInset	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPLayoutInset : public QCPLayout$/;"	c
QCPLegend	gui_sources/qcustomplot.cpp	/^QCPLegend::QCPLegend() :$/;"	f	class:QCPLegend
QCPLegend	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPLegend : public QCPLayoutGrid$/;"	c
QCPLineEnding	gui_sources/qcustomplot.cpp	/^QCPLineEnding::QCPLineEnding() :$/;"	f	class:QCPLineEnding
QCPLineEnding	gui_sources/qcustomplot.cpp	/^QCPLineEnding::QCPLineEnding(QCPLineEnding::EndingStyle style, double width, double length, bool inverted) :$/;"	f	class:QCPLineEnding
QCPLineEnding	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPLineEnding$/;"	c
QCPMarginGroup	gui_sources/qcustomplot.cpp	/^QCPMarginGroup::QCPMarginGroup(QCustomPlot *parentPlot) :$/;"	f	class:QCPMarginGroup
QCPMarginGroup	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPMarginGroup : public QObject$/;"	c
QCPPaintBufferGlFbo	gui_sources/qcustomplot.cpp	/^QCPPaintBufferGlFbo::QCPPaintBufferGlFbo(const QSize &size, double devicePixelRatio, QWeakPointer<QOpenGLContext> glContext, QWeakPointer<QOpenGLPaintDevice> glPaintDevice) :$/;"	f	class:QCPPaintBufferGlFbo
QCPPaintBufferGlFbo	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPPaintBufferGlFbo : public QCPAbstractPaintBuffer$/;"	c
QCPPaintBufferGlPbuffer	gui_sources/qcustomplot.cpp	/^QCPPaintBufferGlPbuffer::QCPPaintBufferGlPbuffer(const QSize &size, double devicePixelRatio, int multisamples) :$/;"	f	class:QCPPaintBufferGlPbuffer
QCPPaintBufferGlPbuffer	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPPaintBufferGlPbuffer : public QCPAbstractPaintBuffer$/;"	c
QCPPaintBufferPixmap	gui_sources/qcustomplot.cpp	/^QCPPaintBufferPixmap::QCPPaintBufferPixmap(const QSize &size, double devicePixelRatio) :$/;"	f	class:QCPPaintBufferPixmap
QCPPaintBufferPixmap	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPPaintBufferPixmap : public QCPAbstractPaintBuffer$/;"	c
QCPPainter	gui_sources/qcustomplot.cpp	/^QCPPainter::QCPPainter() :$/;"	f	class:QCPPainter
QCPPainter	gui_sources/qcustomplot.cpp	/^QCPPainter::QCPPainter(QPaintDevice *device) :$/;"	f	class:QCPPainter
QCPPainter	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPPainter : public QPainter$/;"	c
QCPPlottableInterface1D	gui_sources/qcustomplot.h	/^class QCPPlottableInterface1D$/;"	c
QCPPlottableLegendItem	gui_sources/qcustomplot.cpp	/^QCPPlottableLegendItem::QCPPlottableLegendItem(QCPLegend *parent, QCPAbstractPlottable *plottable) :$/;"	f	class:QCPPlottableLegendItem
QCPPlottableLegendItem	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPPlottableLegendItem : public QCPAbstractLegendItem$/;"	c
QCPPolarAxisAngular	gui_sources/qcustomplot.cpp	/^QCPPolarAxisAngular::QCPPolarAxisAngular(QCustomPlot *parentPlot) :$/;"	f	class:QCPPolarAxisAngular
QCPPolarAxisAngular	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPPolarAxisAngular : public QCPLayoutElement$/;"	c
QCPPolarAxisRadial	gui_sources/qcustomplot.cpp	/^QCPPolarAxisRadial::QCPPolarAxisRadial(QCPPolarAxisAngular *parent) :$/;"	f	class:QCPPolarAxisRadial
QCPPolarAxisRadial	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPPolarAxisRadial : public QCPLayerable$/;"	c
QCPPolarGraph	gui_sources/qcustomplot.cpp	/^QCPPolarGraph::QCPPolarGraph(QCPPolarAxisAngular *keyAxis, QCPPolarAxisRadial *valueAxis) :$/;"	f	class:QCPPolarGraph
QCPPolarGraph	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPPolarGraph : public QCPLayerable$/;"	c
QCPPolarGrid	gui_sources/qcustomplot.cpp	/^QCPPolarGrid::QCPPolarGrid(QCPPolarAxisAngular *parentAxis) :$/;"	f	class:QCPPolarGrid
QCPPolarGrid	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPPolarGrid :public QCPLayerable$/;"	c
QCPPolarLegendItem	gui_sources/qcustomplot.cpp	/^QCPPolarLegendItem::QCPPolarLegendItem(QCPLegend *parent, QCPPolarGraph *graph) :$/;"	f	class:QCPPolarLegendItem
QCPPolarLegendItem	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPPolarLegendItem : public QCPAbstractLegendItem$/;"	c
QCPRange	gui_sources/qcustomplot.cpp	/^QCPRange::QCPRange() :$/;"	f	class:QCPRange
QCPRange	gui_sources/qcustomplot.cpp	/^QCPRange::QCPRange(double lower, double upper) :$/;"	f	class:QCPRange
QCPRange	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPRange$/;"	c
QCPScatterStyle	gui_sources/qcustomplot.cpp	/^QCPScatterStyle::QCPScatterStyle() :$/;"	f	class:QCPScatterStyle
QCPScatterStyle	gui_sources/qcustomplot.cpp	/^QCPScatterStyle::QCPScatterStyle(ScatterShape shape, const QColor &color, const QColor &fill, double size) :$/;"	f	class:QCPScatterStyle
QCPScatterStyle	gui_sources/qcustomplot.cpp	/^QCPScatterStyle::QCPScatterStyle(ScatterShape shape, const QColor &color, double size) :$/;"	f	class:QCPScatterStyle
QCPScatterStyle	gui_sources/qcustomplot.cpp	/^QCPScatterStyle::QCPScatterStyle(ScatterShape shape, const QPen &pen, const QBrush &brush, double size) :$/;"	f	class:QCPScatterStyle
QCPScatterStyle	gui_sources/qcustomplot.cpp	/^QCPScatterStyle::QCPScatterStyle(ScatterShape shape, double size) :$/;"	f	class:QCPScatterStyle
QCPScatterStyle	gui_sources/qcustomplot.cpp	/^QCPScatterStyle::QCPScatterStyle(const QPainterPath &customPath, const QPen &pen, const QBrush &brush, double size) :$/;"	f	class:QCPScatterStyle
QCPScatterStyle	gui_sources/qcustomplot.cpp	/^QCPScatterStyle::QCPScatterStyle(const QPixmap &pixmap) :$/;"	f	class:QCPScatterStyle
QCPScatterStyle	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPScatterStyle$/;"	c
QCPSelectionDecorator	gui_sources/qcustomplot.cpp	/^QCPSelectionDecorator::QCPSelectionDecorator() :$/;"	f	class:QCPSelectionDecorator
QCPSelectionDecorator	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPSelectionDecorator$/;"	c
QCPSelectionDecoratorBracket	gui_sources/qcustomplot.cpp	/^QCPSelectionDecoratorBracket::QCPSelectionDecoratorBracket() :$/;"	f	class:QCPSelectionDecoratorBracket
QCPSelectionDecoratorBracket	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPSelectionDecoratorBracket : public QCPSelectionDecorator$/;"	c
QCPSelectionRect	gui_sources/qcustomplot.cpp	/^QCPSelectionRect::QCPSelectionRect(QCustomPlot *parentPlot) :$/;"	f	class:QCPSelectionRect
QCPSelectionRect	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPSelectionRect : public QCPLayerable$/;"	c
QCPStatisticalBox	gui_sources/qcustomplot.cpp	/^QCPStatisticalBox::QCPStatisticalBox(QCPAxis *keyAxis, QCPAxis *valueAxis) :$/;"	f	class:QCPStatisticalBox
QCPStatisticalBox	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPStatisticalBox : public QCPAbstractPlottable1D<QCPStatisticalBoxData>$/;"	c
QCPStatisticalBoxData	gui_sources/qcustomplot.cpp	/^QCPStatisticalBoxData::QCPStatisticalBoxData() :$/;"	f	class:QCPStatisticalBoxData
QCPStatisticalBoxData	gui_sources/qcustomplot.cpp	/^QCPStatisticalBoxData::QCPStatisticalBoxData(double key, double minimum, double lowerQuartile, double median, double upperQuartile, double maximum, const QVector<double> &outliers) :$/;"	f	class:QCPStatisticalBoxData
QCPStatisticalBoxData	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPStatisticalBoxData$/;"	c
QCPStatisticalBoxDataContainer	gui_sources/qcustomplot.h	/^typedef QCPDataContainer<QCPStatisticalBoxData> QCPStatisticalBoxDataContainer;$/;"	t
QCPTextElement	gui_sources/qcustomplot.cpp	/^QCPTextElement::QCPTextElement(QCustomPlot *parentPlot) :$/;"	f	class:QCPTextElement
QCPTextElement	gui_sources/qcustomplot.cpp	/^QCPTextElement::QCPTextElement(QCustomPlot *parentPlot, const QString &text) :$/;"	f	class:QCPTextElement
QCPTextElement	gui_sources/qcustomplot.cpp	/^QCPTextElement::QCPTextElement(QCustomPlot *parentPlot, const QString &text, const QFont &font) :$/;"	f	class:QCPTextElement
QCPTextElement	gui_sources/qcustomplot.cpp	/^QCPTextElement::QCPTextElement(QCustomPlot *parentPlot, const QString &text, const QString &fontFamily, double pointSize) :$/;"	f	class:QCPTextElement
QCPTextElement	gui_sources/qcustomplot.cpp	/^QCPTextElement::QCPTextElement(QCustomPlot *parentPlot, const QString &text, double pointSize) :$/;"	f	class:QCPTextElement
QCPTextElement	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPTextElement : public QCPLayoutElement$/;"	c
QCPVector2D	gui_sources/qcustomplot.cpp	/^QCPVector2D::QCPVector2D() :$/;"	f	class:QCPVector2D
QCPVector2D	gui_sources/qcustomplot.cpp	/^QCPVector2D::QCPVector2D(const QPoint &point) :$/;"	f	class:QCPVector2D
QCPVector2D	gui_sources/qcustomplot.cpp	/^QCPVector2D::QCPVector2D(const QPointF &point) :$/;"	f	class:QCPVector2D
QCPVector2D	gui_sources/qcustomplot.cpp	/^QCPVector2D::QCPVector2D(double x, double y) :$/;"	f	class:QCPVector2D
QCPVector2D	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCPVector2D$/;"	c
QCP_DEVICEPIXELRATIO_FLOAT	gui_sources/qcustomplot.h	46;"	d
QCP_DEVICEPIXELRATIO_SUPPORTED	gui_sources/qcustomplot.h	44;"	d
QCP_LIB_DECL	gui_sources/qcustomplot.h	139;"	d
QCP_LIB_DECL	gui_sources/qcustomplot.h	141;"	d
QCP_LIB_DECL	gui_sources/qcustomplot.h	143;"	d
QCP_LIB_DECL	gui_sources/qcustomplot.h	145;"	d
QCP_OPENGL_FBO	gui_sources/qcustomplot.h	36;"	d
QCP_OPENGL_OFFSCREENSURFACE	gui_sources/qcustomplot.h	39;"	d
QCP_OPENGL_PBUFFER	gui_sources/qcustomplot.h	34;"	d
QCUSTOMPLOT_H	gui_sources/qcustomplot.h	27;"	d
QCUSTOMPLOT_VERSION	gui_sources/qcustomplot.h	135;"	d
QCUSTOMPLOT_VERSION_STR	gui_sources/qcustomplot.h	134;"	d
QCustomPlot	gui_sources/qcustomplot.cpp	/^QCustomPlot::QCustomPlot(QWidget *parent) :$/;"	f	class:QCustomPlot
QCustomPlot	gui_sources/qcustomplot.h	/^class QCP_LIB_DECL QCustomPlot : public QWidget$/;"	c
QDebugStream	ROTATE_OPTIMIZATION/RotationContainerLib/DebugStream.h	/^	QDebugStream(std::ostream &stream) : m_stream(stream)$/;"	f	class:QDebugStream
QDebugStream	ROTATE_OPTIMIZATION/RotationContainerLib/DebugStream.h	/^class QDebugStream : public std::basic_streambuf<char>$/;"	c
QT_CORE_LIB	build/ImageProcProject_autogen/moc_predefs.h	341;"	d
QT_GUI_LIB	build/ImageProcProject_autogen/moc_predefs.h	20;"	d
QT_NAMESPACE	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	/^inline namespace QT_NAMESPACE {$/;"	n	file:
QT_NETWORK_LIB	build/ImageProcProject_autogen/moc_predefs.h	293;"	d
QT_NO_DEBUG	build/ImageProcProject_autogen/moc_predefs.h	63;"	d
QT_PRINTSUPPORT_LIB	build/ImageProcProject_autogen/moc_predefs.h	437;"	d
QT_RCC_MANGLE_NAMESPACE	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	1784;"	d	file:
QT_RCC_MANGLE_NAMESPACE	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	1788;"	d	file:
QT_RCC_MANGLE_NAMESPACE0	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	1781;"	d	file:
QT_RCC_MANGLE_NAMESPACE1	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	1782;"	d	file:
QT_RCC_MANGLE_NAMESPACE2	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	1783;"	d	file:
QT_RCC_PREPEND_NAMESPACE	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	1780;"	d	file:
QT_RCC_PREPEND_NAMESPACE	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	1787;"	d	file:
QT_SERIALBUS_LIB	build/ImageProcProject_autogen/moc_predefs.h	156;"	d
QT_WIDGETS_LIB	build/ImageProcProject_autogen/moc_predefs.h	152;"	d
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_labelimage.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_link_line.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	31;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_aiming_control.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_camera_control.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_container_group.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_imitator_control.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_main_window.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_image_display.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_text_display.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_process_controller.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_control.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_scene_node_interface.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_table_group.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/EWIEGA46WW/moc_controller_process_class.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_finder.cpp	27;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_processing_node.cpp	27;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	27;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_neural.cpp	27;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_template.cpp	27;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/IUOK47BH6O/moc_interface_camera_hik.cpp	27;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	27;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/SERQFGPBY3/moc_sinus_generator_class.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/SERQFGPBY3/moc_widget_sinus_source.cpp	28;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	27;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_tcp_interface.cpp	27;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_udp_interface.cpp	27;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	27;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/XJUVE5KTRL/moc_interface_image_source.cpp	27;"	d	file:
Q_CONSTINIT	build/ImageProcProject_autogen/XWFUSFUWCP/moc_device_rotary_interface.cpp	27;"	d	file:
Q_DEBUG_H	ROTATE_OPTIMIZATION/RotationContainerLib/DebugStream.h	2;"	d
Q_DECL_EXPORT	PYTORCH_PROCESSING/TorchProcessing_global.h	5;"	d
Q_DECL_EXPORT	PYTORCH_PROCESSING/TorchProcessing_global.h	8;"	d
Q_DECL_EXPORT	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOptimization_global.h	5;"	d
Q_DECL_EXPORT	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOptimization_global.h	8;"	d
Q_DECL_IMPORT	PYTORCH_PROCESSING/TorchProcessing_global.h	6;"	d
Q_DECL_IMPORT	PYTORCH_PROCESSING/TorchProcessing_global.h	9;"	d
Q_DECL_IMPORT	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOptimization_global.h	6;"	d
Q_DECL_IMPORT	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOptimization_global.h	9;"	d
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractLegendItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;$/;"	m	class:QCPAxis
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;$/;"	m	class:QCPLegend
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisAngular
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisRadial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPDataSelection selectTestRect(const QRectF &rect, bool onlySelectable) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable1D
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPDataSelection selectTestRect(const QRectF &rect, bool onlySelectable) const Q_DECL_OVERRIDE;$/;"	m	class:QCPBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPDataSelection selectTestRect(const QRectF &rect, bool onlySelectable) const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPDataSelection selectTestRect(const QRectF &rect, bool onlySelectable) const Q_DECL_OVERRIDE;$/;"	m	class:QCPFinancial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPDataSelection selectTestRect(const QRectF &rect, bool onlySelectable) const Q_DECL_OVERRIDE;$/;"	m	class:QCPStatisticalBox
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPLayoutElement* elementAt(int index) const Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutGrid
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPLayoutElement* elementAt(int index) const Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutInset
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPLayoutElement* takeAt(int index) Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutGrid
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPLayoutElement* takeAt(int index) Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutInset
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPPainter *startPainting() Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferGlFbo
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPPainter *startPainting() Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferGlPbuffer
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPPainter *startPainting() Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferPixmap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange dataValueRange(int index) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable1D
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange dataValueRange(int index) const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const Q_DECL_OVERRIDE;$/;"	m	class:QCPBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const Q_DECL_OVERRIDE;$/;"	m	class:QCPColorMap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const Q_DECL_OVERRIDE;$/;"	m	class:QCPCurve
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const Q_DECL_OVERRIDE;$/;"	m	class:QCPFinancial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const Q_DECL_OVERRIDE;$/;"	m	class:QCPGraph
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const Q_DECL_OVERRIDE;$/;"	m	class:QCPStatisticalBox
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getValueRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;$/;"	m	class:QCPBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getValueRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;$/;"	m	class:QCPColorMap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getValueRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;$/;"	m	class:QCPCurve
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getValueRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getValueRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;$/;"	m	class:QCPFinancial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getValueRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;$/;"	m	class:QCPGraph
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QCPRange getValueRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;$/;"	m	class:QCPStatisticalBox
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QList<QCPLayoutElement*> elements(bool recursive) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QList<QCPLayoutElement*> elements(bool recursive) const Q_DECL_OVERRIDE;$/;"	m	class:QCPLayout
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QList<QCPLayoutElement*> elements(bool recursive) const Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutGrid
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QList<QCPLayoutElement*> elements(bool recursive) const Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisAngular
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QPointF anchorPixelPosition(int anchorId) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemBracket
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QPointF anchorPixelPosition(int anchorId) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemEllipse
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QPointF anchorPixelPosition(int anchorId) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemPixmap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QPointF anchorPixelPosition(int anchorId) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QPointF anchorPixelPosition(int anchorId) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemText
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QPointF dataPixelPosition(int index) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable1D
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QPointF dataPixelPosition(int index) const Q_DECL_OVERRIDE;$/;"	m	class:QCPBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QPointF dataPixelPosition(int index) const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QPointF pixelPosition() const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemPosition
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QRect clipRect() const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QRect clipRect() const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractLegendItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QRect clipRect() const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QSize maximumOuterSizeHint() const Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutGrid
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QSize maximumOuterSizeHint() const Q_DECL_OVERRIDE;$/;"	m	class:QCPTextElement
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QSize minimumOuterSizeHint() const Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutGrid
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QSize minimumOuterSizeHint() const Q_DECL_OVERRIDE;$/;"	m	class:QCPPlottableLegendItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QSize minimumOuterSizeHint() const Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarLegendItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QSize minimumOuterSizeHint() const Q_DECL_OVERRIDE;$/;"	m	class:QCPTextElement
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QSize minimumSizeHint() const Q_DECL_OVERRIDE;$/;"	m	class:QCustomPlot
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QSize sizeHint() const Q_DECL_OVERRIDE;$/;"	m	class:QCustomPlot
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QString getTickLabel(double tick, const QLocale &locale, QChar formatChar, int precision) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerDateTime
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QString getTickLabel(double tick, const QLocale &locale, QChar formatChar, int precision) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerPi
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QString getTickLabel(double tick, const QLocale &locale, QChar formatChar, int precision) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerText
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QString getTickLabel(double tick, const QLocale &locale, QChar formatChar, int precision) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerTime
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QVector<double> createTickVector(double tickStep, const QCPRange &range) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerDateTime
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QVector<double> createTickVector(double tickStep, const QCPRange &range) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerLog
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual QVector<double> createTickVector(double tickStep, const QCPRange &range) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerText
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual bool sortKeyIsMainKey() const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable1D
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual bool sortKeyIsMainKey() const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual bool take(QCPLayoutElement* element) Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutGrid
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual bool take(QCPLayoutElement* element) Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutInset
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double dataMainKey(int index) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable1D
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double dataMainKey(int index) const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double dataMainValue(int index) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable1D
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double dataMainValue(int index) const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double dataSortKey(int index) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable1D
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double dataSortKey(int index) const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double getTickStep(const QCPRange &range) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerDateTime
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double getTickStep(const QCPRange &range) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerFixed
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double getTickStep(const QCPRange &range) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerPi
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double getTickStep(const QCPRange &range) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerText
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double getTickStep(const QCPRange &range) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerTime
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=0) const Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisAngular
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=0) const Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisRadial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE = 0; \/\/ actually introduced in QCPLayerable as non-pure, but we want to force reimplementation for plottables$/;"	m	class:QCPAbstractPlottable
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE = 0;$/;"	m	class:QCPAbstractItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractLegendItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable1D
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAxis
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPColorMap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPCurve
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPFinancial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPGraph
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemBracket
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemCurve
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemEllipse
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemLine
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemPixmap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemStraightLine
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemText
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPItemTracer
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutElement
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutInset
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPLegend
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPStatisticalBox
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE;$/;"	m	class:QCPTextElement
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual int calculateAutoMargin(QCP::MarginSide side) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual int dataCount() const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable1D
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual int dataCount() const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual int elementCount() const Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutInset
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual int findBegin(double sortKey, bool expandedRange=true) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable1D
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual int findBegin(double sortKey, bool expandedRange=true) const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual int findEnd(double sortKey, bool expandedRange=true) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable1D
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual int findEnd(double sortKey, bool expandedRange=true) const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual int getSubTickCount(double tickStep) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerDateTime
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual int getSubTickCount(double tickStep) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerLog
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual int getSubTickCount(double tickStep) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerPi
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual int getSubTickCount(double tickStep) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerText
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual int getSubTickCount(double tickStep) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisTickerTime
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractLegendItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAxis
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPColorScale
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPGrid
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPLegend
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisAngular
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisRadial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarGrid
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPSelectionRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPTextElement
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void deselectEvent(bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void deselectEvent(bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractLegendItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void deselectEvent(bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void deselectEvent(bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxis
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void deselectEvent(bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPLegend
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void deselectEvent(bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisRadial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void deselectEvent(bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPTextElement
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void donePainting() Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferGlFbo
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE = 0;$/;"	m	class:QCPAbstractItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE = 0;$/;"	m	class:QCPAbstractLegendItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE = 0;$/;"	m	class:QCPAbstractPlottable
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxis
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPColorMap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPColorScaleAxisRectPrivate
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPCurve
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPFinancial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPGraph
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPGrid
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPItemBracket
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPItemCurve
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPItemEllipse
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPItemLine
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPItemPixmap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPItemRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPItemStraightLine
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPItemText
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPItemTracer
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPLegend
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPPlottableLegendItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisAngular
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisRadial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarGrid
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarLegendItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPSelectionRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPStatisticalBox
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) Q_DECL_OVERRIDE;$/;"	m	class:QCPTextElement
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferGlFbo
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferGlPbuffer
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void draw(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferPixmap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void drawDecoration(QCPPainter *painter, QCPDataSelection selection) Q_DECL_OVERRIDE;$/;"	m	class:QCPSelectionDecoratorBracket
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void drawLegendIcon(QCPPainter *painter, const QRectF &rect) const Q_DECL_OVERRIDE;$/;"	m	class:QCPBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void drawLegendIcon(QCPPainter *painter, const QRectF &rect) const Q_DECL_OVERRIDE;$/;"	m	class:QCPColorMap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void drawLegendIcon(QCPPainter *painter, const QRectF &rect) const Q_DECL_OVERRIDE;$/;"	m	class:QCPCurve
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void drawLegendIcon(QCPPainter *painter, const QRectF &rect) const Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void drawLegendIcon(QCPPainter *painter, const QRectF &rect) const Q_DECL_OVERRIDE;$/;"	m	class:QCPFinancial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void drawLegendIcon(QCPPainter *painter, const QRectF &rect) const Q_DECL_OVERRIDE;$/;"	m	class:QCPGraph
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void drawLegendIcon(QCPPainter *painter, const QRectF &rect) const Q_DECL_OVERRIDE;$/;"	m	class:QCPStatisticalBox
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void layoutChanged() Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseDoubleClickEvent(QMouseEvent *event) Q_DECL_OVERRIDE;$/;"	m	class:QCustomPlot
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseDoubleClickEvent(QMouseEvent *event, const QVariant &details) Q_DECL_OVERRIDE;$/;"	m	class:QCPTextElement
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseMoveEvent(QMouseEvent *event) Q_DECL_OVERRIDE;$/;"	m	class:QCustomPlot
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseMoveEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxis
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseMoveEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseMoveEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;$/;"	m	class:QCPColorScale
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseMoveEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisAngular
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseMoveEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisRadial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mousePressEvent(QMouseEvent *event) Q_DECL_OVERRIDE;$/;"	m	class:QCustomPlot
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mousePressEvent(QMouseEvent *event, const QVariant &details) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxis
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mousePressEvent(QMouseEvent *event, const QVariant &details) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mousePressEvent(QMouseEvent *event, const QVariant &details) Q_DECL_OVERRIDE;$/;"	m	class:QCPColorScale
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mousePressEvent(QMouseEvent *event, const QVariant &details) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisAngular
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mousePressEvent(QMouseEvent *event, const QVariant &details) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisRadial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mousePressEvent(QMouseEvent *event, const QVariant &details) Q_DECL_OVERRIDE;$/;"	m	class:QCPTextElement
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseReleaseEvent(QMouseEvent *event) Q_DECL_OVERRIDE;$/;"	m	class:QCustomPlot
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxis
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;$/;"	m	class:QCPColorScale
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisAngular
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisRadial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;$/;"	m	class:QCPTextElement
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void paintEvent(QPaintEvent *event) Q_DECL_OVERRIDE;$/;"	m	class:QCustomPlot
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void parentPlotInitialized(QCustomPlot *parentPlot) Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutElement
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void parentPlotInitialized(QCustomPlot *parentPlot) Q_DECL_OVERRIDE;$/;"	m	class:QCPLegend
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void reallocateBuffer() Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferGlFbo
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void reallocateBuffer() Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferGlPbuffer
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void reallocateBuffer() Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferPixmap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void resizeEvent(QResizeEvent *event) Q_DECL_OVERRIDE;$/;"	m	class:QCustomPlot
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractLegendItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxis
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPLegend
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisRadial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) Q_DECL_OVERRIDE;$/;"	m	class:QCPTextElement
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void simplify() Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutGrid
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void update(UpdatePhase phase) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void update(UpdatePhase phase) Q_DECL_OVERRIDE;$/;"	m	class:QCPColorScale
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void update(UpdatePhase phase) Q_DECL_OVERRIDE;$/;"	m	class:QCPLayout
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void update(UpdatePhase phase) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisAngular
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void updateLayout() Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutGrid
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void updateLayout() Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutInset
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void wheelEvent(QWheelEvent *event) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxis
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void wheelEvent(QWheelEvent *event) Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void wheelEvent(QWheelEvent *event) Q_DECL_OVERRIDE;$/;"	m	class:QCPColorScale
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void wheelEvent(QWheelEvent *event) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisAngular
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void wheelEvent(QWheelEvent *event) Q_DECL_OVERRIDE;$/;"	m	class:QCPPolarAxisRadial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual void wheelEvent(QWheelEvent *event) Q_DECL_OVERRIDE;$/;"	m	class:QCustomPlot
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPAbstractItem() Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractItem
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPAbstractPlottable() Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPAbstractPlottable1D() Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable1D
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPAxis() Q_DECL_OVERRIDE;$/;"	m	class:QCPAxis
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPAxisRect() Q_DECL_OVERRIDE;$/;"	m	class:QCPAxisRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPBars() Q_DECL_OVERRIDE;$/;"	m	class:QCPBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPColorMap() Q_DECL_OVERRIDE;$/;"	m	class:QCPColorMap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPColorScale() Q_DECL_OVERRIDE;$/;"	m	class:QCPColorScale
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPCurve() Q_DECL_OVERRIDE;$/;"	m	class:QCPCurve
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPErrorBars() Q_DECL_OVERRIDE;$/;"	m	class:QCPErrorBars
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPFinancial() Q_DECL_OVERRIDE;$/;"	m	class:QCPFinancial
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPGraph() Q_DECL_OVERRIDE;$/;"	m	class:QCPGraph
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPItemBracket() Q_DECL_OVERRIDE;$/;"	m	class:QCPItemBracket
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPItemCurve() Q_DECL_OVERRIDE;$/;"	m	class:QCPItemCurve
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPItemEllipse() Q_DECL_OVERRIDE;$/;"	m	class:QCPItemEllipse
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPItemLine() Q_DECL_OVERRIDE;$/;"	m	class:QCPItemLine
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPItemPixmap() Q_DECL_OVERRIDE;$/;"	m	class:QCPItemPixmap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPItemPosition() Q_DECL_OVERRIDE;$/;"	m	class:QCPItemPosition
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPItemRect() Q_DECL_OVERRIDE;$/;"	m	class:QCPItemRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPItemStraightLine() Q_DECL_OVERRIDE;$/;"	m	class:QCPItemStraightLine
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPItemText() Q_DECL_OVERRIDE;$/;"	m	class:QCPItemText
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPItemTracer() Q_DECL_OVERRIDE;$/;"	m	class:QCPItemTracer
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPLayoutElement() Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutElement
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPLayoutGrid() Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutGrid
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPLayoutInset() Q_DECL_OVERRIDE;$/;"	m	class:QCPLayoutInset
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPLegend() Q_DECL_OVERRIDE;$/;"	m	class:QCPLegend
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPPaintBufferGlFbo() Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferGlFbo
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPPaintBufferGlPbuffer() Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferGlPbuffer
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPPaintBufferPixmap() Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferPixmap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPSelectionDecoratorBracket() Q_DECL_OVERRIDE;$/;"	m	class:QCPSelectionDecoratorBracket
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCPSelectionRect() Q_DECL_OVERRIDE;$/;"	m	class:QCPSelectionRect
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  virtual ~QCustomPlot() Q_DECL_OVERRIDE;$/;"	m	class:QCustomPlot
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  void applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;$/;"	m	class:QCPAbstractPlottable
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  void clear(const QColor &color) Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferGlFbo
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  void clear(const QColor &color) Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferGlPbuffer
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	/^  void clear(const QColor &color) Q_DECL_OVERRIDE;$/;"	m	class:QCPPaintBufferPixmap
Q_DECL_OVERRIDE	gui_sources/qcustomplot.h	150;"	d
REMOTE_DEVICE_WIDGET_h	gui_sources/widget_scanator_control.h	2;"	d
REMOTE_DEVICE_WIDGET_h	gui_sources/widget_transmission_interface.h	2;"	d
RING_BUFFER_DENSE_H	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	2;"	d
RING_BUFFER_GENERIC_H	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	2;"	d
RM	Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
ROI_SIZE	CV_IMAGE_PROCESSING/image_processing_node.h	/^      int ROI_SIZE = 80;$/;"	m	class:ModuleImageProcessing
ROTATEOPERATIONCONTAINER_H	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	2;"	d
ROTATEOPTIMIZATION_EXPORT	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOptimization_global.h	13;"	d
ROTATEOPTIMIZATION_EXPORT	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOptimization_global.h	15;"	d
ROTATEOPTIMIZATION_GLOBAL_H	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOptimization_global.h	2;"	d
ROTATE_VECTOR_CLASS_H	AIMING_MODULES/rotate_vector_class.h	2;"	d
ROTATION_FIND_EXECUTOR_H	ROTATE_OPTIMIZATION/rotation_find_executor.h	2;"	d
RadianToPix	AIMING_MODULES/aiming_class.h	/^  TransformCoordClass RadianToPix;$/;"	m	class:AimingClass
RangeLimits	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  MessagesRange RangeLimits;$/;"	m	class:MessageIteratorDense
RangeLimits	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	MessagesRange RangeLimits;$/;"	m	class:IteratorMode::MessageIteratorGenericBase
RateParam	AIMING_MODULES/pid_param_struct.h	/^	double RateParam;$/;"	m	class:PIDParamStruct
Receiver	CAMERA_INTERFACE/camera_interface_class.h	/^  CameraInterfaceAravis* Receiver = NULL;$/;"	m	struct:ArvStreamCallbackData
Receiver	COMMON/interface_pass_coord.h	/^    T* Receiver =  nullptr;$/;"	m	class:PortAdapter
ReceiverLinkCoord	CV_IMAGE_PROCESSING/image_processing_node.h	/^    std::shared_ptr<PassCoordClass<float>> ReceiverLinkCoord;$/;"	m	class:ModuleImageProcessing
RecieveErrorBlock	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
RectsImage	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^std::vector<QRect>          RectsImage;$/;"	m	class:AimImageImitatorClass
RefreshPriority	gui_sources/qcustomplot.h	/^  enum RefreshPriority { rpImmediateRefresh \/\/\/< Replots immediately and repaints the widget immediately by calling QWidget::repaint() after the replot$/;"	g	class:QCustomPlot
Register	AIMING_MODULES/aiming_class.h	/^  std::vector<QPair<T,T>> Register;$/;"	m	class:SignalRegister
RegisterType	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static int RegisterType()  $/;"	f	class:TypeRegister
RemoteControlBlock	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
Requires_Grad	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	bool Requires_Grad = false;$/;"	m	class:RotateOperationContainer
Reserve3	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^    uint16_t  Reserve3      = 1;$/;"	m	struct:CommandCalibration
Reset	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::Reset()$/;"	f	class:AimingClass
Reset	AIMING_MODULES/aiming_class.cpp	/^void AimingParamOptimizator::Reset()$/;"	f	class:AimingParamOptimizator
Reset	AIMING_MODULES/aiming_class.h	/^  void Reset() { CoordIntegral = QPair<float,float>(0,0); StepPeriod = 0;}$/;"	f	class:TimeIntegratorClass
Reset	CV_IMAGE_PROCESSING/optimization_threshold.cpp	/^void ThresholdFindingParallelDispersion::Reset()$/;"	f	class:ThresholdFindingParallelDispersion
Reset	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateDataMeasureEngine::Reset() $/;"	f	class:RotateDataMeasureEngine
Reset	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateOperationContainer::Reset()$/;"	f	class:RotateOperationContainer
Reset	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^void RingBufferGeneric<H,M_S,M_N,I_T>::Reset()$/;"	f	class:RingBufferGeneric
Reset	UTILITES/debug_output_filter.h	/^  void Reset() { Counter = 0;}$/;"	f	class:BlockCounterClass
Reset	UTILITES/engine_statistics.h	/^	 void Reset() { NodeValue.Reset(); NodeCoord.Reset();}$/;"	f	class:StatisticNode
Reset	UTILITES/engine_statistics.h	/^	void Reset(){QPair<T,T> Null(0,0); CoordMax = Null; CoordMin = Null; CoordAvarage = Null; CoordDispersion = Null;$/;"	f	class:StatisticCoord
Reset	UTILITES/engine_statistics.h	/^	void Reset(){ValueMax = 0; ValueMin = 0; ValueAvarage = 0; ValueDispersion = 0; $/;"	f	class:StatisticValue
Reset	UTILITES/engine_statistics.h	/^    void Reset() {};$/;"	f	class:StatisticGroup
Reset	UTILITES/thread_operation_nodes.h	/^  void Reset() $/;"	f	class:ValueDetector
Reset	UTILITES/thread_operation_nodes.h	/^  void Reset() { CurrentInputValue = Values.begin(); $/;"	f	class:ValueStorage
Reset	UTILITES/thread_operation_nodes.h	/^  void Reset() { isCoordDetected = false;}$/;"	f	class:CoordDetector
Reset	UTILITES/thread_operation_nodes.h	/^  void Reset()$/;"	f	class:TrackHoldDetectorNode
ResetColors	gui_sources/widget_output_image_display.cpp	/^void WidgetOutputImageDisplay::ResetColors() { ColorList.clear(); PenList.clear();}$/;"	f	class:WidgetOutputImageDisplay
ResetIterator	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^template<typename H> void MessageIteratorDense<H>::ResetIterator()  { PtrMessageBegin = PtrBufferBegin; PtrDataEnd = PtrBufferBegin; }$/;"	f	class:MessageIteratorDense
ResetIterator	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^template<typename H> void MessageIteratorGenericBase<H>::ResetIterator()  $/;"	f	class:IteratorMode::MessageIteratorGenericBase
ResetPID	AIMING_MODULES/pid_class.cpp	/^void PIDClass::ResetPID()$/;"	f	class:PIDClass
ResolutionUnit	gui_sources/qcustomplot.h	/^enum ResolutionUnit { ruDotsPerMeter       \/\/\/< Resolution is given in dots per meter (dpm)$/;"	g	namespace:QCP
RingBuffer	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^    BufferType* RingBuffer = nullptr;$/;"	m	class:TCPConnectionEngine
RingBuffer	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^RingBufferGeneric<MESSAGE_HEADER_GENERIC,sizeof(MessageDevice<0>), 4,IteratorMode::Continous>* RingBuffer = nullptr;$/;"	m	class:UDPEngineInterface
RingBufferGeneric	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^RingBufferGeneric<H,M_S,M_N,I_T>::RingBufferGeneric()$/;"	f	class:RingBufferGeneric
RingBufferGeneric	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^class RingBufferGeneric$/;"	c
RotAxis	DEVICES/device_rotary_interface.h	/^	RotateVectorClass<int>   RotAxis;$/;"	m	class:DeviceRotaryInterface
RotateAxis	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^enum RotateAxis {x_axis = 0, y_axis = 1, z_axis = 2};$/;"	g
RotateAxisenum	AIMING_MODULES/rotate_vector_class.h	/^enum RotateAxisenum { X_AXIS = 0, Y_AXIS= 1 , Z_AXIS = 2};$/;"	g
RotateDataMeasureEngine	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^RotateDataMeasureEngine::RotateDataMeasureEngine() $/;"	f	class:RotateDataMeasureEngine
RotateDataMeasureEngine	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^class RotateDataMeasureEngine $/;"	c
RotateMatrix	AIMING_MODULES/rotate_vector_class.h	/^	Eigen::Matrix< float, 3, 3 > RotateMatrix;$/;"	m	class:RotateVectorClass
RotateMatrixPlane	AIMING_MODULES/rotate_vector_class.h	/^	Eigen::Matrix< float, 2, 2 > RotateMatrixPlane;$/;"	m	class:RotateVectorClass
RotateOperationContainer	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^RotateOperationContainer::RotateOperationContainer() { Reset(); }$/;"	f	class:RotateOperationContainer
RotateOperationContainer	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^RotateOperationContainer::RotateOperationContainer(const RotateOperationContainer& CopyContainer) : RotateOperationContainer()$/;"	f	class:RotateOperationContainer
RotateOperationContainer	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^class RotateOperationContainer : public PassCoordClass<float>$/;"	c
RotateOperationMatrixSequense	PYTORCH_PROCESSING/TorchProcessing.h	/^	vector<torch::Tensor> RotateOperationMatrixSequense; \/\/ rotate sequence in matrix$/;"	m	class:ImageProcessingTorch
RotateOperationMatrixSequense	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	vector<torch::Tensor>                  RotateOperationMatrixSequense; \/\/ rotate sequence in matrix$/;"	m	class:RotateOperationContainer
RotateOperationSequense	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	vector<pair<RotateAxis,double>>        RotateOperationSequense;  \/\/ rotate sequence in angle degree$/;"	m	class:RotateOperationContainer
RotateOperationSequenseTensor	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	vector<pair<RotateAxis,torch::Tensor>> RotateOperationSequenseTensor; \/\/ rotate sequence in radian to calculate$/;"	m	class:RotateOperationContainer
RotateOperations	AIMING_MODULES/rotate_vector_class.h	/^	std::vector<std::pair<RotateAxisenum, float>> RotateOperations;$/;"	m	class:RotateVectorClass
RotateVector	AIMING_MODULES/rotate_vector_class.h	/^	Eigen::Matrix< float, 3, 1 > RotateVector;$/;"	m	class:RotateVectorClass
RotateVectorClass	AIMING_MODULES/rotate_vector_class.h	/^	RotateVectorClass() $/;"	f	class:RotateVectorClass
RotateVectorClass	AIMING_MODULES/rotate_vector_class.h	/^RotateVectorClass<T>::RotateVectorClass(RotateVectorClass<T>& RotateObject)$/;"	f	class:RotateVectorClass
RotateVectorClass	AIMING_MODULES/rotate_vector_class.h	/^RotateVectorClass<T>::RotateVectorClass(std::initializer_list<std::pair<RotateAxisenum,float>> RotationList) $/;"	f	class:RotateVectorClass
RotateVectorClass	AIMING_MODULES/rotate_vector_class.h	/^class RotateVectorClass : public PassCoordClass<T>$/;"	c
Rotation	AIMING_MODULES/aiming_class.h	/^  RotateVectorClass<float> Rotation;$/;"	m	class:AimingClass
RotationContainer	ROTATE_OPTIMIZATION/rotation_find_executor.h	/^	RotateOperationContainer RotationContainer;$/;"	m	class:RotationFindProcessClass
RotationFindProcessClass	ROTATE_OPTIMIZATION/rotation_find_executor.cpp	/^RotationFindProcessClass::RotationFindProcessClass(QObject* parrent)$/;"	f	class:RotationFindProcessClass
RotationFindProcessClass	ROTATE_OPTIMIZATION/rotation_find_executor.cpp	/^RotationFindProcessClass::RotationFindProcessClass(std::shared_ptr<PassCoordClass<float>> Base, std::shared_ptr<PassCoordClass<float>> Rot,QObject* parrent) : QObject(parrent)$/;"	f	class:RotationFindProcessClass
RotationFindProcessClass	ROTATE_OPTIMIZATION/rotation_find_executor.h	/^class RotationFindProcessClass :public QObject$/;"	c
RotationObject	ROTATE_OPTIMIZATION/rotation_find_executor.h	/^	std::shared_ptr<PassCoordClass<float>> RotationObject = nullptr;$/;"	m	class:RotationFindProcessClass
RotationToString	AIMING_MODULES/rotate_vector_class.h	/^std::string RotateVectorClass<T>::RotationToString(std::vector<std::pair<RotateAxisenum,float>> Sequence)$/;"	f	class:RotateVectorClass
RotationToString	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^string RotateOperationContainer::RotationToString()$/;"	f	class:RotateOperationContainer
RotationToString	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^string RotateOperationContainer::RotationToString(vector<pair<RotateAxis,double>> Sequence)$/;"	f	class:RotateOperationContainer
RotationValid	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	bool RotationValid = true;$/;"	m	class:RotateOperationContainer
SCANATOR_CONTROL_CLASS_H	DEVICES/device_rotary_interface.h	2;"	d
SETTINGS_H	UTILITES/register_settings.h	2;"	d
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
SIMULATE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	291;"	d	file:
SIMULATE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	30;"	d	file:
SIMULATE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
SIMULATE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
SIMULATE_ID	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
SIMULATE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
SIMULATE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	285;"	d	file:
SIMULATE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	307;"	d	file:
SIMULATE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
SIMULATE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
SIMULATE_ID	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	291;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	30;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	285;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	307;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	55;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	61;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	292;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	314;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	61;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	55;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	61;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	292;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	314;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	61;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	102;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	299;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	321;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	102;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	293;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	315;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	102;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	299;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	321;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	102;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	293;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	315;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
SIMULATE_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
SIMULATE_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
SIMULATE_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
SIMULATE_VERSION_PATCH	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
SIZEOF_DPTR	build/ImageProcProject_autogen/moc_predefs.h	426;"	d
STATEENUMBLOCK_H	COMMON/state_block_enum.h	2;"	d
STAT_ENGINE_H	UTILITES/engine_statistics.h	2;"	d
STREAM_RTSP_CLASS	stream_video_rtsp.h	2;"	d
STRINGIFY	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	417;"	d	file:
STRINGIFY	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	402;"	d	file:
STRINGIFY	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	417;"	d	file:
STRINGIFY	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	402;"	d	file:
STRINGIFY_HELPER	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
STRINGIFY_HELPER	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
SUBSTRACTPAIR_H	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	2;"	d
SamplePoints	UTILITES/thread_operation_nodes.h	/^  std::vector<QPair<T,T>> SamplePoints;$/;"	m	class:CoordAvarageGlidingNode
Saturation	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  ValueSaturation<double>      Saturation;$/;"	m	class:ValueSpongeShift
Saturation	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    ValueSaturation<double> Saturation;$/;"	m	class:ImageTrackerCentroid
Saturation	UTILITES/thread_operation_nodes.h	/^         ValueSaturation<float> Saturation;$/;"	m	class:TrackHoldDetectorNode
Saturation	UTILITES/transform_coord_class.h	/^	double Saturation = 20000;$/;"	m	class:TransformCoordClass
SaturationDetector	UTILITES/thread_operation_nodes.h	/^  ValueSaturation<T> SaturationDetector;$/;"	m	class:ValueDetector
SaveMeasureDataToFile	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateOperationContainer::SaveMeasureDataToFile(QString Filename)$/;"	f	class:RotateOperationContainer
SaveWidgetsLinks	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::SaveWidgetsLinks()$/;"	f	class:WidgetMainWindow
Scale	UTILITES/transform_coord_class.h	/^	double Scale = 1;$/;"	m	class:TransformCoordClass
Scale	gui_sources/GRAPHICS_WINDOW_GRAPH/linegraph.h	/^    double Scale = 1;$/;"	m	class:GraphPointsLineInterface
ScaleOutput	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	TransformCoordClass ScaleOutput;$/;"	m	class:SinusGeneratorClass
ScaleStrategy	gui_sources/qcustomplot.h	/^  enum ScaleStrategy { ssNone      \/\/\/< Modifications are not allowed, the specified tick step is absolutely fixed. This might cause a high tick density and overlapping labels if the axis range is zoomed out.$/;"	g	class:QCPAxisTickerFixed
ScaleType	gui_sources/qcustomplot.h	/^  enum ScaleType { stLinear       \/\/\/< Linear scaling$/;"	g	class:QCPAxis
ScaleType	gui_sources/qcustomplot.h	/^  enum ScaleType { stLinear       \/\/\/< Linear scaling$/;"	g	class:QCPPolarAxisRadial
ScanatorDevice	gui_sources/widget_scanator_control.h	/^                      std::shared_ptr<DeviceRotaryGenericInterface> ScanatorDevice;$/;"	m	class:WidgetScanatorControl
ScatterProperty	gui_sources/qcustomplot.h	/^  enum ScatterProperty { spNone  = 0x00  \/\/\/< <tt>0x00<\/tt> None$/;"	g	class:QCPScatterStyle
ScatterShape	gui_sources/qcustomplot.h	/^  enum ScatterShape { ssNone       \/\/\/< no scatter symbols are drawn (e.g. in QCPGraph, data only represented with lines)$/;"	g	class:QCPScatterStyle
Scene	gui_sources/widget_main_window.h	/^	QGraphicsScene* Scene;$/;"	m	class:WidgetMainWindow
SelectablePart	gui_sources/qcustomplot.h	/^  enum SelectablePart { spNone        = 0      \/\/\/< None of the selectable parts$/;"	g	class:QCPAxis
SelectablePart	gui_sources/qcustomplot.h	/^  enum SelectablePart { spNone        = 0      \/\/\/< None of the selectable parts$/;"	g	class:QCPPolarAxisAngular
SelectablePart	gui_sources/qcustomplot.h	/^  enum SelectablePart { spNone        = 0      \/\/\/< None of the selectable parts$/;"	g	class:QCPPolarAxisRadial
SelectablePart	gui_sources/qcustomplot.h	/^  enum SelectablePart { spNone        = 0x000 \/\/\/< <tt>0x000<\/tt> None$/;"	g	class:QCPLegend
SelectionRectMode	gui_sources/qcustomplot.h	/^enum SelectionRectMode { srmNone    \/\/\/< The selection rect is disabled, and all mouse events are forwarded to the underlying objects, e.g. for axis range dragging$/;"	g	namespace:QCP
SelectionType	gui_sources/qcustomplot.h	/^enum SelectionType { stNone                \/\/\/< The plottable is not selectable$/;"	g	namespace:QCP
Server	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^  QTcpServer* Server = 0;$/;"	m	class:TCPConnectionEngine
SetAimingCorrection	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::SetAimingCorrection(const QPair<float,float>& Coord)     { CoordAimCorrection    = Coord; }$/;"	f	class:AimingClass
SetAimingPosition	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::SetAimingPosition(const QPair<float,float>& Coord)       $/;"	f	class:AimingClass
SetAimingRegim	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::SetAimingRegim(TypeEnumAiming Aiming)$/;"	f	class:AimingClass
SetCameraRegion	CAMERA_INTERFACE/camera_control_interface.h	/^            void SetCameraRegion(std::pair<int,int> Pos, std::pair<int,int> Size) { SetCameraRegion(Pos.first,Pos.second, Size.first, Size.second); }$/;"	f	class:CameraControlInterface
SetCameraRegion	CAMERA_INTERFACE/camera_interface_class.cpp	/^void CameraInterfaceAravis::SetCameraRegion(int x, int y, int width, int height )$/;"	f	class:CameraInterfaceAravis
SetCategoryLimit	UTILITES/thread_operation_nodes.h	/^  void SetCategoryLimit(double Limit, int Count) {LimitValue = Limit; GroupCount = Count; GroupSpan = LimitValue\/Count;}$/;"	f	class:ValueCategorizer
SetColor	gui_sources/link_line.h	/^	void SetColor(QColor Color) { LinkLineColor = Color; };$/;"	f	class:LinkLine
SetContinousLoad	UTILITES/thread_operation_nodes.h	/^  void SetContinousLoad(bool OnOff) { ContinousLoad = OnOff;};$/;"	f	class:ValueStorage
SetContinousMode	UTILITES/thread_operation_nodes.h	/^  void SetContinousMode(bool OnOff) { ContinousMode = OnOff; }$/;"	f	class:CoordStorage
SetCoordPort	AIMING_MODULES/aiming_class.h	/^    PassCoordClass<float>* SetCoordPort = 0;$/;"	m	class:SignalPortAdapter
SetCoords	UTILITES/thread_operation_nodes.h	/^  void SetCoords(QVector<QPair<T,T>> PopCoords) {Coords.resize(0); for(auto& Coord: PopCoords) Coords.push_back(Coord); CurrentCoord = Coords.begin(); };$/;"	f	class:CoordPopByInputNode
SetCoords	UTILITES/thread_operation_nodes.h	/^  void SetCoords(std::vector<QPair<T,T>> PopCoords) { Coords = PopCoords; CurrentCoord = Coords.begin(); };$/;"	f	class:CoordPopByInputNode
SetFrameRate	AIMING_MODULES/pid_class.cpp	/^                 void PIDClass::SetFrameRate(double Rate)         { StepPeriodThreshold = 2.0\/Rate; }$/;"	f	class:PIDClass
SetFrequency	CAMERA_INTERFACE/camera_interface_class.cpp	/^void CameraInterfaceAravis::SetFrequency(int Frequency) $/;"	f	class:CameraInterfaceAravis
SetGain	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::SetGain(int Number, float Gain)$/;"	f	class:AimingClass
SetGuiFontSize	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::SetGuiFontSize(int GuiSize)$/;"	f	class:WidgetMainWindow
SetHighFrequencyProcessing	CV_IMAGE_PROCESSING/image_processing_node.h	/^    void SetHighFrequencyProcessing() { timerProcessImage.setInterval(1);};$/;"	f	class:ModuleImageProcessing
SetImage	CV_IMAGE_PROCESSING/contour_processing.cpp	/^void ContoursProcessorClass::SetImage(const cv::Mat& Image)$/;"	f	class:ContoursProcessorClass
SetImage	CV_IMAGE_PROCESSING/image_estimations.cpp	/^float GeometryDistortionImage::SetImage(const cv::Mat& Image, int Threshold)$/;"	f	class:GeometryDistortionImage
SetImageParam	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^void ModuleImageProcessing::SetImageParam(int MinWeight, int MaxWeight, int Distortion)$/;"	f	class:ModuleImageProcessing
SetInversion	UTILITES/thread_operation_nodes.h	/^	void SetInversion(int Axis)$/;"	f	class:CoordInversionAxisNode
SetLabel	gui_sources/widget_output_text_display.h	/^	void SetLabel(QString Label) { ui.LabelBlockName->setText(Label);}$/;"	f	class:WidgetOutputTextDisplay
SetLowFrequencyProcessing	CV_IMAGE_PROCESSING/image_processing_node.h	/^    void SetLowFrequencyProcessing()  { timerProcessImage.setInterval(20);};$/;"	f	class:ModuleImageProcessing
SetModuleEnabled	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::SetModuleEnabled(bool OnOff) $/;"	f	class:AimingClass
SetModuleEnabled	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^void ModuleImageProcessing::SetModuleEnabled(bool StartStop) $/;"	f	class:ModuleImageProcessing
SetName	gui_sources/widget_processing_image_generic.cpp	/^void WidgetProcessingImage::SetName(QString name) {ui->labelName->setText(name);}; $/;"	f	class:WidgetProcessingImage
SetObjectHoldCheck	CV_IMAGE_PROCESSING/image_processing_node.h	/^    void SetObjectHoldCheck(bool Flag) { FLAG_CHECK_OBJECT_HOLD = Flag;};$/;"	f	class:ModuleImageProcessing
SetOutputCorrection	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::SetOutputCorrection(const QPair<float,float>& Coord)     { CoordOutputCorrection = Coord; };$/;"	f	class:AimingClass
SetOutputSize	gui_sources/widget_output_image_display.cpp	/^void WidgetOutputImageDisplay::SetOutputSize(int width, int height) $/;"	f	class:WidgetOutputImageDisplay
SetOutputSize	gui_sources/widget_output_text_display.h	/^	void SetOutputSize(int width, int height) { ui.listMessages->setFixedSize(width,height); $/;"	f	class:WidgetOutputTextDisplay
SetPIDParam	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::SetPIDParam(PIDParamStruct param)$/;"	f	class:AimingClass
SetPIDParam	AIMING_MODULES/pid_class.cpp	/^                 void PIDClass::SetPIDParam(PIDParamStruct Param) { this->PIDParam = Param; this->ResetPID(); }$/;"	f	class:PIDClass
SetPIDParamFromTable	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::SetPIDParamFromTable(int Number)$/;"	f	class:AimingClass
SetParam	CV_IMAGE_PROCESSING/optimization_threshold.cpp	/^void ThresholdFindingParallelDispersion::SetParam(int MinThreshold, int Step, int NumberGroup)$/;"	f	class:ThresholdFindingParallelDispersion
SetParam	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  void SetParam(int MinThreshold, int Step, int NumberGroup) {MinThreshold = MinThresholdFinding; MaxThresholdFinding = MinThreshold + Step*NumberGroup;  $/;"	f	class:ThresholdOptimizatorEngine
SetParam	UTILITES/transform_coord_class.h	/^	void SetParam(double ScaleParam, double OffsetParam, double Saturation)$/;"	f	class:TransformCoordClass
SetPeak	UTILITES/thread_operation_nodes.h	/^    void SetPeak(int PeakValue) { peak = PeakValue;}$/;"	f	class:ThinningFilter
SetProcessingRegim	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^void ModuleImageProcessing::SetProcessingRegim(int Regim)       { }$/;"	f	class:ModuleImageProcessing
SetRotateMatrix	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateOperationContainer::SetRotateMatrix(torch::Tensor RotateMatrix)$/;"	f	class:RotateOperationContainer
SetRotatedModules	ROTATE_OPTIMIZATION/rotation_find_executor.cpp	/^void RotationFindProcessClass::SetRotatedModules(std::shared_ptr<PassCoordClass<float>> Base, std::shared_ptr<PassCoordClass<float>> Rot)$/;"	f	class:RotationFindProcessClass
SetRotatedModules	ROTATE_OPTIMIZATION/rotation_find_executor.cpp	/^void RotationFindProcessClass::SetRotatedModules(std::shared_ptr<PassCoordClass<float>> Base, std::shared_ptr<PassCoordClass<float>> Rot,std::shared_ptr<PassCoordClass<float>> Middle)$/;"	f	class:RotationFindProcessClass
SetScenePosition	gui_sources/widget_scene_node_interface.cpp	/^void WidgetSceneNodeInterface::SetScenePosition(int PosX, int PosY) $/;"	f	class:WidgetSceneNodeInterface
SetSeries	gui_sources/GRAPHICS_WINDOW_GRAPH/linegraph.cpp	/^void GraphPointsLineInterface::SetSeries(QLineSeries *series) { }$/;"	f	class:GraphPointsLineInterface
SetSize	UTILITES/engine_statistics.h	/^	void SetSize(int SizeStat){StatSample.resize(SizeStat); Reset(); this->Size = SizeStat;};$/;"	f	class:StatisticValue
SetSize	UTILITES/engine_statistics.h	/^	void SetSize(int size) {NodeValue.SetSize(size); NodeCoord.SetSize(size);  }$/;"	f	class:StatisticNode
SetSize	UTILITES/engine_statistics.h	/^    void SetSize(int WindowSize) { Size = WindowSize; StatSample.resize(Size); Reset();}$/;"	f	class:StatisticCoord
SetSize	UTILITES/thread_operation_nodes.h	/^  void SetSize(int size)  { Coords.resize(size); CurrentInputCoord  = Coords.begin();$/;"	f	class:CoordStorage
SetSize	UTILITES/thread_operation_nodes.h	/^  void SetSize(int size) { Values.resize(size); CurrentInputValue = Values.begin();$/;"	f	class:ValueStorage
SetSlaveMode	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^void ModuleImageProcessing::SetSlaveMode(ModuleImageProcessing* Master)$/;"	f	class:ModuleImageProcessing
SetThreshold	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^void ModuleImageProcessing::SetThreshold(int Thresh)  { this->Threshold = Thresh; }$/;"	f	class:ModuleImageProcessing
SetTimeScale	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^    void SetTimeScale(double StepMilli, double LimitMilli) { TimePos = 0; TimeStep = StepMilli; TimeLimit = LimitMilli; }$/;"	f	class:PlotGraphicsInterface
SetTimerPeriod	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	void SetTimerPeriod(int Period) { TimerPeriod = Period;};$/;"	f	class:SinusGeneratorClass
SetTypeSize	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static void SetTypeSize(int size) $/;"	f	class:TypeRegister
SetValue	COMMON/interface_pass_value.h	/^	virtual void SetValue(V InputValue) { Value = InputValue; };$/;"	f	class:PassValueClass
SetValue	UTILITES/engine_statistics.h	/^void StatisticValue<T>::SetValue(T Input) $/;"	f	class:StatisticValue
SetValue	UTILITES/thread_operation_nodes.h	/^	virtual void SetValue(T InputValue) { PassValueClass<T>::Value = (InputValue > 0) ? 0 : 1;};$/;"	f	class:ValueBinaryInversion
SetValue	UTILITES/thread_operation_nodes.h	/^template<typename T> void EndReceiver<T>::SetValue(T NewValue) { qDebug() << "PASS TO END: " << NewValue; }$/;"	f	class:EndReceiver
SetValue	UTILITES/thread_operation_nodes.h	/^void ValueCategorizer<T>::SetValue(T InputValue)$/;"	f	class:ValueCategorizer
SetValue	UTILITES/thread_operation_nodes.h	/^void ValueDifference<T>::SetValue(T NewValue) { Diff = PassValueClass<T>::Value - NewValue; PassValueClass<T>::Value = NewValue; }$/;"	f	class:ValueDifference
SetValue	UTILITES/thread_operation_nodes.h	/^void ValueInversion<T>::SetValue(T NewValue) { PassValueClass<T>::Value = -NewValue;}$/;"	f	class:ValueInversion
SetValue	UTILITES/thread_operation_nodes.h	/^void ValueRandomization<T>::SetValue(T NewValue) { PassValueClass<T>::Value = NewValue + Amplitude*std::rand()\/RAND_MAX; }$/;"	f	class:ValueRandomization
SetValue	UTILITES/thread_operation_nodes.h	/^void ValueSaturation<T>::SetValue(T NewValue) { if(NewValue < Threshold) PassValueClass<T>::Value = 0; else PassValueClass<T>::Value =1; }$/;"	f	class:ValueSaturation
SetWidgetActive	gui_sources/widget_scene_node_interface.cpp	/^void WidgetSceneNodeInterface::SetWidgetActive(bool active)$/;"	f	class:WidgetSceneNodeInterface
SetWidgetsPosition	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::SetWidgetsPosition(int group_number)$/;"	f	class:WidgetMainWindow
SetWindowSize	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	void SetWindowSize(int Size) { DataFilter.avarage_window_size  = Size;};$/;"	f	class:RotateDataMeasureEngine
SetZoom	CAMERA_INTERFACE/camera_interface_class.cpp	/^void CameraInterfaceAravis::SetZoom(int Number) $/;"	f	class:CameraInterfaceAravis
SetZoom	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::SetZoom(int Number)$/;"	f	class:CameraInterfaceHIK
SettingsRegister	UTILITES/register_settings.h	/^class SettingsRegister$/;"	c
ShutterOpened	UTILITES/thread_operation_nodes.h	/^  bool ShutterOpened = false;$/;"	m	class:CoordPassShutter
Shutteropencved	UTILITES/thread_operation_nodes.h	/^  bool Shutteropencved = true;$/;"	m	class:ValuePassShutter
SignDomain	gui_sources/qcustomplot.h	/^enum SignDomain { sdNegative  \/\/\/< The negative sign domain, i.e. numbers smaller than zero$/;"	g	namespace:QCP
Signal	UTILITES/thread_operation_nodes.h	/^  T Signal;$/;"	m	class:ValueDetector
SignalBlockEnabled	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_processing_node.cpp	/^void ModuleImageProcessing::SignalBlockEnabled(bool _t1)$/;"	f	class:ModuleImageProcessing
SignalChannelChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_container_group.cpp	/^void WidgetContainerGroup::SignalChannelChanged(int _t1)$/;"	f	class:WidgetContainerGroup
SignalChannelChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^void WidgetMiniLabelsGroup::SignalChannelChanged(int _t1)$/;"	f	class:WidgetMiniLabelsGroup
SignalChannelChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^void WidgetProcessingImage::SignalChannelChanged(int _t1)$/;"	f	class:WidgetProcessingImage
SignalCoord1	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^void AimingWatcherClass::SignalCoord1(QPair<float,float> _t1)$/;"	f	class:AimingWatcherClass
SignalCoord2	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^void AimingWatcherClass::SignalCoord2(QPair<float,float> _t1)$/;"	f	class:AimingWatcherClass
SignalCoord3	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^void AimingWatcherClass::SignalCoord3(QPair<float,float> _t1)$/;"	f	class:AimingWatcherClass
SignalDeviceConnected	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_udp_interface.cpp	/^void UDPEngineInterface::SignalDeviceConnected()$/;"	f	class:UDPEngineInterface
SignalHideWidget	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^void WidgetAdjustable::SignalHideWidget()$/;"	f	class:WidgetAdjustable
SignalLinkPressed	build/ImageProcProject_autogen/7RAEHFKGBG/moc_link_line.cpp	/^void LinkLine::SignalLinkPressed()$/;"	f	class:LinkLine
SignalMovePos	build/ImageProcProject_autogen/7RAEHFKGBG/moc_labelimage.cpp	/^void LabelImage::SignalMovePos(int _t1, int _t2)$/;"	f	class:LabelImage
SignalPortAdapter	AIMING_MODULES/aiming_class.h	/^    SignalPortAdapter(){};$/;"	f	class:SignalPortAdapter
SignalPortAdapter	AIMING_MODULES/aiming_class.h	/^    SignalPortAdapter(PassCoordClass<float>* Port){ LinkToPort(Port);};$/;"	f	class:SignalPortAdapter
SignalPortAdapter	AIMING_MODULES/aiming_class.h	/^class SignalPortAdapter : public QObject$/;"	c
SignalPosPressed	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^void WidgetProcessingImage::SignalPosPressed(QPair<float,float> _t1)$/;"	f	class:WidgetProcessingImage
SignalPressedPos	build/ImageProcProject_autogen/7RAEHFKGBG/moc_labelimage.cpp	/^void LabelImage::SignalPressedPos(int _t1, int _t2)$/;"	f	class:LabelImage
SignalProcessEnd	build/ImageProcProject_autogen/EWIEGA46WW/moc_controller_process_class.cpp	/^void ProcessControllerClass::SignalProcessEnd()$/;"	f	class:ProcessControllerClass
SignalRegister	AIMING_MODULES/aiming_class.h	/^  SignalRegister(int Size)$/;"	f	class:SignalRegister
SignalRegister	AIMING_MODULES/aiming_class.h	/^class SignalRegister : public PassCoordClass<T>$/;"	c
SignalResetProcessing	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_control.cpp	/^void WidgetProcessingImageControl::SignalResetProcessing()$/;"	f	class:WidgetProcessingImageControl
SignalSetFrequency	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_processing_node.cpp	/^void ModuleImageProcessing::SignalSetFrequency(int _t1)$/;"	f	class:ModuleImageProcessing
SignalStart	build/ImageProcProject_autogen/SERQFGPBY3/moc_widget_sinus_source.cpp	/^void WidgetSinusSource::SignalStart(bool _t1)$/;"	f	class:WidgetSinusSource
SignalStartStream	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_camera_control.cpp	/^void WidgetCameraControl::SignalStartStream(bool _t1)$/;"	f	class:WidgetCameraControl
SignalThreshold	UTILITES/thread_operation_nodes.h	/^  double SignalThreshold     = 0.9; $/;"	m	class:TrackHoldDetectorNode
SignalWidgetPressed	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_scene_node_interface.cpp	/^void WidgetSceneNodeInterface::SignalWidgetPressed(int _t1)$/;"	f	class:WidgetSceneNodeInterface
SinusGenerator	gui_sources/GRAPHICS_WINDOW_GRAPH/widget_line_graph.h	/^    SinusGeneratorClass* SinusGenerator;$/;"	m	class:WidgetLineGraph
SinusGeneratorClass	AIM_IMAGE_IMITATION/sinus_generator_class.cpp	/^SinusGeneratorClass::SinusGeneratorClass(QObject* Obj) : QObject(Obj)$/;"	f	class:SinusGeneratorClass
SinusGeneratorClass	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^class SinusGeneratorClass :$/;"	c
Size	UTILITES/engine_statistics.h	/^	int Size = 10;$/;"	m	class:StatisticCoord
Size	UTILITES/engine_statistics.h	/^	int Size = 10;$/;"	m	class:StatisticValue
SizeAimBoundry	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    static std::pair<int,int> SizeAimBoundry; \/\/ MAY BE CHANGED IN INIT$/;"	m	class:AimImageImitatorClass
SizeConstraintRect	gui_sources/qcustomplot.h	/^  enum SizeConstraintRect { scrInnerRect \/\/\/< Minimum\/Maximum size constraints apply to inner rect$/;"	g	class:QCPLayoutElement
SizeImage	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    static std::pair<int,int> SizeImage; \/\/ MAY BE CHANGED IN INIT$/;"	m	class:AimImageImitatorClass
SizeImage	CAMERA_INTERFACE/interface_camera_hik.cpp	/^std::pair<int,int> CameraInterfaceHIK::CameraImageStorage::SizeImage;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage	file:
SizeImage	CAMERA_INTERFACE/interface_camera_hik.h	/^    static std::pair<int,int> SizeImage; $/;"	m	class:CameraInterfaceHIK::CameraImageStorage
SizeImage	gui_sources/labelimage.h	/^	std::pair<int,int> SizeImage;$/;"	m	class:LabelImage
SlotAddNewPoint	gui_sources/GRAPHICS_WINDOW_GRAPH/linegraph.cpp	/^void GraphPointsLineInterface::SlotAddNewPoint(QPair<float,float> Coord)$/;"	f	class:GraphPointsLineInterface
SlotAutoClear	gui_sources/widget_output_image_display.cpp	/^void WidgetOutputImageDisplay::SlotAutoClear() {}$/;"	f	class:WidgetOutputImageDisplay
SlotAutoClear	gui_sources/widget_output_text_display.cpp	/^void WidgetOutputTextDisplay::SlotAutoClear() { ui.listMessages->clear(); }$/;"	f	class:WidgetOutputTextDisplay
SlotCalculateValue	AIM_IMAGE_IMITATION/sinus_generator_class.cpp	/^void SinusGeneratorClass::SlotCalculateValue()$/;"	f	class:SinusGeneratorClass
SlotChangeInterfaceSize	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::SlotChangeInterfaceSize()$/;"	f	class:WidgetMainWindow
SlotChangeInterfaceType	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::SlotChangeInterfaceType()$/;"	f	class:WidgetMainWindow
SlotClearSeries	gui_sources/GRAPHICS_WINDOW_GRAPH/linegraph.cpp	/^void GraphPointsLineInterface::SlotClearSeries() { ListPoints->clear(); }$/;"	f	class:GraphPointsLineInterface
SlotCloseMainWindow	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::SlotCloseMainWindow()$/;"	f	class:WidgetMainWindow
SlotConnectTwoWidgets	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::SlotConnectTwoWidgets(int NumberWidget1, int NumberWidget2)$/;"	f	class:WidgetMainWindow
SlotDeinitCamera	CAMERA_INTERFACE/camera_interface_class.cpp	/^void CameraInterfaceAravis::SlotDeinitCamera() $/;"	f	class:CameraInterfaceAravis
SlotDeinitMainWindow	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::SlotDeinitMainWindow()$/;"	f	class:WidgetMainWindow
SlotDisplayCoord	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.cpp	/^void PlotGraphicsInterface::SlotDisplayCoord(QPair<float,float> Point)$/;"	f	class:PlotGraphicsInterface
SlotDisplayImage	gui_sources/widget_processing_image_generic.cpp	/^void WidgetMiniLabelsGroup::SlotDisplayImage(const QImage& Image, int Channel)$/;"	f	class:WidgetMiniLabelsGroup
SlotDisplayImage	gui_sources/widget_processing_image_generic.cpp	/^void WidgetProcessingImage::SlotDisplayImage()$/;"	f	class:WidgetProcessingImage
SlotDisplayImage	gui_sources/widget_processing_image_generic.cpp	/^void WidgetProcessingImage::SlotDisplayImage(const QImage& Image)$/;"	f	class:WidgetProcessingImage
SlotDisplayMiniLabels	gui_sources/widget_processing_image_generic.cpp	/^void WidgetProcessingImage::SlotDisplayMiniLabels()$/;"	f	class:WidgetProcessingImage
SlotDisplayProcessImage	CAMERA_INTERFACE/camera_interface_class.cpp	/^void CameraInterfaceAravis::SlotDisplayProcessImage() { imshow("TEST IMAGE: ", ImageToProcess); }$/;"	f	class:CameraInterfaceAravis
SlotDisplayScanatorState	gui_sources/widget_scanator_control.cpp	/^void WidgetScanatorControl::SlotDisplayScanatorState()$/;"	f	class:WidgetScanatorControl
SlotDisplayState	gui_sources/widget_aiming_control.cpp	/^void WidgetAimingControl::SlotDisplayState()$/;"	f	class:WidgetAimingControl
SlotDisplayString	gui_sources/widget_processing_image_generic.cpp	/^void WidgetProcessingImage::SlotDisplayString(QString InfoString)$/;"	f	class:WidgetProcessingImage
SlotDisplayTimePairSeries	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.cpp	/^void PlotGraphicsInterface::SlotDisplayTimePairSeries()$/;"	f	class:PlotGraphicsInterface
SlotDisplayTimeSeries	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.cpp	/^void PlotGraphicsInterface::SlotDisplayTimeSeries()$/;"	f	class:PlotGraphicsInterface
SlotEnableChannel	AIM_IMAGE_IMITATION/sinus_generator_class.cpp	/^void SinusGeneratorClass::SlotEnableChannel(bool Enable , int Channel)$/;"	f	class:SinusGeneratorClass
SlotHideLinks	gui_sources/widget_scene_node_interface.cpp	/^void WidgetSceneNodeInterface::SlotHideLinks()  { HideNodes(); HideLinks();}$/;"	f	class:WidgetSceneNodeInterface
SlotHideWidget	gui_sources/widget_scene_node_interface.cpp	/^void WidgetSceneNodeInterface::SlotHideWidget() { HideNodes(); HideLinks(); this->hide(); }$/;"	f	class:WidgetSceneNodeInterface
SlotMakeStep	ROTATE_OPTIMIZATION/rotation_find_executor.cpp	/^void RotationFindProcessClass::SlotMakeStep()$/;"	f	class:RotationFindProcessClass
SlotMoveAim	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^void DynamicAimControl::SlotMoveAim()$/;"	f	class:DynamicAimControl
SlotMoveAim	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^void ManualAimControl::SlotMoveAim()$/;"	f	class:ManualAimControl
SlotMoveAimPos	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^void AimImageImitatorClass::SlotMoveAimPos(int XStep, int YStep)$/;"	f	class:AimImageImitatorClass
SlotPosPressed	gui_sources/widget_processing_image_generic.cpp	/^void WidgetProcessingImage::SlotPosPressed(int x, int y)$/;"	f	class:WidgetProcessingImage
SlotPrintString	gui_sources/widget_output_image_display.cpp	/^void WidgetOutputImageDisplay::SlotPrintString(QString Command)$/;"	f	class:WidgetOutputImageDisplay
SlotPrintString	gui_sources/widget_output_text_display.cpp	/^void WidgetOutputTextDisplay::SlotPrintString(QString Command)$/;"	f	class:WidgetOutputTextDisplay
SlotProcessImage	CV_IMAGE_PROCESSING/image_finder.cpp	/^void ImageTemplateFinder::SlotProcessImage()$/;"	f	class:ImageTemplateFinder
SlotProcessImage	CV_IMAGE_PROCESSING/image_finder.cpp	/^void ImageTemplateFinder::SlotProcessImage(const cv::Mat& Image) $/;"	f	class:ImageTemplateFinder
SlotProcessImage	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^void ImageTrackerCentroid::SlotProcessImage()$/;"	f	class:ImageTrackerCentroid
SlotProcessImage	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^void ImageTrackerCentroidGPU::SlotProcessImage()$/;"	f	class:ImageTrackerCentroidGPU
SlotProcessImage	CV_IMAGE_PROCESSING/tracker_template.cpp	/^void ImageTrackerTemplate::SlotProcessImage()$/;"	f	class:ImageTrackerTemplate
SlotProcessImage	CV_IMAGE_PROCESSING/tracker_template.cpp	/^void ImageTrackerTemplate::SlotProcessImage(const cv::Mat& Image) $/;"	f	class:ImageTrackerTemplate
SlotResetProcessing	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^void ModuleImageProcessing::SlotResetProcessing()$/;"	f	class:ModuleImageProcessing
SlotResetProcessing	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^void ImageTrackerCentroid::SlotResetProcessing()$/;"	f	class:ImageTrackerCentroid
SlotResetProcessing	CV_IMAGE_PROCESSING/tracker_template.cpp	/^void ImageTrackerTemplate::SlotResetProcessing()$/;"	f	class:ImageTrackerTemplate
SlotSaveWidgetsPosition	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::SlotSaveWidgetsPosition()$/;"	f	class:WidgetMainWindow
SlotSceneWidgetPressed	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::SlotSceneWidgetPressed(int NumberWidget)$/;"	f	class:WidgetMainWindow
SlotSetActiveChannel	gui_sources/widget_container_group.cpp	/^void WidgetContainerGroup::SlotSetActiveChannel(int Channel)$/;"	f	class:WidgetContainerGroup
SlotSetActiveChannel	gui_sources/widget_processing_image_generic.cpp	/^void WidgetMiniLabelsGroup::SlotSetActiveChannel(int Number)$/;"	f	class:WidgetMiniLabelsGroup
SlotSetActiveChannel	gui_sources/widget_processing_image_generic.cpp	/^void WidgetProcessingImage::SlotSetActiveChannel(int Channel)$/;"	f	class:WidgetProcessingImage
SlotSetAimPos	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^void AimImageImitatorClass::SlotSetAimPos(int PosX, int PosY)$/;"	f	class:AimImageImitatorClass
SlotSetAmplitude	AIM_IMAGE_IMITATION/sinus_generator_class.cpp	/^void SinusGeneratorClass::SlotSetAmplitude(double Ampl1, double Ampl2) { Amplitude.first = Ampl1*60*5; $/;"	f	class:SinusGeneratorClass
SlotSetAmplitudeNoize	AIM_IMAGE_IMITATION/sinus_generator_class.cpp	/^void SinusGeneratorClass::SlotSetAmplitudeNoize(double Ampl) { this->AmplitudeNoize = Ampl; }$/;"	f	class:SinusGeneratorClass
SlotSetCoord	AIMING_MODULES/aiming_class.h	/^void SlotSetCoord(QPair<float,float> Coord) { if(SetCoordPort != 0) Coord >> *SetCoordPort; }$/;"	f	class:SignalPortAdapter
SlotSetFrequency	AIM_IMAGE_IMITATION/sinus_generator_class.cpp	/^void SinusGeneratorClass::SlotSetFrequency(double Freq1, double Freq2) { Freq.first = Freq1; Freq.second = Freq2; PERIOD = 360\/Freq1;}$/;"	f	class:SinusGeneratorClass
SlotSetFrequencyDevider	CAMERA_INTERFACE/camera_interface_class.h	/^    void SlotSetFrequencyDevider(int param) { FrequencyDevider = param; };$/;"	f	class:CameraInterfaceAravis
SlotSetHighFrequency	CAMERA_INTERFACE/camera_interface_class.cpp	/^void CameraInterfaceAravis::SlotSetHighFrequency() { qDebug() << "CAMERA SET FREQ: 200"; FrequencyDevider = 0;};$/;"	f	class:CameraInterfaceAravis
SlotSetInterfaceSize	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::SlotSetInterfaceSize(int GuiSize)$/;"	f	class:WidgetMainWindow
SlotSetProcessAiming	controller_process_class.cpp	/^void ProcessControllerClass::SlotSetProcessAiming(bool OnOff)$/;"	f	class:ProcessControllerClass
SlotSetProcessAiming2	controller_process_class.cpp	/^void ProcessControllerClass::SlotSetProcessAiming2(bool OnOff)$/;"	f	class:ProcessControllerClass
SlotSetProcessCamera	controller_process_class.cpp	/^void ProcessControllerClass::SlotSetProcessCamera(bool OnOff)$/;"	f	class:ProcessControllerClass
SlotSetProcessImitation	controller_process_class.cpp	/^void ProcessControllerClass::SlotSetProcessImitation(bool OnOff)$/;"	f	class:ProcessControllerClass
SlotSetWindowSize	gui_sources/widget_adjustable.cpp	/^void AdjustableLabel::SlotSetWindowSize(int FontSize)$/;"	f	class:AdjustableLabel
SlotSetWindowSize	gui_sources/widget_adjustable.cpp	/^void WidgetAdjustable::SlotSetWindowSize(int FontSize)$/;"	f	class:WidgetAdjustable
SlotStartGenerate	AIM_IMAGE_IMITATION/sinus_generator_class.cpp	/^void SinusGeneratorClass::SlotStartGenerate(bool StartStop)$/;"	f	class:SinusGeneratorClass
SlotStartMoveAim	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^void ManualAimControl::SlotStartMoveAim(int Dir, int MoveAxis, int MoveStep)$/;"	f	class:ManualAimControl
SlotStartPaintTrajectory	gui_sources/widget_processing_image_generic.cpp	/^void WidgetProcessingImage::SlotStartPaintTrajectory(bool OnOff)$/;"	f	class:WidgetProcessingImage
SlotStartProcessRTSP	controller_process_class.cpp	/^void ProcessControllerClass::SlotStartProcessRTSP(bool OnOff)$/;"	f	class:ProcessControllerClass
SlotStartRotationFind	ROTATE_OPTIMIZATION/rotation_find_executor.cpp	/^void RotationFindProcessClass::SlotStartRotationFind(bool StartStop)$/;"	f	class:RotationFindProcessClass
SlotStartWork	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^void SlotStartWork() { DynamicControl.StartMove(); }$/;"	f	class:AimImageImitatorClass
SlotStopProcessing	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^void ModuleImageProcessing::SlotStopProcessing()$/;"	f	class:ModuleImageProcessing
SlotUpdateScene	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::SlotUpdateScene()$/;"	f	class:WidgetMainWindow
SlotWatchModule	AIMING_MODULES/aiming_class.h	/^  void SlotWatchModule()$/;"	f	class:AimingWatcherClass
SlotWindowDisplayThreadClosed	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::SlotWindowDisplayThreadClosed()$/;"	f	class:WidgetMainWindow
SmallSize	gui_sources/widget_main_window.h	/^enum InterfaceSizes {SmallSize = 0, BigSize = 1};$/;"	e	enum:InterfaceSizes
Socket	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^  QTcpSocket* Socket = 0;$/;"	m	class:TCPConnectionEngine
Socket	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^   QUdpSocket* Socket = nullptr;$/;"	m	class:UDPEngineInterface
SourceImage	CV_IMAGE_PROCESSING/image_processing_node.h	/^    std::shared_ptr<ImageSourceInterface> SourceImage = nullptr;$/;"	m	class:ModuleImageProcessing
SpacingType	gui_sources/qcustomplot.h	/^  enum SpacingType { stAbsolute       \/\/\/< Bar spacing is in absolute pixels$/;"	g	class:QCPBarsGroup
Speed	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  double Speed = 0.001;$/;"	m	class:ValueSpongeShift
SpinAmp	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    QSpinBox *SpinAmp;$/;"	m	class:Ui_WidgetSinusSource
SpinFreq	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    QDoubleSpinBox *SpinFreq;$/;"	m	class:Ui_WidgetSinusSource
SpongeValue	CV_IMAGE_PROCESSING/optimization_threshold.h	/^	    ValueSpongeShift<double> SpongeValue;$/;"	m	class:ThresholdAdjustionDispersion
StartCameraStream	CAMERA_INTERFACE/camera_interface_class.cpp	/^void CameraInterfaceAravis::StartCameraStream (bool OnOff)$/;"	f	class:CameraInterfaceAravis
StartGenerateSignal	AIM_IMAGE_IMITATION/widget_sinus_source.h	/^void StartGenerateSignal(bool StartStop) { emit SignalStart(StartStop);}$/;"	f	class:WidgetSinusSource
StartMove	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^void AimControlInterface::StartMove(){ timerMoveAim.start(50); }$/;"	f	class:AimControlInterface
StartProcess	ROTATE_OPTIMIZATION/rotation_find_executor.cpp	/^void RotationFindProcessClass::StartProcess()$/;"	f	class:RotationFindProcessClass
StartStream	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::StartStream()$/;"	f	class:CameraInterfaceHIK
StartWatching	AIMING_MODULES/aiming_class.h	/^  void StartWatching(bool OnOff)$/;"	f	class:AimingWatcherClass
StatLoaded	UTILITES/engine_statistics.h	/^	bool StatLoaded = false;$/;"	m	class:StatisticCoord
StatLoaded	UTILITES/engine_statistics.h	/^	bool StatLoaded = false;$/;"	m	class:StatisticValue
StatSample	UTILITES/engine_statistics.h	/^	std::vector<QPair<T,T>> StatSample;$/;"	m	class:StatisticCoord
StatSample	UTILITES/engine_statistics.h	/^	std::vector<T> StatSample;$/;"	m	class:StatisticValue
StateAimingFullImage	COMMON/state_block_enum.h	/^	StateAimingFullImage = 2, $/;"	e	enum:StateEnumAiming
StateAimingNoSpot	COMMON/state_block_enum.h	/^	StateAimingNoSpot = 0, $/;"	e	enum:StateEnumAiming
StateAimingNotAiming	COMMON/state_block_enum.h	/^	StateAimingNotAiming = 5$/;"	e	enum:StateEnumAiming
StateAimingROI	COMMON/state_block_enum.h	/^	StateAimingROI = 3, $/;"	e	enum:StateEnumAiming
StateAimingROISmall	COMMON/state_block_enum.h	/^	StateAimingROISmall = 4, $/;"	e	enum:StateEnumAiming
StateAimingSpotFound	COMMON/state_block_enum.h	/^	StateAimingSpotFound = 1, $/;"	e	enum:StateEnumAiming
StateBlock	AIMING_MODULES/aiming_class.h	/^  StateEnumBlock StateBlock  = StateEnumBlock::StateBlockDisabled;$/;"	m	class:AimingClass
StateBlock	AIMING_MODULES/pid_class.h	/^	StateEnumBlock StateBlock = StateEnumBlock::StateBlockDisabled;$/;"	m	class:PIDClass
StateBlockAtWork	COMMON/state_block_enum.h	/^  StateBlockAtWork      = 3, $/;"	e	enum:StateEnumBlock
StateBlockBroken	COMMON/state_block_enum.h	/^  StateBlockBroken         = 6, $/;"	e	enum:StateEnumBlock
StateBlockDisabled	COMMON/state_block_enum.h	/^  StateBlockDisabled    = 2,  $/;"	e	enum:StateEnumBlock
StateBlockFault	COMMON/state_block_enum.h	/^  StateBlockFault       = 1, $/;"	e	enum:StateEnumBlock
StateBlockHalt	COMMON/state_block_enum.h	/^  StateBlockHalt           = 7 $/;"	e	enum:StateEnumBlock
StateBlockInfo	COMMON/state_block_enum.h	/^class StateBlockInfo$/;"	c
StateBlockInitialization	COMMON/state_block_enum.h	/^  StateBlockInitialization = 4, $/;"	e	enum:StateEnumBlock
StateBlockNoConnect	COMMON/state_block_enum.h	/^  StateBlockNoConnect      = 5, $/;"	e	enum:StateEnumBlock
StateBlockReadyToWork	COMMON/state_block_enum.h	/^  StateBlockReadyToWork = 0, $/;"	e	enum:StateEnumBlock
StateEnumAiming	COMMON/state_block_enum.h	/^enum StateEnumAiming {$/;"	g
StateEnumBlock	COMMON/state_block_enum.h	/^enum StateEnumBlock {$/;"	g
StateEnumInit	COMMON/state_block_enum.h	/^enum StateEnumInit { StateInitNotDone = 0, $/;"	g
StateInfoAiming	COMMON/state_block_enum.h	/^class StateInfoAiming$/;"	c
StateInitAiming	COMMON/state_block_enum.h	/^                     StateInitAiming  = 1, $/;"	e	enum:StateEnumInit
StateInitDone	COMMON/state_block_enum.h	/^					 StateInitDone    = 2 };$/;"	e	enum:StateEnumInit
StateInitNotDone	COMMON/state_block_enum.h	/^enum StateEnumInit { StateInitNotDone = 0, $/;"	e	enum:StateEnumInit
StatisticCoord	UTILITES/engine_statistics.h	/^	StatisticCoord() {SetSize(10); };$/;"	f	class:StatisticCoord
StatisticCoord	UTILITES/engine_statistics.h	/^	StatisticCoord(int WindowSize) { SetSize(WindowSize); };$/;"	f	class:StatisticCoord
StatisticCoord	UTILITES/engine_statistics.h	/^class StatisticCoord  : public PassCoordClass<T>$/;"	c
StatisticGroup	UTILITES/engine_statistics.h	/^    StatisticGroup(const StatisticGroup& Group) {};$/;"	f	class:StatisticGroup
StatisticGroup	UTILITES/engine_statistics.h	/^    StatisticGroup(int Count, int WindowSize) {};$/;"	f	class:StatisticGroup
StatisticGroup	UTILITES/engine_statistics.h	/^class StatisticGroup$/;"	c
StatisticNode	UTILITES/engine_statistics.h	/^	StatisticNode() { };$/;"	f	class:StatisticNode
StatisticNode	UTILITES/engine_statistics.h	/^	StatisticNode(int size) {SetSize(size);};$/;"	f	class:StatisticNode
StatisticNode	UTILITES/engine_statistics.h	/^class StatisticNode : public PassValueClass<T>, public PassCoordClass<T>$/;"	c
StatisticValue	UTILITES/engine_statistics.h	/^	StatisticValue() { SetSize(10);};$/;"	f	class:StatisticValue
StatisticValue	UTILITES/engine_statistics.h	/^	StatisticValue(int WindowSize) {SetSize(WindowSize);};$/;"	f	class:StatisticValue
StatisticValue	UTILITES/engine_statistics.h	/^class StatisticValue  : public PassValueClass<T>$/;"	c
Statistics	UTILITES/engine_statistics.h	/^    std::map<int,StatisticNode<T>> Statistics;$/;"	m	class:StatisticGroup
Step	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    int Step = 0; $/;"	m	class:ManualAimControl
Step	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  int Step = 10;$/;"	m	class:ThresholdFindingParallelDispersion
StepNumber	ROTATE_OPTIMIZATION/rotation_find_executor.h	/^	int StepNumber = 0;$/;"	m	class:RotationFindProcessClass
StepPeriod	AIMING_MODULES/aiming_class.h	/^	float StepPeriod = 0;$/;"	m	class:TimeIntegratorClass
StepPeriodThreshold	AIMING_MODULES/pid_class.h	/^	double StepPeriodThreshold = 0.01;$/;"	m	class:PIDClass
StepsTo	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  int  StepsTo(const MessageIteratorDense<H>& It) { return It.MessageNumber - MessageNumber;}; $/;"	f	class:MessageIteratorDense
StepsTo	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	int  StepsTo(const MessageIteratorGenericBase<H>& It) { return It.MessageNumber - MessageNumber;}; $/;"	f	class:IteratorMode::MessageIteratorGenericBase
StopAllProcess	controller_process_class.cpp	/^void ProcessControllerClass::StopAllProcess()$/;"	f	class:ProcessControllerClass
StopCameraStream	CAMERA_INTERFACE/camera_control_interface.h	/^            void StopCameraStream() { StartCameraStream(false);} ;$/;"	f	class:CameraControlInterface
StopMove	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^void AimControlInterface::StopMove() { timerMoveAim.stop(); }$/;"	f	class:AimControlInterface
StopProcess	ROTATE_OPTIMIZATION/rotation_find_executor.cpp	/^void RotationFindProcessClass::StopProcess()$/;"	f	class:RotationFindProcessClass
StopStream	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::StopStream()$/;"	f	class:CameraInterfaceHIK
StoreTemplates	CV_IMAGE_PROCESSING/image_finder.h	/^    std::vector<cv::Mat> StoreTemplates;$/;"	m	class:ImageTemplateFinder
Substract	AIMING_MODULES/aiming_class.h	/^  SubstractNode<float> Substract;$/;"	m	class:AimingClass
Substract	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	/^class Substract : public PassCoordClass<float>$/;"	c
SubstractNode	UTILITES/thread_operation_nodes.h	/^class SubstractNode : public PassCoordClass<float>$/;"	c
SubstractPair	UTILITES/thread_operation_nodes.h	/^    SubstractNode<float> SubstractPair;$/;"	m	class:TrackHoldDetectorNode
Sum	AIMING_MODULES/aiming_class.h	/^  SumNode<float> Sum;$/;"	m	class:AimingClass
SumCoord	UTILITES/thread_operation_nodes.h	/^  QPair<T, T> SumCoord;$/;"	m	class:CoordInversionAxisNode
SumCoord	UTILITES/thread_operation_nodes.h	/^  QPair<T, T> SumCoord;$/;"	m	class:SumNode
SumNode	UTILITES/thread_operation_nodes.h	/^class SumNode : public PassCoordClass<float>$/;"	c
SummVec	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	/^class SummVec : public PassCoordClass<float>$/;"	c
SwitchOutputChannel	CAMERA_INTERFACE/interface_camera_hik.h	/^      void SwitchOutputChannel() { CurrentStoreChannel++; if(CurrentStoreChannel == ImageChanneledStore.end()) CurrentStoreChannel = ImageChanneledStore.begin();}$/;"	f	class:CameraInterfaceHIK
SwitchToNext	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^void MessageIteratorGenericBase<H>::SwitchToNext()$/;"	f	class:IteratorMode::MessageIteratorGenericBase
SwitchToNextTestCoord	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateDataMeasureEngine::SwitchToNextTestCoord() { DataFilter.WaitCoord(DataVectors.GetTestCoord()); }$/;"	f	class:RotateDataMeasureEngine
SymbolCross	gui_sources/qcustomplot.h	/^  static const QChar SymbolCross;$/;"	m	class:QCPLabelPainterPrivate
SymbolDot	gui_sources/qcustomplot.h	/^  static const QChar SymbolDot;$/;"	m	class:QCPLabelPainterPrivate
SystemScale	AIMING_MODULES/rotate_vector_class.h	/^	float SystemScale = 1;$/;"	m	class:RotateVectorClass
TABLE_CONTAINER_WIDGET_H	gui_sources/widget_table_group.h	2;"	d
TAG	AIMING_MODULES/pid_class.cpp	3;"	d	file:
TAG	AIM_IMAGE_IMITATION/sinus_generator_class.cpp	8;"	d	file:
TAG	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^static char* TAG = "[ ROTATION ]";$/;"	v	file:
TAG	ROTATE_OPTIMIZATION/rotation_find_executor.cpp	5;"	d	file:
TAG	UTILITES/engine_statistics.cpp	/^static char* TAG = "[ STATISTIC ]";$/;"	v	file:
TAG	UTILITES/thread_operation_nodes.h	/^  std::string TAG = "OUTPUT: "; $/;"	m	class:ValueDebugOutput
TAG	UTILITES/thread_operation_nodes.h	/^  std::string TAG = "VALUE PERIOD : "; $/;"	m	class:ValuePeriodMeasure
TAG	gui_sources/widget_main_window.cpp	8;"	d	file:
TAG	gui_sources/widget_output_image_display.cpp	4;"	d	file:
TAG	gui_sources/widget_output_text_display.cpp	4;"	d	file:
TAG	gui_sources/widget_scene_node_interface.cpp	6;"	d	file:
TAG_NAME	AIMING_MODULES/aiming_class.h	/^  std::string TAG_NAME = QString("[ %1 ] ").arg("AIMING").toStdString();$/;"	m	class:AimingClass
TAG_NAME	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    std::string TAG_NAME = QString("[ %1 ] ").arg("IMAGE_IMITATOR").toStdString();$/;"	m	class:AimImageImitatorClass
TAG_NAME	CAMERA_INTERFACE/interface_camera_hik.h	/^    std::string TAG_NAME = QString("[ %1 ] ").arg("CAMERA STOR").toStdString();$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
TAG_NAME	CAMERA_INTERFACE/interface_camera_hik.h	/^  std::string TAG_NAME = QString("[ %1 ] ").arg("CAMERA").toStdString();$/;"	m	class:CameraInterfaceHIK
TAG_NAME	CV_IMAGE_PROCESSING/image_processing_node.h	/^  std::string TAG_NAME = QString("[ %1 ] ").arg("TRACKER_CENTROID").toStdString();$/;"	m	class:ModuleImageProcessing
TAG_NAME	DEVICES/device_generic_interface.h	/^	QString TAG_NAME;$/;"	m	class:DeviceGenericInterface
TAG_NAME	controller_process_class.h	/^std::string TAG_NAME = QString("[ %1 ] ").arg("CONTROLLER").toStdString();$/;"	m	class:ProcessControllerClass
TCPConnectionEngine	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^TCPConnectionEngine::TCPConnectionEngine(QObject *parent)$/;"	f	class:TCPConnectionEngine
TCPConnectionEngine	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^class TCPConnectionEngine : public ConnectionInterface$/;"	c
TCP_ENGINE_INTERFACE_H	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	2;"	d
TEMPLATE_TRACKER_H	CV_IMAGE_PROCESSING/tracker_template.h	2;"	d
TEST_DATA_COUNT	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	11;"	d
TEST_DATA_COUT	include/CommonHeaders.h	66;"	d
TORCH_PROCESSING_MODULE_EXPORT	PYTORCH_PROCESSING/TorchProcessing_global.h	13;"	d
TORCH_PROCESSING_MODULE_EXPORT	PYTORCH_PROCESSING/TorchProcessing_global.h	15;"	d
TORCH_PROCESSING_MODULE_GLOBAL_H	PYTORCH_PROCESSING/TorchProcessing_global.h	2;"	d
TRACKER_CENTROID_H	CV_IMAGE_PROCESSING/tracker_centroid.h	2;"	d
TRANSFORMCOORDCLASS_H	UTILITES/transform_coord_class.h	2;"	d
TRANSFORM_SCALE	ROTATE_OPTIMIZATION/rotation_find_executor.h	11;"	d
TYPE_ID	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static constinit const int TYPE_ID;$/;"	m	class:TypeRegister
TYPE_REGISTER_ENGINE_H	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	2;"	d
TakeMessage	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^MessageStruct<void*,H>& engine_ring_buffer_dense<H,S_M,N_M>::TakeMessage()$/;"	f	class:engine_ring_buffer_dense
TakeMessage	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^MessageGeneric<void*,H>& RingBufferGeneric<H,M_S,M_N,I_T>::TakeMessage()$/;"	f	class:RingBufferGeneric
TakeMessagePtr	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^MessageStruct<void*,H>* engine_ring_buffer_dense<H,S_M,N_M>::TakeMessagePtr()$/;"	f	class:engine_ring_buffer_dense
TakeMessagePtr	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^MessageGeneric<void*,H>* RingBufferGeneric<H,M_S,M_N,I_T>::TakeMessagePtr()$/;"	f	class:RingBufferGeneric
TemplateImage	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^  cv::Mat TemplateImage;$/;"	m	class:TrackerFirst
TemplateRect	CV_IMAGE_PROCESSING/image_finder.h	/^    cv::Size TemplateRect;$/;"	m	class:ImageTemplateFinder
TestCommand	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    TestCommand()$/;"	f	struct:TestCommand
TestCommand	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^struct TestCommand$/;"	s
TestCoordVectorInput	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	vector<QPair<float,float>> TestCoordVectorInput;$/;"	m	class:TestDataVectorsContainer
TestDataVectorsContainer	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^TestDataVectorsContainer::TestDataVectorsContainer()$/;"	f	class:TestDataVectorsContainer
TestDataVectorsContainer	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^class TestDataVectorsContainer$/;"	c
Thinning	UTILITES/thread_operation_nodes.h	/^  int Thinning = 0;$/;"	m	class:ValueDebugOutput
Thinning	gui_sources/widget_processing_image_generic.h	/^ThinningCounter Thinning;$/;"	m	class:WidgetProcessingImage
ThinningCounter	CAMERA_INTERFACE/camera_interface_class.h	/^    int ThinningCounter = 0;$/;"	m	class:CameraInterfaceAravis
ThinningCounter	UTILITES/debug_output_filter.h	/^class ThinningCounter : public BlockCounterClass$/;"	c
ThinningFilter	UTILITES/thread_operation_nodes.h	/^    ThinningFilter(int peak = 100) {this->peak = peak;}; $/;"	f	class:ThinningFilter
ThinningFilter	UTILITES/thread_operation_nodes.h	/^class ThinningFilter : public PassValueClass<V>$/;"	c
ThinningTimePeriod	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^QTime ThinningTimePeriod;$/;"	m	class:AimImageImitatorClass
ThreadCamera	controller_process_class.h	/^QThread ThreadCamera;$/;"	m	class:ProcessControllerClass
ThreadProcess	controller_process_class.h	/^QThread ThreadProcess;$/;"	m	class:ProcessControllerClass
ThreadProcess2	controller_process_class.h	/^QThread ThreadProcess2;$/;"	m	class:ProcessControllerClass
ThreadUtilite	controller_process_class.h	/^QThread ThreadUtilite;$/;"	m	class:ProcessControllerClass
Threshold	CV_IMAGE_PROCESSING/image_processing_node.h	/^      int Threshold = 50;$/;"	m	class:ModuleImageProcessing
Threshold	UTILITES/thread_operation_nodes.h	/^  T Threshold;$/;"	m	class:ValueDetector
Threshold	UTILITES/thread_operation_nodes.h	/^  double Threshold = 10;$/;"	m	class:ValueInversion
Threshold	UTILITES/thread_operation_nodes.h	/^  double Threshold = 10;$/;"	m	class:ValueSaturation
ThresholdAdjustionDispersion	CV_IMAGE_PROCESSING/optimization_threshold.h	/^class ThresholdAdjustionDispersion : public OptimizationThreshold$/;"	c
ThresholdCalculationLumen	CV_IMAGE_PROCESSING/optimization_threshold.h	/^class ThresholdCalculationLumen : public OptimizationThreshold$/;"	c
ThresholdCorrection	CV_IMAGE_PROCESSING/image_processing_node.h	/^    float ThresholdCorrection = 0.7;$/;"	m	class:ModuleImageProcessing
ThresholdFindingParallelDispersion	CV_IMAGE_PROCESSING/optimization_threshold.cpp	/^ThresholdFindingParallelDispersion::ThresholdFindingParallelDispersion(int MinThreshold, int Step, int NumberGroup)$/;"	f	class:ThresholdFindingParallelDispersion
ThresholdFindingParallelDispersion	CV_IMAGE_PROCESSING/optimization_threshold.h	/^class ThresholdFindingParallelDispersion : public OptimizationThreshold$/;"	c
ThresholdOptimizatorEngine	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  ThresholdOptimizatorEngine(){CurrentProcess = &NodeDispersionRunaway;};$/;"	f	class:ThresholdOptimizatorEngine
ThresholdOptimizatorEngine	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  ThresholdOptimizatorEngine(PROCESS_METHOD Method)$/;"	f	class:ThresholdOptimizatorEngine
ThresholdOptimizatorEngine	CV_IMAGE_PROCESSING/optimization_threshold.h	/^class ThresholdOptimizatorEngine : public OptimizationThreshold$/;"	c
TickLabelData	gui_sources/qcustomplot.h	/^  struct TickLabelData$/;"	s	class:QCPAxisPainterPrivate
TickStepStrategy	gui_sources/qcustomplot.h	/^  enum TickStepStrategy$/;"	g	class:QCPAxisTicker
TimeDiffer	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  ValueDifference<double>      TimeDiffer;$/;"	m	class:ValueSpongeShift
TimeFromLastCommand	AIMING_MODULES/pid_class.h	/^	std::chrono::time_point<std::chrono::high_resolution_clock> TimeFromLastCommand;$/;"	m	class:PIDClass
TimeIntegratorClass	AIMING_MODULES/aiming_class.h	/^class TimeIntegratorClass : public PassCoordClass<T>$/;"	c
TimeLimit	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^    double TimeLimit = 300;$/;"	m	class:PlotGraphicsInterface
TimeMeasure	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^    uint16_t  TimeMeasure   = 1;$/;"	m	struct:CommandCalibration
TimeMeasurePeriod	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^	QElapsedTimer TimeMeasurePeriod;$/;"	m	class:PlotGraphicsInterface
TimePoint	CAMERA_INTERFACE/camera_interface_class.h	/^    std::chrono::time_point<std::chrono::high_resolution_clock> TimePoint;$/;"	m	class:CameraInterfaceAravis
TimePoint	COMMON/interface_image_source.h	/^    std::chrono::time_point<std::chrono::high_resolution_clock> TimePoint;$/;"	m	class:FramePeriodMeasure
TimePointLast	COMMON/interface_image_source.h	/^    std::chrono::time_point<std::chrono::high_resolution_clock> TimePointLast;$/;"	m	class:FramePeriodMeasure
TimePos	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^    double TimePos = 0;$/;"	m	class:PlotGraphicsInterface
TimeSeries	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^    QVector<double>  TimeSeries;$/;"	m	class:PlotGraphicsInterface
TimeStep	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^    double TimeStep = 1;$/;"	m	class:PlotGraphicsInterface
TimeUnit	gui_sources/qcustomplot.h	/^  enum TimeUnit { tuMilliseconds \/\/\/< Milliseconds, one thousandth of a second (%%z in \\ref setTimeFormat)$/;"	g	class:QCPAxisTickerTime
TimerAutoconnection	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^  QTimer      TimerAutoconnection;$/;"	m	class:TCPConnectionEngine
TimerDisplayDataFast	gui_sources/widget_main_window.h	/^	QTimer TimerDisplayDataFast;$/;"	m	class:WidgetMainWindow
TimerDisplayDataSlow	gui_sources/widget_main_window.h	/^	QTimer TimerDisplayDataSlow;$/;"	m	class:WidgetMainWindow
TimerGenerateSinus	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	QTimer TimerGenerateSinus;$/;"	m	class:SinusGeneratorClass
TimerPeriod	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	int TimerPeriod = 5;$/;"	m	class:SinusGeneratorClass
ToString	COMMON/state_block_enum.h	/^   static QString ToString(StateEnumAiming state)$/;"	f	class:StateInfoAiming
ToString	COMMON/state_block_enum.h	/^   static QString ToString(StateEnumBlock state)$/;"	f	class:StateBlockInfo
ToString	COMMON/type_block_enum.h	/^   static QString ToString(TypeEnumBlock type)$/;"	f	class:BlockTypesInfo
TracerStyle	gui_sources/qcustomplot.h	/^  enum TracerStyle { tsNone        \/\/\/< The tracer is not visible$/;"	g	class:QCPItemTracer
TrackHoldDetectorNode	UTILITES/thread_operation_nodes.h	/^    TrackHoldDetectorNode(double Threshold, int Dispersion)$/;"	f	class:TrackHoldDetectorNode
TrackHoldDetectorNode	UTILITES/thread_operation_nodes.h	/^class TrackHoldDetectorNode: public PassCoordClass<float>$/;"	c
TrackObject	CV_IMAGE_PROCESSING/tracker_template.cpp	/^void ImageTrackerTemplate::TrackObject()$/;"	f	class:ImageTrackerTemplate
TrackObjectCentroid	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^void ImageTrackerCentroid::TrackObjectCentroid(cv::Mat& Image, cv::Rect& ROI)$/;"	f	class:ImageTrackerCentroid
TrackObjectCentroidGPU	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^void ImageTrackerCentroidGPU::TrackObjectCentroidGPU(cv::Mat& Image, cv::Rect& ROI)$/;"	f	class:ImageTrackerCentroidGPU
TrackerCSRT	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^class CV_EXPORTS_W TrackerCSRT : public Tracker$/;"	c	namespace:cv::tracking
TrackerFirst	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.cpp	/^TrackerFirst::TrackerFirst()$/;"	f	class:TrackerFirst
TrackerFirst	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^class TrackerFirst$/;"	c
TrackerKCF	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^class CV_EXPORTS_W TrackerKCF : public Tracker$/;"	c	namespace:cv::tracking
TrackingDetector	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    ValueDetector<double> TrackingDetector;$/;"	m	class:ImageTrackerCentroid
TrackingDetector	UTILITES/thread_operation_nodes.h	/^           ValueDetector<float> TrackingDetector;$/;"	m	class:TrackHoldDetectorNode
TrackingProcess1	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    std::function<void (cv::Mat&)> TrackingProcess1;$/;"	m	class:ImageTrackerCentroid
TrackingProcess2	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    std::function<void (cv::Mat&)> TrackingProcess2;$/;"	m	class:ImageTrackerCentroid
Trajectory	gui_sources/widget_processing_image_generic.h	/^QPolygonF Trajectory;$/;"	m	class:WidgetProcessingImage
TransformCoord	UTILITES/transform_coord_class.h	/^	std::function<void(QPair<float,float>)> TransformCoord;$/;"	m	class:TransformCoordClass
TransformCoordClass	UTILITES/transform_coord_class.cpp	/^TransformCoordClass::TransformCoordClass()$/;"	f	class:TransformCoordClass
TransformCoordClass	UTILITES/transform_coord_class.cpp	/^TransformCoordClass::TransformCoordClass(const TransformCoordClass& CopyTransform)$/;"	f	class:TransformCoordClass
TransformCoordClass	UTILITES/transform_coord_class.cpp	/^TransformCoordClass::TransformCoordClass(double ScaleParam, double OffsetParam)$/;"	f	class:TransformCoordClass
TransformCoordClass	UTILITES/transform_coord_class.h	/^    TransformCoordClass() {};$/;"	f	class:TransformCoordClass
TransformCoordClass	UTILITES/transform_coord_class.h	/^    TransformCoordClass(double ScaleParam, double OffsetParam = 0, double Saturation = 20000)$/;"	f	class:TransformCoordClass
TransformCoordClass	UTILITES/transform_coord_class.h	/^class  TransformCoordClass : public PassCoordClass<float>$/;"	c
TryLoadSettings	UTILITES/register_settings.cpp	/^bool SettingsRegister::TryLoadSettings(QString file, QString GROUP)$/;"	f	class:SettingsRegister
TwoPi	gui_sources/link_line.cpp	/^static double TwoPi = 2.0 * Pi;$/;"	v	file:
Type	gui_sources/link_line.h	/^    enum { Type = UserType + 2 };$/;"	e	enum:LinkLine::__anon98
TypeBlock	AIMING_MODULES/aiming_class.h	/^  TypeEnumBlock  TypeBlock   = TypeEnumBlock::AimingBlock;$/;"	m	class:AimingClass
TypeCount	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static uint8_t TypeCount;$/;"	m	class:TypeRegister
TypeCount	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^template<typename T> uint8_t TypeRegister<T>::TypeCount = 0;$/;"	m	class:TypeRegister
TypeEnumAiming	COMMON/state_block_enum.h	/^enum TypeEnumAiming { AimingLoop = 0, AimingLoop1 = 1, AimingLoop2 = 2 , AimingLoop3 = 3, AimingDirect = 4};$/;"	g
TypeEnumBlock	COMMON/type_block_enum.h	/^enum TypeEnumBlock $/;"	g
TypeEnumBlock_H	COMMON/type_block_enum.h	2;"	d
TypeIDMax	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static uint16_t TypeIDMax;$/;"	m	class:TypeRegister
TypeIDMax	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^template<typename T> uint16_t TypeRegister<T>::TypeIDMax = 0;$/;"	m	class:TypeRegister
TypeRegister	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^class TypeRegister$/;"	c
TypeSizeMax	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static size_t TypeSizeMax;$/;"	m	class:TypeRegister
TypeSizeMax	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^template<typename T> size_t TypeRegister<T>::TypeSizeMax = 0;$/;"	m	class:TypeRegister
TypeSizeMin	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static size_t TypeSizeMin;$/;"	m	class:TypeRegister
TypeSizeMin	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^template<typename T> size_t TypeRegister<T>::TypeSizeMin = 60000;$/;"	m	class:TypeRegister
UDPEngineInterface	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^UDPEngineInterface::UDPEngineInterface(QString IPDevice, int Port, QString IPListen, int PortLocal, QObject *parent)$/;"	f	class:UDPEngineInterface
UDPEngineInterface	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^UDPEngineInterface::UDPEngineInterface(QString IPDevice, int Port,QHostAddress::SpecialAddress IPListen, int PortLocal, QObject *parent)$/;"	f	class:UDPEngineInterface
UDPEngineInterface	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^class UDPEngineInterface : public ConnectionInterface$/;"	c
UI_WIDGET_AIMING_CONTROL_H	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	10;"	d
UI_WIDGET_CAMERA_CONTROL_H	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	10;"	d
UI_WIDGET_CONTAINER_GROUP_H	build/ImageProcProject_autogen/include/ui_widget_container_group.h	10;"	d
UI_WIDGET_IMITATOR_CONTROL_H	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	10;"	d
UI_WIDGET_MAIN_WINDOW_H	build/ImageProcProject_autogen/include/ui_widget_main_window.h	10;"	d
UI_WIDGET_OUTPUT_IMAGE_DISPLAY_H	build/ImageProcProject_autogen/include/ui_widget_output_image_display.h	10;"	d
UI_WIDGET_OUTPUT_TEXT_DISPLAY_H	build/ImageProcProject_autogen/include/ui_widget_output_text_display.h	10;"	d
UI_WIDGET_PROCESSING_IMAGE_CONTROL_H	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	10;"	d
UI_WIDGET_PROCESSING_IMAGE_GENERIC_H	build/ImageProcProject_autogen/include/ui_widget_processing_image_generic.h	10;"	d
UI_WIDGET_PROCESS_CONTROLLER_H	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	10;"	d
UI_WIDGET_SINUS_SOURCE_H	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	10;"	d
UI_WIDGET_TABLE_GROUP_H	build/ImageProcProject_autogen/include/ui_widget_table_group.h	10;"	d
UTILITE_H	COMMON/utilite.h	2;"	d
Ui	DEVICES/LaserPointerControlLib/WindowLaserControl.h	/^namespace Ui { class WindowLaserControlClass; }$/;"	n
Ui	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^namespace Ui {$/;"	n
Ui	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^namespace Ui {$/;"	n
Ui	build/ImageProcProject_autogen/include/ui_widget_container_group.h	/^namespace Ui {$/;"	n
Ui	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^namespace Ui {$/;"	n
Ui	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^namespace Ui {$/;"	n
Ui	build/ImageProcProject_autogen/include/ui_widget_output_image_display.h	/^namespace Ui {$/;"	n
Ui	build/ImageProcProject_autogen/include/ui_widget_output_text_display.h	/^namespace Ui {$/;"	n
Ui	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	/^namespace Ui {$/;"	n
Ui	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^namespace Ui {$/;"	n
Ui	build/ImageProcProject_autogen/include/ui_widget_processing_image_generic.h	/^namespace Ui {$/;"	n
Ui	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^namespace Ui {$/;"	n
Ui	build/ImageProcProject_autogen/include/ui_widget_table_group.h	/^namespace Ui {$/;"	n
Ui	gui_sources/widget_camera_control.h	/^namespace Ui { class WidgetCameraControl; }$/;"	n
Ui	gui_sources/widget_container_group.h	/^namespace Ui { class WidgetContainerGroup; }$/;"	n
Ui	gui_sources/widget_imitator_control.h	/^namespace Ui { class WidgetImageImitator; }$/;"	n
Ui	gui_sources/widget_process_controller.h	/^namespace Ui { class WidgetProcessController; }$/;"	n
Ui	gui_sources/widget_processing_image_control.h	/^namespace Ui { class WidgetProcessingImageControl; }$/;"	n
Ui	gui_sources/widget_processing_image_generic.h	/^namespace Ui { class WidgetProcessingImage; }$/;"	n
Ui	gui_sources/widget_scanator_control.h	/^namespace Ui { class WidgetScanatorControl; }$/;"	n
Ui	gui_sources/widget_table_group.h	/^namespace Ui { class WidgetTableGroup; }$/;"	n
Ui	gui_sources/widget_transmission_interface.h	/^namespace Ui { class WidgetTransmissionControl; }$/;"	n
Ui_OutputTextDisplay	build/ImageProcProject_autogen/include/ui_widget_output_text_display.h	/^class Ui_OutputTextDisplay$/;"	c
Ui_WidgetAimingControl	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^class Ui_WidgetAimingControl$/;"	c
Ui_WidgetCameraControl	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^class Ui_WidgetCameraControl$/;"	c
Ui_WidgetContainerGroup	build/ImageProcProject_autogen/include/ui_widget_container_group.h	/^class Ui_WidgetContainerGroup$/;"	c
Ui_WidgetImageImitator	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^class Ui_WidgetImageImitator$/;"	c
Ui_WidgetMainWindow	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^class Ui_WidgetMainWindow$/;"	c
Ui_WidgetOutputImageDisplay	build/ImageProcProject_autogen/include/ui_widget_output_image_display.h	/^class Ui_WidgetOutputImageDisplay$/;"	c
Ui_WidgetProcessController	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	/^class Ui_WidgetProcessController$/;"	c
Ui_WidgetProcessingImage	build/ImageProcProject_autogen/include/ui_widget_processing_image_generic.h	/^class Ui_WidgetProcessingImage$/;"	c
Ui_WidgetProcessingImageControl	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^class Ui_WidgetProcessingImageControl$/;"	c
Ui_WidgetSinusSource	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^class Ui_WidgetSinusSource$/;"	c
Ui_WidgetTableGroup	build/ImageProcProject_autogen/include/ui_widget_table_group.h	/^class Ui_WidgetTableGroup$/;"	c
UpdateCommonMatrix	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateOperationContainer::UpdateCommonMatrix()$/;"	f	class:RotateOperationContainer
UpdatePhase	gui_sources/qcustomplot.h	/^  enum UpdatePhase { upPreparation \/\/\/< Phase used for any type of preparation that needs to be done before margin calculation and layout$/;"	g	class:QCPLayoutElement
UpdateWidget	gui_sources/widget_scene_node_interface.cpp	/^void WidgetSceneNodeInterface::UpdateWidget()$/;"	f	class:WidgetSceneNodeInterface
Value	COMMON/interface_pass_value.h	/^	V Value;$/;"	m	class:PassValueClass
ValueAbsolutization	UTILITES/thread_operation_nodes.h	/^class ValueAbsolutization : public PassValueClass<T>$/;"	c
ValueAvarage	UTILITES/engine_statistics.h	/^	T ValueAvarage = 0;$/;"	m	class:StatisticValue
ValueBinaryInversion	UTILITES/thread_operation_nodes.h	/^class ValueBinaryInversion : public PassValueClass<T>$/;"	c
ValueBlockCounter	UTILITES/thread_operation_nodes.h	/^class ValueBlockCounter : public ThinningFilter<V>$/;"	c
ValueBreeder	UTILITES/thread_operation_nodes.h	/^class ValueBreeder : public PassValueClass<T>$/;"	c
ValueCategorizer	UTILITES/thread_operation_nodes.h	/^class ValueCategorizer : public PassValueClass<T>$/;"	c
ValueDebugOutput	UTILITES/thread_operation_nodes.h	/^class ValueDebugOutput : public PassValueClass<T>$/;"	c
ValueDetector	UTILITES/thread_operation_nodes.h	/^  ValueDetector(){};$/;"	f	class:ValueDetector
ValueDetector	UTILITES/thread_operation_nodes.h	/^ValueDetector<T>::ValueDetector(ValueDetector<T>& Detector)$/;"	f	class:ValueDetector
ValueDetector	UTILITES/thread_operation_nodes.h	/^class ValueDetector : public PassValueClass<T>$/;"	c
ValueDifference	UTILITES/thread_operation_nodes.h	/^class ValueDifference : public PassValueClass<T>$/;"	c
ValueDispersion	UTILITES/engine_statistics.h	/^	T ValueDispersion = 0;$/;"	m	class:StatisticValue
ValueInversion	UTILITES/thread_operation_nodes.h	/^class ValueInversion : public PassValueClass<T>$/;"	c
ValueMax	UTILITES/engine_statistics.h	/^	T ValueMax = 0;$/;"	m	class:StatisticValue
ValueMin	UTILITES/engine_statistics.h	/^	T ValueMin = 0;$/;"	m	class:StatisticValue
ValueOffset	CV_IMAGE_PROCESSING/optimization_threshold.h	/^	double ValueOffset = 0;$/;"	m	class:OptimizationThreshold
ValuePassShutter	UTILITES/thread_operation_nodes.h	/^class ValuePassShutter : public PassValueClass<T>$/;"	c
ValuePeriodMeasure	UTILITES/thread_operation_nodes.h	/^class ValuePeriodMeasure : public PassValueClass<T>$/;"	c
ValueRandomization	UTILITES/thread_operation_nodes.h	/^class ValueRandomization : public PassValueClass<T>$/;"	c
ValueSaturation	UTILITES/thread_operation_nodes.h	/^  ValueSaturation() {};$/;"	f	class:ValueSaturation
ValueSaturation	UTILITES/thread_operation_nodes.h	/^  ValueSaturation(ValueSaturation<T>& Node) {this->Threshold = Node.Threshold;};$/;"	f	class:ValueSaturation
ValueSaturation	UTILITES/thread_operation_nodes.h	/^class ValueSaturation : public PassValueClass<T>$/;"	c
ValueSpongeShift	CV_IMAGE_PROCESSING/optimization_threshold.h	/^class ValueSpongeShift : public PassValueClass<T>$/;"	c
ValueStorage	UTILITES/thread_operation_nodes.h	/^	ValueStorage(int size) { SetSize(size); };$/;"	f	class:ValueStorage
ValueStorage	UTILITES/thread_operation_nodes.h	/^  ValueStorage()         { SetSize(10); };$/;"	f	class:ValueStorage
ValueStorage	UTILITES/thread_operation_nodes.h	/^class ValueStorage : public PassValueClass<T>$/;"	c
VideoStreamRTSP	stream_video_rtsp.h	/^  VideoStreamRTSP() { gst_init (NULL, NULL); };$/;"	f	class:VideoStreamRTSP
VideoStreamRTSP	stream_video_rtsp.h	/^class VideoStreamRTSP$/;"	c
WIDGET_ADJUSTABLE_H	gui_sources/widget_adjustable.h	2;"	d
WIDGET_CAMERA_INTERFACE_HIK_H	CAMERA_INTERFACE/interface_camera_hik.h	2;"	d
WIDGET_FONT_SIZE	gui_sources/widget_adjustable.h	/^    int WIDGET_FONT_SIZE = 12;$/;"	m	class:AdjustableLabel
WIDGET_FONT_SIZE	gui_sources/widget_adjustable.h	/^    int WIDGET_FONT_SIZE = 12;$/;"	m	class:WidgetAdjustable
WIDGET_LINEGRAPH_H	gui_sources/GRAPHICS_WINDOW_GRAPH/widget_line_graph.h	5;"	d
WIDGET_SCENE_NODE_INTERFACE_H	gui_sources/widget_scene_node_interface.h	2;"	d
WIGET_GRAPHICS_PLOT	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	2;"	d
WaitCoord	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void AccumulateDataFilter::WaitCoord(QPair<float,float> coord)$/;"	f	class:AccumulateDataFilter
WaitDataAmount	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^  uint8_t  WaitDataAmount;$/;"	m	class:MessageIteratorDense
WaitInputCoord	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	QPair<float,float> WaitInputCoord;$/;"	m	class:AccumulateDataFilter
WeatherControlBlock	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
WidgetAdjustable	gui_sources/widget_adjustable.cpp	/^WidgetAdjustable::WidgetAdjustable(QWidget* parent) : QWidget(parent)$/;"	f	class:WidgetAdjustable
WidgetAdjustable	gui_sources/widget_adjustable.h	/^class WidgetAdjustable : public QWidget$/;"	c
WidgetAimingControl	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    class WidgetAimingControl: public Ui_WidgetAimingControl {};$/;"	c	namespace:Ui
WidgetAimingControl	gui_sources/widget_aiming_control.cpp	/^WidgetAimingControl::WidgetAimingControl(QWidget *parent)$/;"	f	class:WidgetAimingControl
WidgetAimingControl	gui_sources/widget_aiming_control.h	/^class WidgetAimingControl : public WidgetAdjustable$/;"	c
WidgetCameraControl	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    class WidgetCameraControl: public Ui_WidgetCameraControl {};$/;"	c	namespace:Ui
WidgetCameraControl	gui_sources/widget_camera_control.cpp	/^WidgetCameraControl::WidgetCameraControl(QWidget* parent) : WidgetAdjustable(parent), ui(new Ui::WidgetCameraControl)$/;"	f	class:WidgetCameraControl
WidgetCameraControl	gui_sources/widget_camera_control.h	/^class WidgetCameraControl : public WidgetAdjustable$/;"	c
WidgetContainerGroup	build/ImageProcProject_autogen/include/ui_widget_container_group.h	/^    class WidgetContainerGroup: public Ui_WidgetContainerGroup {};$/;"	c	namespace:Ui
WidgetContainerGroup	gui_sources/widget_container_group.cpp	/^WidgetContainerGroup::WidgetContainerGroup(QWidget* parent) : WidgetAdjustable(parent), ui(new Ui::WidgetContainerGroup)$/;"	f	class:WidgetContainerGroup
WidgetContainerGroup	gui_sources/widget_container_group.h	/^class WidgetContainerGroup : public WidgetAdjustable$/;"	c
WidgetGraphisPlot	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.cpp	/^WidgetGraphisPlot::WidgetGraphisPlot(int NumberChannels, QWidget *parent)$/;"	f	class:WidgetGraphisPlot
WidgetGraphisPlot	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^class WidgetGraphisPlot : public WidgetAdjustable, public PassCoordClass<float> $/;"	c
WidgetImageImitator	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    class WidgetImageImitator: public Ui_WidgetImageImitator {};$/;"	c	namespace:Ui
WidgetImageImitator	gui_sources/widget_imitator_control.cpp	/^WidgetImageImitator::WidgetImageImitator(QWidget* parent) : WidgetAdjustable(parent), ui(new Ui::WidgetImageImitator)$/;"	f	class:WidgetImageImitator
WidgetImageImitator	gui_sources/widget_imitator_control.h	/^class WidgetImageImitator : public WidgetAdjustable$/;"	c
WidgetLineGraph	gui_sources/GRAPHICS_WINDOW_GRAPH/widget_line_graph.cpp	/^WidgetLineGraph::WidgetLineGraph(QWidget *parent): WidgetAdjustable(parent)$/;"	f	class:WidgetLineGraph
WidgetLineGraph	gui_sources/GRAPHICS_WINDOW_GRAPH/widget_line_graph.h	/^class WidgetLineGraph : public WidgetAdjustable$/;"	c
WidgetMainWindow	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    class WidgetMainWindow: public Ui_WidgetMainWindow {};$/;"	c	namespace:Ui
WidgetMainWindow	gui_sources/widget_main_window.cpp	/^WidgetMainWindow::WidgetMainWindow(QWidget *parent)$/;"	f	class:WidgetMainWindow
WidgetMainWindow	gui_sources/widget_main_window.h	/^class WidgetMainWindow : public QMainWindow$/;"	c
WidgetMainWindow_H	gui_sources/widget_main_window.h	2;"	d
WidgetMiniLabelsGroup	gui_sources/widget_processing_image_generic.h	/^    WidgetMiniLabelsGroup(QWidget* parent = 0): WidgetAdjustable(parent) $/;"	f	class:WidgetMiniLabelsGroup
WidgetMiniLabelsGroup	gui_sources/widget_processing_image_generic.h	/^class WidgetMiniLabelsGroup : public WidgetAdjustable$/;"	c
WidgetOutputImageDisplay	build/ImageProcProject_autogen/include/ui_widget_output_image_display.h	/^    class WidgetOutputImageDisplay: public Ui_WidgetOutputImageDisplay {};$/;"	c	namespace:Ui
WidgetOutputImageDisplay	gui_sources/widget_output_image_display.cpp	/^WidgetOutputImageDisplay::WidgetOutputImageDisplay(QWidget *parent)$/;"	f	class:WidgetOutputImageDisplay
WidgetOutputImageDisplay	gui_sources/widget_output_image_display.h	/^class WidgetOutputImageDisplay : public WidgetAdjustable$/;"	c
WidgetOutputTextDisplay	gui_sources/widget_output_text_display.cpp	/^WidgetOutputTextDisplay::WidgetOutputTextDisplay(QWidget *parent)$/;"	f	class:WidgetOutputTextDisplay
WidgetOutputTextDisplay	gui_sources/widget_output_text_display.h	/^class WidgetOutputTextDisplay : public WidgetAdjustable$/;"	c
WidgetOutputTextDisplay_H	gui_sources/widget_output_text_display.h	2;"	d
WidgetProcessController	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	/^    class WidgetProcessController: public Ui_WidgetProcessController {};$/;"	c	namespace:Ui
WidgetProcessController	gui_sources/widget_process_controller.cpp	/^WidgetProcessController::WidgetProcessController(QWidget* parent) : WidgetAdjustable(parent), ui(new Ui::WidgetProcessController)$/;"	f	class:WidgetProcessController
WidgetProcessController	gui_sources/widget_process_controller.h	/^class WidgetProcessController : public WidgetAdjustable$/;"	c
WidgetProcessingImage	build/ImageProcProject_autogen/include/ui_widget_processing_image_generic.h	/^    class WidgetProcessingImage: public Ui_WidgetProcessingImage {};$/;"	c	namespace:Ui
WidgetProcessingImage	gui_sources/widget_processing_image_generic.cpp	/^WidgetProcessingImage::WidgetProcessingImage(QString ModuleName, QWidget* parent) : WidgetAdjustable(parent), ui(new Ui::WidgetProcessingImage)$/;"	f	class:WidgetProcessingImage
WidgetProcessingImage	gui_sources/widget_processing_image_generic.h	/^class WidgetProcessingImage : public WidgetAdjustable$/;"	c
WidgetProcessingImageControl	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^    class WidgetProcessingImageControl: public Ui_WidgetProcessingImageControl {};$/;"	c	namespace:Ui
WidgetProcessingImageControl	gui_sources/widget_processing_image_control.cpp	/^WidgetProcessingImageControl::WidgetProcessingImageControl(QWidget* parent) : WidgetAdjustable(parent), ui(new Ui::WidgetProcessingImageControl)$/;"	f	class:WidgetProcessingImageControl
WidgetProcessingImageControl	gui_sources/widget_processing_image_control.h	/^class WidgetProcessingImageControl : public WidgetAdjustable$/;"	c
WidgetScanatorControl	gui_sources/widget_scanator_control.cpp	/^WidgetScanatorControl::WidgetScanatorControl(QWidget* parent) : WidgetAdjustable(parent), ui(new Ui::WidgetScanatorControl)$/;"	f	class:WidgetScanatorControl
WidgetScanatorControl	gui_sources/widget_scanator_control.h	/^class WidgetScanatorControl : public WidgetAdjustable$/;"	c
WidgetSceneNodeInterface	gui_sources/widget_scene_node_interface.cpp	/^WidgetSceneNodeInterface::WidgetSceneNodeInterface(QGraphicsScene* Scene, int X_POS, int Y_POS, WidgetAdjustable *Widget)$/;"	f	class:WidgetSceneNodeInterface
WidgetSceneNodeInterface	gui_sources/widget_scene_node_interface.cpp	/^WidgetSceneNodeInterface::WidgetSceneNodeInterface(QGraphicsScene* Scene, int X_POS, int Y_POS,QWidget* Widget)$/;"	f	class:WidgetSceneNodeInterface
WidgetSceneNodeInterface	gui_sources/widget_scene_node_interface.h	/^class WidgetSceneNodeInterface : public QGraphicsProxyWidget$/;"	c
WidgetSinusSource	AIM_IMAGE_IMITATION/widget_sinus_source.cpp	/^WidgetSinusSource::WidgetSinusSource(QWidget *parent)$/;"	f	class:WidgetSinusSource
WidgetSinusSource	AIM_IMAGE_IMITATION/widget_sinus_source.h	/^class WidgetSinusSource : public WidgetAdjustable$/;"	c
WidgetSinusSource	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    class WidgetSinusSource: public Ui_WidgetSinusSource {};$/;"	c	namespace:Ui
WidgetSinusSource_H	AIM_IMAGE_IMITATION/widget_sinus_source.h	2;"	d
WidgetTableGroup	build/ImageProcProject_autogen/include/ui_widget_table_group.h	/^    class WidgetTableGroup: public Ui_WidgetTableGroup {};$/;"	c	namespace:Ui
WidgetTableGroup	gui_sources/widget_table_group.cpp	/^WidgetTableGroup::WidgetTableGroup(QWidget* parent) : WidgetAdjustable(parent), ui(new Ui::WidgetTableGroup)$/;"	f	class:WidgetTableGroup
WidgetTableGroup	gui_sources/widget_table_group.h	/^class WidgetTableGroup : public WidgetAdjustable$/;"	c
WidgetTransmissionControl	gui_sources/widget_transmission_interface.cpp	/^WidgetTransmissionControl::WidgetTransmissionControl(QWidget* parent) : WidgetAdjustable(parent), ui(new Ui::WidgetTransmissionControl)$/;"	f	class:WidgetTransmissionControl
WidgetTransmissionControl	gui_sources/widget_transmission_interface.h	/^class WidgetTransmissionControl : public WidgetAdjustable$/;"	c
WidgetsPositionList	gui_sources/widget_main_window.h	/^	QVector<QVector<QPair<int,int>>> WidgetsPositionList;$/;"	m	class:WidgetMainWindow
WidthType	gui_sources/qcustomplot.h	/^  enum WidthType { wtAbsolute       \/\/\/< Bar width is in absolute pixels$/;"	g	class:QCPBars
WidthType	gui_sources/qcustomplot.h	/^  enum WidthType { wtAbsolute       \/\/\/< width is in absolute pixels$/;"	g	class:QCPFinancial
WindowClosedSignal	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_main_window.cpp	/^void WidgetMainWindow::WindowClosedSignal()$/;"	f	class:WidgetMainWindow
WindowControl	DEVICES/LaserPointerControlLib/WindowLaserControl.h	/^    WindowLaserControlClass* WindowControl = 0;$/;"	m	class:LaserControlClass
WindowLaserControlClass	DEVICES/LaserPointerControlLib/WindowLaserControl.h	/^class WindowLaserControlClass : public WidgetAdjustable$/;"	c
WindowNode	gui_sources/widget_scene_node_interface.h	/^    QWidget* WindowNode = 0;$/;"	m	class:WidgetSceneNodeInterface
XCoordPos	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    float XCoordPos = 0;$/;"	m	class:DynamicAimControl
XMax	CV_IMAGE_PROCESSING/image_estimations.cpp	/^float GeometryDistortionImage::XMax = 0;$/;"	m	class:GeometryDistortionImage	file:
XMax	CV_IMAGE_PROCESSING/image_estimations.h	/^    static float XMax;$/;"	m	class:GeometryDistortionImage
XNumberPos	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    float XNumberPos = 0;$/;"	m	class:DynamicAimControl
X_AXIS	AIMING_MODULES/rotate_vector_class.h	/^enum RotateAxisenum { X_AXIS = 0, Y_AXIS= 1 , Z_AXIS = 2};$/;"	e	enum:RotateAxisenum
X_Pressed	gui_sources/labelimage.h	/^	int X_Pressed = 0;$/;"	m	class:LabelImage
YCoordPos	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    float YCoordPos = 0;$/;"	m	class:DynamicAimControl
YMax	CV_IMAGE_PROCESSING/image_estimations.cpp	/^float GeometryDistortionImage::YMax = 0;$/;"	m	class:GeometryDistortionImage	file:
YMax	CV_IMAGE_PROCESSING/image_estimations.h	/^    static float YMax;$/;"	m	class:GeometryDistortionImage
YNumberPos	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    float YNumberPos = 0;$/;"	m	class:DynamicAimControl
Y_AXIS	AIMING_MODULES/rotate_vector_class.h	/^enum RotateAxisenum { X_AXIS = 0, Y_AXIS= 1 , Z_AXIS = 2};$/;"	e	enum:RotateAxisenum
Y_Pressed	gui_sources/labelimage.h	/^	int Y_Pressed = 0;$/;"	m	class:LabelImage
Z_AXIS	AIMING_MODULES/rotate_vector_class.h	/^enum RotateAxisenum { X_AXIS = 0, Y_AXIS= 1 , Z_AXIS = 2};$/;"	e	enum:RotateAxisenum
ZeroCoord	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	QPair<float,float> ZeroCoord = QPair<float,float>(0,0);$/;"	m	class:AccumulateDataFilter
_GNU_SOURCE	build/ImageProcProject_autogen/moc_predefs.h	440;"	d
_LP64	build/ImageProcProject_autogen/moc_predefs.h	357;"	d
_STDC_PREDEF_H	build/ImageProcProject_autogen/moc_predefs.h	221;"	d
__AARCH64EL__	build/ImageProcProject_autogen/moc_predefs.h	210;"	d
__AARCH64_CMODEL_SMALL__	build/ImageProcProject_autogen/moc_predefs.h	75;"	d
__ARM_64BIT_STATE	build/ImageProcProject_autogen/moc_predefs.h	236;"	d
__ARM_ALIGN_MAX_PWR	build/ImageProcProject_autogen/moc_predefs.h	169;"	d
__ARM_ALIGN_MAX_STACK_PWR	build/ImageProcProject_autogen/moc_predefs.h	379;"	d
__ARM_ARCH	build/ImageProcProject_autogen/moc_predefs.h	301;"	d
__ARM_ARCH_8A	build/ImageProcProject_autogen/moc_predefs.h	325;"	d
__ARM_ARCH_ISA_A64	build/ImageProcProject_autogen/moc_predefs.h	412;"	d
__ARM_ARCH_PROFILE	build/ImageProcProject_autogen/moc_predefs.h	254;"	d
__ARM_FEATURE_CLZ	build/ImageProcProject_autogen/moc_predefs.h	192;"	d
__ARM_FEATURE_FMA	build/ImageProcProject_autogen/moc_predefs.h	245;"	d
__ARM_FEATURE_IDIV	build/ImageProcProject_autogen/moc_predefs.h	56;"	d
__ARM_FEATURE_NUMERIC_MAXMIN	build/ImageProcProject_autogen/moc_predefs.h	395;"	d
__ARM_FEATURE_UNALIGNED	build/ImageProcProject_autogen/moc_predefs.h	326;"	d
__ARM_FP	build/ImageProcProject_autogen/moc_predefs.h	61;"	d
__ARM_FP16_ARGS	build/ImageProcProject_autogen/moc_predefs.h	186;"	d
__ARM_FP16_FORMAT_IEEE	build/ImageProcProject_autogen/moc_predefs.h	177;"	d
__ARM_NEON	build/ImageProcProject_autogen/moc_predefs.h	362;"	d
__ARM_PCS_AAPCS64	build/ImageProcProject_autogen/moc_predefs.h	258;"	d
__ARM_SIZEOF_MINIMAL_ENUM	build/ImageProcProject_autogen/moc_predefs.h	108;"	d
__ARM_SIZEOF_WCHAR_T	build/ImageProcProject_autogen/moc_predefs.h	7;"	d
__ATOMIC_ACQUIRE	build/ImageProcProject_autogen/moc_predefs.h	8;"	d
__ATOMIC_ACQ_REL	build/ImageProcProject_autogen/moc_predefs.h	443;"	d
__ATOMIC_CONSUME	build/ImageProcProject_autogen/moc_predefs.h	403;"	d
__ATOMIC_RELAXED	build/ImageProcProject_autogen/moc_predefs.h	264;"	d
__ATOMIC_RELEASE	build/ImageProcProject_autogen/moc_predefs.h	444;"	d
__ATOMIC_SEQ_CST	build/ImageProcProject_autogen/moc_predefs.h	416;"	d
__BIGGEST_ALIGNMENT__	build/ImageProcProject_autogen/moc_predefs.h	228;"	d
__BYTE_ORDER__	build/ImageProcProject_autogen/moc_predefs.h	378;"	d
__CHAR16_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	288;"	d
__CHAR32_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	392;"	d
__CHAR_BIT__	build/ImageProcProject_autogen/moc_predefs.h	15;"	d
__CHAR_UNSIGNED__	build/ImageProcProject_autogen/moc_predefs.h	71;"	d
__DBL_DECIMAL_DIG__	build/ImageProcProject_autogen/moc_predefs.h	187;"	d
__DBL_DENORM_MIN__	build/ImageProcProject_autogen/moc_predefs.h	74;"	d
__DBL_DIG__	build/ImageProcProject_autogen/moc_predefs.h	98;"	d
__DBL_EPSILON__	build/ImageProcProject_autogen/moc_predefs.h	355;"	d
__DBL_HAS_DENORM__	build/ImageProcProject_autogen/moc_predefs.h	285;"	d
__DBL_HAS_INFINITY__	build/ImageProcProject_autogen/moc_predefs.h	142;"	d
__DBL_HAS_QUIET_NAN__	build/ImageProcProject_autogen/moc_predefs.h	198;"	d
__DBL_IS_IEC_60559__	build/ImageProcProject_autogen/moc_predefs.h	105;"	d
__DBL_MANT_DIG__	build/ImageProcProject_autogen/moc_predefs.h	339;"	d
__DBL_MAX_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	410;"	d
__DBL_MAX_EXP__	build/ImageProcProject_autogen/moc_predefs.h	159;"	d
__DBL_MAX__	build/ImageProcProject_autogen/moc_predefs.h	84;"	d
__DBL_MIN_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	37;"	d
__DBL_MIN_EXP__	build/ImageProcProject_autogen/moc_predefs.h	2;"	d
__DBL_MIN__	build/ImageProcProject_autogen/moc_predefs.h	191;"	d
__DBL_NORM_MAX__	build/ImageProcProject_autogen/moc_predefs.h	377;"	d
__DECIMAL_DIG__	build/ImageProcProject_autogen/moc_predefs.h	119;"	d
__DEC_EVAL_METHOD__	build/ImageProcProject_autogen/moc_predefs.h	215;"	d
__DEPRECATED	build/ImageProcProject_autogen/moc_predefs.h	157;"	d
__ELF__	build/ImageProcProject_autogen/moc_predefs.h	249;"	d
__EXCEPTIONS	build/ImageProcProject_autogen/moc_predefs.h	417;"	d
__FINITE_MATH_ONLY__	build/ImageProcProject_autogen/moc_predefs.h	38;"	d
__FLOAT_WORD_ORDER__	build/ImageProcProject_autogen/moc_predefs.h	226;"	d
__FLT128_DECIMAL_DIG__	build/ImageProcProject_autogen/moc_predefs.h	429;"	d
__FLT128_DENORM_MIN__	build/ImageProcProject_autogen/moc_predefs.h	67;"	d
__FLT128_DIG__	build/ImageProcProject_autogen/moc_predefs.h	233;"	d
__FLT128_EPSILON__	build/ImageProcProject_autogen/moc_predefs.h	425;"	d
__FLT128_HAS_DENORM__	build/ImageProcProject_autogen/moc_predefs.h	232;"	d
__FLT128_HAS_INFINITY__	build/ImageProcProject_autogen/moc_predefs.h	179;"	d
__FLT128_HAS_QUIET_NAN__	build/ImageProcProject_autogen/moc_predefs.h	363;"	d
__FLT128_IS_IEC_60559__	build/ImageProcProject_autogen/moc_predefs.h	387;"	d
__FLT128_MANT_DIG__	build/ImageProcProject_autogen/moc_predefs.h	83;"	d
__FLT128_MAX_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	9;"	d
__FLT128_MAX_EXP__	build/ImageProcProject_autogen/moc_predefs.h	224;"	d
__FLT128_MAX__	build/ImageProcProject_autogen/moc_predefs.h	302;"	d
__FLT128_MIN_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	79;"	d
__FLT128_MIN_EXP__	build/ImageProcProject_autogen/moc_predefs.h	78;"	d
__FLT128_MIN__	build/ImageProcProject_autogen/moc_predefs.h	238;"	d
__FLT128_NORM_MAX__	build/ImageProcProject_autogen/moc_predefs.h	189;"	d
__FLT16_DECIMAL_DIG__	build/ImageProcProject_autogen/moc_predefs.h	132;"	d
__FLT16_DENORM_MIN__	build/ImageProcProject_autogen/moc_predefs.h	193;"	d
__FLT16_DIG__	build/ImageProcProject_autogen/moc_predefs.h	114;"	d
__FLT16_EPSILON__	build/ImageProcProject_autogen/moc_predefs.h	276;"	d
__FLT16_HAS_DENORM__	build/ImageProcProject_autogen/moc_predefs.h	372;"	d
__FLT16_HAS_INFINITY__	build/ImageProcProject_autogen/moc_predefs.h	313;"	d
__FLT16_HAS_QUIET_NAN__	build/ImageProcProject_autogen/moc_predefs.h	106;"	d
__FLT16_IS_IEC_60559__	build/ImageProcProject_autogen/moc_predefs.h	270;"	d
__FLT16_MANT_DIG__	build/ImageProcProject_autogen/moc_predefs.h	164;"	d
__FLT16_MAX_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	138;"	d
__FLT16_MAX_EXP__	build/ImageProcProject_autogen/moc_predefs.h	227;"	d
__FLT16_MAX__	build/ImageProcProject_autogen/moc_predefs.h	298;"	d
__FLT16_MIN_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	217;"	d
__FLT16_MIN_EXP__	build/ImageProcProject_autogen/moc_predefs.h	126;"	d
__FLT16_MIN__	build/ImageProcProject_autogen/moc_predefs.h	353;"	d
__FLT16_NORM_MAX__	build/ImageProcProject_autogen/moc_predefs.h	292;"	d
__FLT32X_DECIMAL_DIG__	build/ImageProcProject_autogen/moc_predefs.h	27;"	d
__FLT32X_DENORM_MIN__	build/ImageProcProject_autogen/moc_predefs.h	408;"	d
__FLT32X_DIG__	build/ImageProcProject_autogen/moc_predefs.h	85;"	d
__FLT32X_EPSILON__	build/ImageProcProject_autogen/moc_predefs.h	200;"	d
__FLT32X_HAS_DENORM__	build/ImageProcProject_autogen/moc_predefs.h	149;"	d
__FLT32X_HAS_INFINITY__	build/ImageProcProject_autogen/moc_predefs.h	112;"	d
__FLT32X_HAS_QUIET_NAN__	build/ImageProcProject_autogen/moc_predefs.h	287;"	d
__FLT32X_IS_IEC_60559__	build/ImageProcProject_autogen/moc_predefs.h	80;"	d
__FLT32X_MANT_DIG__	build/ImageProcProject_autogen/moc_predefs.h	91;"	d
__FLT32X_MAX_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	351;"	d
__FLT32X_MAX_EXP__	build/ImageProcProject_autogen/moc_predefs.h	40;"	d
__FLT32X_MAX__	build/ImageProcProject_autogen/moc_predefs.h	375;"	d
__FLT32X_MIN_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	420;"	d
__FLT32X_MIN_EXP__	build/ImageProcProject_autogen/moc_predefs.h	184;"	d
__FLT32X_MIN__	build/ImageProcProject_autogen/moc_predefs.h	385;"	d
__FLT32X_NORM_MAX__	build/ImageProcProject_autogen/moc_predefs.h	391;"	d
__FLT32_DECIMAL_DIG__	build/ImageProcProject_autogen/moc_predefs.h	328;"	d
__FLT32_DENORM_MIN__	build/ImageProcProject_autogen/moc_predefs.h	294;"	d
__FLT32_DIG__	build/ImageProcProject_autogen/moc_predefs.h	99;"	d
__FLT32_EPSILON__	build/ImageProcProject_autogen/moc_predefs.h	371;"	d
__FLT32_HAS_DENORM__	build/ImageProcProject_autogen/moc_predefs.h	43;"	d
__FLT32_HAS_INFINITY__	build/ImageProcProject_autogen/moc_predefs.h	139;"	d
__FLT32_HAS_QUIET_NAN__	build/ImageProcProject_autogen/moc_predefs.h	165;"	d
__FLT32_IS_IEC_60559__	build/ImageProcProject_autogen/moc_predefs.h	103;"	d
__FLT32_MANT_DIG__	build/ImageProcProject_autogen/moc_predefs.h	225;"	d
__FLT32_MAX_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	94;"	d
__FLT32_MAX_EXP__	build/ImageProcProject_autogen/moc_predefs.h	174;"	d
__FLT32_MAX__	build/ImageProcProject_autogen/moc_predefs.h	162;"	d
__FLT32_MIN_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	309;"	d
__FLT32_MIN_EXP__	build/ImageProcProject_autogen/moc_predefs.h	356;"	d
__FLT32_MIN__	build/ImageProcProject_autogen/moc_predefs.h	415;"	d
__FLT32_NORM_MAX__	build/ImageProcProject_autogen/moc_predefs.h	346;"	d
__FLT64X_DECIMAL_DIG__	build/ImageProcProject_autogen/moc_predefs.h	205;"	d
__FLT64X_DENORM_MIN__	build/ImageProcProject_autogen/moc_predefs.h	110;"	d
__FLT64X_DIG__	build/ImageProcProject_autogen/moc_predefs.h	244;"	d
__FLT64X_EPSILON__	build/ImageProcProject_autogen/moc_predefs.h	95;"	d
__FLT64X_HAS_DENORM__	build/ImageProcProject_autogen/moc_predefs.h	280;"	d
__FLT64X_HAS_INFINITY__	build/ImageProcProject_autogen/moc_predefs.h	147;"	d
__FLT64X_HAS_QUIET_NAN__	build/ImageProcProject_autogen/moc_predefs.h	64;"	d
__FLT64X_IS_IEC_60559__	build/ImageProcProject_autogen/moc_predefs.h	62;"	d
__FLT64X_MANT_DIG__	build/ImageProcProject_autogen/moc_predefs.h	128;"	d
__FLT64X_MAX_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	57;"	d
__FLT64X_MAX_EXP__	build/ImageProcProject_autogen/moc_predefs.h	331;"	d
__FLT64X_MAX__	build/ImageProcProject_autogen/moc_predefs.h	312;"	d
__FLT64X_MIN_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	124;"	d
__FLT64X_MIN_EXP__	build/ImageProcProject_autogen/moc_predefs.h	308;"	d
__FLT64X_MIN__	build/ImageProcProject_autogen/moc_predefs.h	368;"	d
__FLT64X_NORM_MAX__	build/ImageProcProject_autogen/moc_predefs.h	195;"	d
__FLT64_DECIMAL_DIG__	build/ImageProcProject_autogen/moc_predefs.h	30;"	d
__FLT64_DENORM_MIN__	build/ImageProcProject_autogen/moc_predefs.h	190;"	d
__FLT64_DIG__	build/ImageProcProject_autogen/moc_predefs.h	273;"	d
__FLT64_EPSILON__	build/ImageProcProject_autogen/moc_predefs.h	120;"	d
__FLT64_HAS_DENORM__	build/ImageProcProject_autogen/moc_predefs.h	370;"	d
__FLT64_HAS_INFINITY__	build/ImageProcProject_autogen/moc_predefs.h	311;"	d
__FLT64_HAS_QUIET_NAN__	build/ImageProcProject_autogen/moc_predefs.h	306;"	d
__FLT64_IS_IEC_60559__	build/ImageProcProject_autogen/moc_predefs.h	269;"	d
__FLT64_MANT_DIG__	build/ImageProcProject_autogen/moc_predefs.h	127;"	d
__FLT64_MAX_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	137;"	d
__FLT64_MAX_EXP__	build/ImageProcProject_autogen/moc_predefs.h	359;"	d
__FLT64_MAX__	build/ImageProcProject_autogen/moc_predefs.h	161;"	d
__FLT64_MIN_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	203;"	d
__FLT64_MIN_EXP__	build/ImageProcProject_autogen/moc_predefs.h	123;"	d
__FLT64_MIN__	build/ImageProcProject_autogen/moc_predefs.h	399;"	d
__FLT64_NORM_MAX__	build/ImageProcProject_autogen/moc_predefs.h	59;"	d
__FLT_DECIMAL_DIG__	build/ImageProcProject_autogen/moc_predefs.h	431;"	d
__FLT_DENORM_MIN__	build/ImageProcProject_autogen/moc_predefs.h	400;"	d
__FLT_DIG__	build/ImageProcProject_autogen/moc_predefs.h	213;"	d
__FLT_EPSILON__	build/ImageProcProject_autogen/moc_predefs.h	100;"	d
__FLT_EVAL_METHOD_C99__	build/ImageProcProject_autogen/moc_predefs.h	199;"	d
__FLT_EVAL_METHOD_TS_18661_3__	build/ImageProcProject_autogen/moc_predefs.h	265;"	d
__FLT_EVAL_METHOD__	build/ImageProcProject_autogen/moc_predefs.h	28;"	d
__FLT_HAS_DENORM__	build/ImageProcProject_autogen/moc_predefs.h	133;"	d
__FLT_HAS_INFINITY__	build/ImageProcProject_autogen/moc_predefs.h	281;"	d
__FLT_HAS_QUIET_NAN__	build/ImageProcProject_autogen/moc_predefs.h	277;"	d
__FLT_IS_IEC_60559__	build/ImageProcProject_autogen/moc_predefs.h	242;"	d
__FLT_MANT_DIG__	build/ImageProcProject_autogen/moc_predefs.h	216;"	d
__FLT_MAX_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	278;"	d
__FLT_MAX_EXP__	build/ImageProcProject_autogen/moc_predefs.h	337;"	d
__FLT_MAX__	build/ImageProcProject_autogen/moc_predefs.h	89;"	d
__FLT_MIN_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	435;"	d
__FLT_MIN_EXP__	build/ImageProcProject_autogen/moc_predefs.h	180;"	d
__FLT_MIN__	build/ImageProcProject_autogen/moc_predefs.h	10;"	d
__FLT_NORM_MAX__	build/ImageProcProject_autogen/moc_predefs.h	330;"	d
__FLT_RADIX__	build/ImageProcProject_autogen/moc_predefs.h	252;"	d
__FP_FAST_FMA	build/ImageProcProject_autogen/moc_predefs.h	111;"	d
__FP_FAST_FMAF	build/ImageProcProject_autogen/moc_predefs.h	188;"	d
__FP_FAST_FMAF32	build/ImageProcProject_autogen/moc_predefs.h	343;"	d
__FP_FAST_FMAF32x	build/ImageProcProject_autogen/moc_predefs.h	178;"	d
__FP_FAST_FMAF64	build/ImageProcProject_autogen/moc_predefs.h	350;"	d
__GCC_ASM_FLAG_OUTPUTS__	build/ImageProcProject_autogen/moc_predefs.h	250;"	d
__GCC_ATOMIC_BOOL_LOCK_FREE	build/ImageProcProject_autogen/moc_predefs.h	348;"	d
__GCC_ATOMIC_CHAR16_T_LOCK_FREE	build/ImageProcProject_autogen/moc_predefs.h	92;"	d
__GCC_ATOMIC_CHAR32_T_LOCK_FREE	build/ImageProcProject_autogen/moc_predefs.h	32;"	d
__GCC_ATOMIC_CHAR_LOCK_FREE	build/ImageProcProject_autogen/moc_predefs.h	25;"	d
__GCC_ATOMIC_INT_LOCK_FREE	build/ImageProcProject_autogen/moc_predefs.h	223;"	d
__GCC_ATOMIC_LLONG_LOCK_FREE	build/ImageProcProject_autogen/moc_predefs.h	430;"	d
__GCC_ATOMIC_LONG_LOCK_FREE	build/ImageProcProject_autogen/moc_predefs.h	163;"	d
__GCC_ATOMIC_POINTER_LOCK_FREE	build/ImageProcProject_autogen/moc_predefs.h	88;"	d
__GCC_ATOMIC_SHORT_LOCK_FREE	build/ImageProcProject_autogen/moc_predefs.h	436;"	d
__GCC_ATOMIC_TEST_AND_SET_TRUEVAL	build/ImageProcProject_autogen/moc_predefs.h	251;"	d
__GCC_ATOMIC_WCHAR_T_LOCK_FREE	build/ImageProcProject_autogen/moc_predefs.h	261;"	d
__GCC_CONSTRUCTIVE_SIZE	build/ImageProcProject_autogen/moc_predefs.h	272;"	d
__GCC_DESTRUCTIVE_SIZE	build/ImageProcProject_autogen/moc_predefs.h	381;"	d
__GCC_HAVE_DWARF2_CFI_ASM	build/ImageProcProject_autogen/moc_predefs.h	182;"	d
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1	build/ImageProcProject_autogen/moc_predefs.h	41;"	d
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16	build/ImageProcProject_autogen/moc_predefs.h	418;"	d
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2	build/ImageProcProject_autogen/moc_predefs.h	22;"	d
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4	build/ImageProcProject_autogen/moc_predefs.h	23;"	d
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8	build/ImageProcProject_autogen/moc_predefs.h	24;"	d
__GCC_IEC_559	build/ImageProcProject_autogen/moc_predefs.h	26;"	d
__GCC_IEC_559_COMPLEX	build/ImageProcProject_autogen/moc_predefs.h	11;"	d
__GLIBCXX_BITSIZE_INT_N_0	build/ImageProcProject_autogen/moc_predefs.h	257;"	d
__GLIBCXX_TYPE_INT_N_0	build/ImageProcProject_autogen/moc_predefs.h	405;"	d
__GNUC_EXECUTION_CHARSET_NAME	build/ImageProcProject_autogen/moc_predefs.h	282;"	d
__GNUC_MINOR__	build/ImageProcProject_autogen/moc_predefs.h	404;"	d
__GNUC_PATCHLEVEL__	build/ImageProcProject_autogen/moc_predefs.h	42;"	d
__GNUC_STDC_INLINE__	build/ImageProcProject_autogen/moc_predefs.h	369;"	d
__GNUC_WIDE_EXECUTION_CHARSET_NAME	build/ImageProcProject_autogen/moc_predefs.h	243;"	d
__GNUC__	build/ImageProcProject_autogen/moc_predefs.h	129;"	d
__GNUG__	build/ImageProcProject_autogen/moc_predefs.h	247;"	d
__GXX_ABI_VERSION	build/ImageProcProject_autogen/moc_predefs.h	209;"	d
__GXX_EXPERIMENTAL_CXX0X__	build/ImageProcProject_autogen/moc_predefs.h	73;"	d
__GXX_RTTI	build/ImageProcProject_autogen/moc_predefs.h	131;"	d
__GXX_WEAK__	build/ImageProcProject_autogen/moc_predefs.h	101;"	d
__HAVE_SPECULATION_SAFE_VALUE	build/ImageProcProject_autogen/moc_predefs.h	144;"	d
__INT16_C	build/ImageProcProject_autogen/moc_predefs.h	411;"	d
__INT16_MAX__	build/ImageProcProject_autogen/moc_predefs.h	122;"	d
__INT16_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	296;"	d
__INT32_C	build/ImageProcProject_autogen/moc_predefs.h	230;"	d
__INT32_MAX__	build/ImageProcProject_autogen/moc_predefs.h	113;"	d
__INT32_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	396;"	d
__INT64_C	build/ImageProcProject_autogen/moc_predefs.h	87;"	d
__INT64_MAX__	build/ImageProcProject_autogen/moc_predefs.h	143;"	d
__INT64_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	336;"	d
__INT8_C	build/ImageProcProject_autogen/moc_predefs.h	47;"	d
__INT8_MAX__	build/ImageProcProject_autogen/moc_predefs.h	388;"	d
__INT8_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	246;"	d
__INTMAX_C	build/ImageProcProject_autogen/moc_predefs.h	14;"	d
__INTMAX_MAX__	build/ImageProcProject_autogen/moc_predefs.h	364;"	d
__INTMAX_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	307;"	d
__INTMAX_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	208;"	d
__INTPTR_MAX__	build/ImageProcProject_autogen/moc_predefs.h	303;"	d
__INTPTR_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	319;"	d
__INTPTR_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	146;"	d
__INT_FAST16_MAX__	build/ImageProcProject_autogen/moc_predefs.h	271;"	d
__INT_FAST16_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	150;"	d
__INT_FAST16_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	406;"	d
__INT_FAST32_MAX__	build/ImageProcProject_autogen/moc_predefs.h	141;"	d
__INT_FAST32_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	237;"	d
__INT_FAST32_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	77;"	d
__INT_FAST64_MAX__	build/ImageProcProject_autogen/moc_predefs.h	329;"	d
__INT_FAST64_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	185;"	d
__INT_FAST64_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	204;"	d
__INT_FAST8_MAX__	build/ImageProcProject_autogen/moc_predefs.h	300;"	d
__INT_FAST8_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	366;"	d
__INT_FAST8_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	374;"	d
__INT_LEAST16_MAX__	build/ImageProcProject_autogen/moc_predefs.h	291;"	d
__INT_LEAST16_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	253;"	d
__INT_LEAST16_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	81;"	d
__INT_LEAST32_MAX__	build/ImageProcProject_autogen/moc_predefs.h	222;"	d
__INT_LEAST32_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	360;"	d
__INT_LEAST32_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	401;"	d
__INT_LEAST64_MAX__	build/ImageProcProject_autogen/moc_predefs.h	342;"	d
__INT_LEAST64_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	295;"	d
__INT_LEAST64_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	260;"	d
__INT_LEAST8_MAX__	build/ImageProcProject_autogen/moc_predefs.h	51;"	d
__INT_LEAST8_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	297;"	d
__INT_LEAST8_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	48;"	d
__INT_MAX__	build/ImageProcProject_autogen/moc_predefs.h	334;"	d
__INT_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	115;"	d
__LDBL_DECIMAL_DIG__	build/ImageProcProject_autogen/moc_predefs.h	201;"	d
__LDBL_DENORM_MIN__	build/ImageProcProject_autogen/moc_predefs.h	380;"	d
__LDBL_DIG__	build/ImageProcProject_autogen/moc_predefs.h	268;"	d
__LDBL_EPSILON__	build/ImageProcProject_autogen/moc_predefs.h	255;"	d
__LDBL_HAS_DENORM__	build/ImageProcProject_autogen/moc_predefs.h	153;"	d
__LDBL_HAS_INFINITY__	build/ImageProcProject_autogen/moc_predefs.h	211;"	d
__LDBL_HAS_QUIET_NAN__	build/ImageProcProject_autogen/moc_predefs.h	125;"	d
__LDBL_IS_IEC_60559__	build/ImageProcProject_autogen/moc_predefs.h	60;"	d
__LDBL_MANT_DIG__	build/ImageProcProject_autogen/moc_predefs.h	3;"	d
__LDBL_MAX_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	354;"	d
__LDBL_MAX_EXP__	build/ImageProcProject_autogen/moc_predefs.h	76;"	d
__LDBL_MAX__	build/ImageProcProject_autogen/moc_predefs.h	55;"	d
__LDBL_MIN_10_EXP__	build/ImageProcProject_autogen/moc_predefs.h	423;"	d
__LDBL_MIN_EXP__	build/ImageProcProject_autogen/moc_predefs.h	347;"	d
__LDBL_MIN__	build/ImageProcProject_autogen/moc_predefs.h	104;"	d
__LDBL_NORM_MAX__	build/ImageProcProject_autogen/moc_predefs.h	434;"	d
__LONG_LONG_MAX__	build/ImageProcProject_autogen/moc_predefs.h	166;"	d
__LONG_LONG_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	171;"	d
__LONG_MAX__	build/ImageProcProject_autogen/moc_predefs.h	279;"	d
__LONG_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	389;"	d
__LP64__	build/ImageProcProject_autogen/moc_predefs.h	197;"	d
__NO_INLINE__	build/ImageProcProject_autogen/moc_predefs.h	214;"	d
__ORDER_BIG_ENDIAN__	build/ImageProcProject_autogen/moc_predefs.h	338;"	d
__ORDER_LITTLE_ENDIAN__	build/ImageProcProject_autogen/moc_predefs.h	438;"	d
__ORDER_PDP_ENDIAN__	build/ImageProcProject_autogen/moc_predefs.h	235;"	d
__PIC__	build/ImageProcProject_autogen/moc_predefs.h	390;"	d
__PIE__	build/ImageProcProject_autogen/moc_predefs.h	181;"	d
__PRAGMA_REDEFINE_EXTNAME	build/ImageProcProject_autogen/moc_predefs.h	289;"	d
__PTRDIFF_MAX__	build/ImageProcProject_autogen/moc_predefs.h	317;"	d
__PTRDIFF_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	414;"	d
__PTRDIFF_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	310;"	d
__REGISTER_PREFIX__	build/ImageProcProject_autogen/moc_predefs.h	206;"	d
__SCHAR_MAX__	build/ImageProcProject_autogen/moc_predefs.h	82;"	d
__SCHAR_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	234;"	d
__SHRT_MAX__	build/ImageProcProject_autogen/moc_predefs.h	53;"	d
__SHRT_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	102;"	d
__SIG_ATOMIC_MAX__	build/ImageProcProject_autogen/moc_predefs.h	259;"	d
__SIG_ATOMIC_MIN__	build/ImageProcProject_autogen/moc_predefs.h	315;"	d
__SIG_ATOMIC_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	36;"	d
__SIG_ATOMIC_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	168;"	d
__SIZEOF_DOUBLE__	build/ImageProcProject_autogen/moc_predefs.h	397;"	d
__SIZEOF_FLOAT__	build/ImageProcProject_autogen/moc_predefs.h	402;"	d
__SIZEOF_INT128__	build/ImageProcProject_autogen/moc_predefs.h	352;"	d
__SIZEOF_INT__	build/ImageProcProject_autogen/moc_predefs.h	90;"	d
__SIZEOF_LONG_DOUBLE__	build/ImageProcProject_autogen/moc_predefs.h	134;"	d
__SIZEOF_LONG_LONG__	build/ImageProcProject_autogen/moc_predefs.h	427;"	d
__SIZEOF_LONG__	build/ImageProcProject_autogen/moc_predefs.h	116;"	d
__SIZEOF_POINTER__	build/ImageProcProject_autogen/moc_predefs.h	196;"	d
__SIZEOF_PTRDIFF_T__	build/ImageProcProject_autogen/moc_predefs.h	263;"	d
__SIZEOF_SHORT__	build/ImageProcProject_autogen/moc_predefs.h	345;"	d
__SIZEOF_SIZE_T__	build/ImageProcProject_autogen/moc_predefs.h	167;"	d
__SIZEOF_WCHAR_T__	build/ImageProcProject_autogen/moc_predefs.h	361;"	d
__SIZEOF_WINT_T__	build/ImageProcProject_autogen/moc_predefs.h	170;"	d
__SIZE_MAX__	build/ImageProcProject_autogen/moc_predefs.h	439;"	d
__SIZE_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	240;"	d
__SIZE_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	290;"	d
__SSP_STRONG__	build/ImageProcProject_autogen/moc_predefs.h	1;"	d
__STDCPP_DEFAULT_NEW_ALIGNMENT__	build/ImageProcProject_autogen/moc_predefs.h	314;"	d
__STDCPP_THREADS__	build/ImageProcProject_autogen/moc_predefs.h	335;"	d
__STDC_HOSTED__	build/ImageProcProject_autogen/moc_predefs.h	96;"	d
__STDC_IEC_559_COMPLEX__	build/ImageProcProject_autogen/moc_predefs.h	433;"	d
__STDC_IEC_559__	build/ImageProcProject_autogen/moc_predefs.h	117;"	d
__STDC_IEC_60559_BFP__	build/ImageProcProject_autogen/moc_predefs.h	262;"	d
__STDC_IEC_60559_COMPLEX__	build/ImageProcProject_autogen/moc_predefs.h	229;"	d
__STDC_ISO_10646__	build/ImageProcProject_autogen/moc_predefs.h	54;"	d
__STDC_UTF_16__	build/ImageProcProject_autogen/moc_predefs.h	136;"	d
__STDC_UTF_32__	build/ImageProcProject_autogen/moc_predefs.h	373;"	d
__STDC__	build/ImageProcProject_autogen/moc_predefs.h	413;"	d
__UINT16_C	build/ImageProcProject_autogen/moc_predefs.h	118;"	d
__UINT16_MAX__	build/ImageProcProject_autogen/moc_predefs.h	207;"	d
__UINT16_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	320;"	d
__UINT32_C	build/ImageProcProject_autogen/moc_predefs.h	384;"	d
__UINT32_MAX__	build/ImageProcProject_autogen/moc_predefs.h	72;"	d
__UINT32_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	419;"	d
__UINT64_C	build/ImageProcProject_autogen/moc_predefs.h	219;"	d
__UINT64_MAX__	build/ImageProcProject_autogen/moc_predefs.h	241;"	d
__UINT64_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	383;"	d
__UINT8_C	build/ImageProcProject_autogen/moc_predefs.h	358;"	d
__UINT8_MAX__	build/ImageProcProject_autogen/moc_predefs.h	16;"	d
__UINT8_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	212;"	d
__UINTMAX_C	build/ImageProcProject_autogen/moc_predefs.h	256;"	d
__UINTMAX_MAX__	build/ImageProcProject_autogen/moc_predefs.h	407;"	d
__UINTMAX_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	68;"	d
__UINTPTR_MAX__	build/ImageProcProject_autogen/moc_predefs.h	324;"	d
__UINTPTR_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	421;"	d
__UINT_FAST16_MAX__	build/ImageProcProject_autogen/moc_predefs.h	432;"	d
__UINT_FAST16_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	286;"	d
__UINT_FAST32_MAX__	build/ImageProcProject_autogen/moc_predefs.h	274;"	d
__UINT_FAST32_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	34;"	d
__UINT_FAST64_MAX__	build/ImageProcProject_autogen/moc_predefs.h	35;"	d
__UINT_FAST64_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	332;"	d
__UINT_FAST8_MAX__	build/ImageProcProject_autogen/moc_predefs.h	44;"	d
__UINT_FAST8_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	365;"	d
__UINT_LEAST16_MAX__	build/ImageProcProject_autogen/moc_predefs.h	6;"	d
__UINT_LEAST16_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	239;"	d
__UINT_LEAST32_MAX__	build/ImageProcProject_autogen/moc_predefs.h	441;"	d
__UINT_LEAST32_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	344;"	d
__UINT_LEAST64_MAX__	build/ImageProcProject_autogen/moc_predefs.h	50;"	d
__UINT_LEAST64_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	275;"	d
__UINT_LEAST8_MAX__	build/ImageProcProject_autogen/moc_predefs.h	66;"	d
__UINT_LEAST8_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	13;"	d
__USER_LABEL_PREFIX__	build/ImageProcProject_autogen/moc_predefs.h	17;"	d
__VERSION__	build/ImageProcProject_autogen/moc_predefs.h	218;"	d
__WCHAR_MAX__	build/ImageProcProject_autogen/moc_predefs.h	21;"	d
__WCHAR_MIN__	build/ImageProcProject_autogen/moc_predefs.h	86;"	d
__WCHAR_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	321;"	d
__WCHAR_UNSIGNED__	build/ImageProcProject_autogen/moc_predefs.h	173;"	d
__WCHAR_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	160;"	d
__WINT_MAX__	build/ImageProcProject_autogen/moc_predefs.h	18;"	d
__WINT_MIN__	build/ImageProcProject_autogen/moc_predefs.h	386;"	d
__WINT_TYPE__	build/ImageProcProject_autogen/moc_predefs.h	65;"	d
__WINT_WIDTH__	build/ImageProcProject_autogen/moc_predefs.h	349;"	d
__aarch64__	build/ImageProcProject_autogen/moc_predefs.h	202;"	d
__cplusplus	build/ImageProcProject_autogen/moc_predefs.h	154;"	d
__cpp_aggregate_bases	build/ImageProcProject_autogen/moc_predefs.h	231;"	d
__cpp_aggregate_nsdmi	build/ImageProcProject_autogen/moc_predefs.h	12;"	d
__cpp_alias_templates	build/ImageProcProject_autogen/moc_predefs.h	376;"	d
__cpp_aligned_new	build/ImageProcProject_autogen/moc_predefs.h	93;"	d
__cpp_attributes	build/ImageProcProject_autogen/moc_predefs.h	4;"	d
__cpp_binary_literals	build/ImageProcProject_autogen/moc_predefs.h	29;"	d
__cpp_capture_star_this	build/ImageProcProject_autogen/moc_predefs.h	52;"	d
__cpp_constexpr	build/ImageProcProject_autogen/moc_predefs.h	393;"	d
__cpp_decltype	build/ImageProcProject_autogen/moc_predefs.h	327;"	d
__cpp_decltype_auto	build/ImageProcProject_autogen/moc_predefs.h	97;"	d
__cpp_deduction_guides	build/ImageProcProject_autogen/moc_predefs.h	394;"	d
__cpp_delegating_constructors	build/ImageProcProject_autogen/moc_predefs.h	148;"	d
__cpp_digit_separators	build/ImageProcProject_autogen/moc_predefs.h	248;"	d
__cpp_enumerator_attributes	build/ImageProcProject_autogen/moc_predefs.h	109;"	d
__cpp_exceptions	build/ImageProcProject_autogen/moc_predefs.h	398;"	d
__cpp_fold_expressions	build/ImageProcProject_autogen/moc_predefs.h	145;"	d
__cpp_generic_lambdas	build/ImageProcProject_autogen/moc_predefs.h	424;"	d
__cpp_guaranteed_copy_elision	build/ImageProcProject_autogen/moc_predefs.h	267;"	d
__cpp_hex_float	build/ImageProcProject_autogen/moc_predefs.h	176;"	d
__cpp_if_constexpr	build/ImageProcProject_autogen/moc_predefs.h	58;"	d
__cpp_inheriting_constructors	build/ImageProcProject_autogen/moc_predefs.h	340;"	d
__cpp_init_captures	build/ImageProcProject_autogen/moc_predefs.h	442;"	d
__cpp_initializer_lists	build/ImageProcProject_autogen/moc_predefs.h	172;"	d
__cpp_inline_variables	build/ImageProcProject_autogen/moc_predefs.h	333;"	d
__cpp_lambdas	build/ImageProcProject_autogen/moc_predefs.h	183;"	d
__cpp_namespace_attributes	build/ImageProcProject_autogen/moc_predefs.h	367;"	d
__cpp_nested_namespace_definitions	build/ImageProcProject_autogen/moc_predefs.h	46;"	d
__cpp_noexcept_function_type	build/ImageProcProject_autogen/moc_predefs.h	31;"	d
__cpp_nontype_template_args	build/ImageProcProject_autogen/moc_predefs.h	316;"	d
__cpp_nontype_template_parameter_auto	build/ImageProcProject_autogen/moc_predefs.h	5;"	d
__cpp_nsdmi	build/ImageProcProject_autogen/moc_predefs.h	69;"	d
__cpp_range_based_for	build/ImageProcProject_autogen/moc_predefs.h	322;"	d
__cpp_raw_strings	build/ImageProcProject_autogen/moc_predefs.h	140;"	d
__cpp_ref_qualifiers	build/ImageProcProject_autogen/moc_predefs.h	155;"	d
__cpp_return_type_deduction	build/ImageProcProject_autogen/moc_predefs.h	318;"	d
__cpp_rtti	build/ImageProcProject_autogen/moc_predefs.h	135;"	d
__cpp_runtime_arrays	build/ImageProcProject_autogen/moc_predefs.h	382;"	d
__cpp_rvalue_reference	build/ImageProcProject_autogen/moc_predefs.h	45;"	d
__cpp_rvalue_references	build/ImageProcProject_autogen/moc_predefs.h	158;"	d
__cpp_sized_deallocation	build/ImageProcProject_autogen/moc_predefs.h	304;"	d
__cpp_static_assert	build/ImageProcProject_autogen/moc_predefs.h	19;"	d
__cpp_structured_bindings	build/ImageProcProject_autogen/moc_predefs.h	299;"	d
__cpp_template_auto	build/ImageProcProject_autogen/moc_predefs.h	151;"	d
__cpp_template_template_args	build/ImageProcProject_autogen/moc_predefs.h	409;"	d
__cpp_threadsafe_static_init	build/ImageProcProject_autogen/moc_predefs.h	107;"	d
__cpp_unicode_characters	build/ImageProcProject_autogen/moc_predefs.h	220;"	d
__cpp_unicode_literals	build/ImageProcProject_autogen/moc_predefs.h	284;"	d
__cpp_user_defined_literals	build/ImageProcProject_autogen/moc_predefs.h	428;"	d
__cpp_variable_templates	build/ImageProcProject_autogen/moc_predefs.h	39;"	d
__cpp_variadic_templates	build/ImageProcProject_autogen/moc_predefs.h	33;"	d
__cpp_variadic_using	build/ImageProcProject_autogen/moc_predefs.h	49;"	d
__gnu_linux__	build/ImageProcProject_autogen/moc_predefs.h	121;"	d
__has_include	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	17;"	d	file:
__has_include	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	11;"	d	file:
__has_include	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	17;"	d	file:
__has_include	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	11;"	d	file:
__linux	build/ImageProcProject_autogen/moc_predefs.h	70;"	d
__linux__	build/ImageProcProject_autogen/moc_predefs.h	422;"	d
__pic__	build/ImageProcProject_autogen/moc_predefs.h	323;"	d
__pie__	build/ImageProcProject_autogen/moc_predefs.h	130;"	d
__unix	build/ImageProcProject_autogen/moc_predefs.h	283;"	d
__unix__	build/ImageProcProject_autogen/moc_predefs.h	194;"	d
abbreviateDecimalPowers	gui_sources/qcustomplot.h	/^  bool abbreviateDecimalPowers() const { return mAbbreviateDecimalPowers; }$/;"	f	class:QCPLabelPainterPrivate
abbreviateDecimalPowers	gui_sources/qcustomplot.h	/^  bool abbreviateDecimalPowers;$/;"	m	class:QCPAxisPainterPrivate
abs_pair	COMMON/interface_pass_coord.h	/^std::pair<T, T> abs_pair(std::pair<T, T> x) $/;"	f
accepted	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPSelectionRect::accepted(const QRect & _t1, QMouseEvent * _t2)$/;"	f	class:QCPSelectionRect
accumulate_counter	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	int accumulate_counter = 0;$/;"	m	class:AccumulateDataFilter
actionGuiDebug	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *actionGuiDebug;$/;"	m	class:Ui_WidgetMainWindow
actionGuiSizeBig	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *actionGuiSizeBig;$/;"	m	class:Ui_WidgetMainWindow
actionGuiSizeSmall	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *actionGuiSizeSmall;$/;"	m	class:Ui_WidgetMainWindow
actionGuiWork	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *actionGuiWork;$/;"	m	class:Ui_WidgetMainWindow
actionSaveGuiScheme	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *actionSaveGuiScheme;$/;"	m	class:Ui_WidgetMainWindow
action_11	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_11;$/;"	m	class:Ui_WidgetMainWindow
action_12	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_12;$/;"	m	class:Ui_WidgetMainWindow
action_13	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_13;$/;"	m	class:Ui_WidgetMainWindow
action_14	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_14;$/;"	m	class:Ui_WidgetMainWindow
action_15	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_15;$/;"	m	class:Ui_WidgetMainWindow
action_16	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_16;$/;"	m	class:Ui_WidgetMainWindow
action_17	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_17;$/;"	m	class:Ui_WidgetMainWindow
action_18	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_18;$/;"	m	class:Ui_WidgetMainWindow
action_21	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_21;$/;"	m	class:Ui_WidgetMainWindow
action_22	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_22;$/;"	m	class:Ui_WidgetMainWindow
action_23	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_23;$/;"	m	class:Ui_WidgetMainWindow
action_24	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_24;$/;"	m	class:Ui_WidgetMainWindow
action_25	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_25;$/;"	m	class:Ui_WidgetMainWindow
action_26	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_26;$/;"	m	class:Ui_WidgetMainWindow
action_27	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_27;$/;"	m	class:Ui_WidgetMainWindow
action_29	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_29;$/;"	m	class:Ui_WidgetMainWindow
action_30	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_30;$/;"	m	class:Ui_WidgetMainWindow
action_31	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_31;$/;"	m	class:Ui_WidgetMainWindow
action_5	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_5;$/;"	m	class:Ui_WidgetMainWindow
action_6	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_6;$/;"	m	class:Ui_WidgetMainWindow
action_7	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_7;$/;"	m	class:Ui_WidgetMainWindow
action_8	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_8;$/;"	m	class:Ui_WidgetMainWindow
action_LaserNet	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QAction *action_LaserNet;$/;"	m	class:Ui_WidgetMainWindow
adaptiveSampling	gui_sources/qcustomplot.h	/^  bool adaptiveSampling() const { return mAdaptiveSampling; }$/;"	f	class:QCPGraph
add	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::add(const DataType &data)$/;"	f	class:QCPDataContainer
add	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::add(const QCPDataContainer<DataType> &data)$/;"	f	class:QCPDataContainer
add	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::add(const QVector<DataType> &data, bool alreadySorted)$/;"	f	class:QCPDataContainer
addAxes	gui_sources/qcustomplot.cpp	/^QList<QCPAxis*> QCPAxisRect::addAxes(QCPAxis::AxisTypes types)$/;"	f	class:QCPAxisRect
addAxis	gui_sources/qcustomplot.cpp	/^QCPAxis *QCPAxisRect::addAxis(QCPAxis::AxisType type, QCPAxis *axis)$/;"	f	class:QCPAxisRect
addChild	gui_sources/qcustomplot.cpp	/^void QCPLayer::addChild(QCPLayerable *layerable, bool prepend)$/;"	f	class:QCPLayer
addChild	gui_sources/qcustomplot.cpp	/^void QCPMarginGroup::addChild(QCP::MarginSide side, QCPLayoutElement *element)$/;"	f	class:QCPMarginGroup
addChildX	gui_sources/qcustomplot.cpp	/^void QCPItemAnchor::addChildX(QCPItemPosition *pos)$/;"	f	class:QCPItemAnchor
addChildY	gui_sources/qcustomplot.cpp	/^void QCPItemAnchor::addChildY(QCPItemPosition *pos)$/;"	f	class:QCPItemAnchor
addData	gui_sources/qcustomplot.cpp	/^void QCPBars::addData(const QVector<double> &keys, const QVector<double> &values, bool alreadySorted)$/;"	f	class:QCPBars
addData	gui_sources/qcustomplot.cpp	/^void QCPBars::addData(double key, double value)$/;"	f	class:QCPBars
addData	gui_sources/qcustomplot.cpp	/^void QCPCurve::addData(const QVector<double> &keys, const QVector<double> &values)$/;"	f	class:QCPCurve
addData	gui_sources/qcustomplot.cpp	/^void QCPCurve::addData(const QVector<double> &t, const QVector<double> &keys, const QVector<double> &values, bool alreadySorted)$/;"	f	class:QCPCurve
addData	gui_sources/qcustomplot.cpp	/^void QCPCurve::addData(double key, double value)$/;"	f	class:QCPCurve
addData	gui_sources/qcustomplot.cpp	/^void QCPCurve::addData(double t, double key, double value)$/;"	f	class:QCPCurve
addData	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::addData(const QVector<double> &error)$/;"	f	class:QCPErrorBars
addData	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::addData(const QVector<double> &errorMinus, const QVector<double> &errorPlus)$/;"	f	class:QCPErrorBars
addData	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::addData(double error)$/;"	f	class:QCPErrorBars
addData	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::addData(double errorMinus, double errorPlus)$/;"	f	class:QCPErrorBars
addData	gui_sources/qcustomplot.cpp	/^void QCPFinancial::addData(const QVector<double> &keys, const QVector<double> &open, const QVector<double> &high, const QVector<double> &low, const QVector<double> &close, bool alreadySorted)$/;"	f	class:QCPFinancial
addData	gui_sources/qcustomplot.cpp	/^void QCPFinancial::addData(double key, double open, double high, double low, double close)$/;"	f	class:QCPFinancial
addData	gui_sources/qcustomplot.cpp	/^void QCPGraph::addData(const QVector<double> &keys, const QVector<double> &values, bool alreadySorted)$/;"	f	class:QCPGraph
addData	gui_sources/qcustomplot.cpp	/^void QCPGraph::addData(double key, double value)$/;"	f	class:QCPGraph
addData	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::addData(const QVector<double> &keys, const QVector<double> &values, bool alreadySorted)$/;"	f	class:QCPPolarGraph
addData	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::addData(double key, double value)$/;"	f	class:QCPPolarGraph
addData	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::addData(const QVector<double> &keys, const QVector<double> &minimum, const QVector<double> &lowerQuartile, const QVector<double> &median, const QVector<double> &upperQuartile, const QVector<double> &maximum, bool alreadySorted)$/;"	f	class:QCPStatisticalBox
addData	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::addData(double key, double minimum, double lowerQuartile, double median, double upperQuartile, double maximum, const QVector<double> &outliers)$/;"	f	class:QCPStatisticalBox
addDataRange	gui_sources/qcustomplot.cpp	/^void QCPDataSelection::addDataRange(const QCPDataRange &dataRange, bool simplify)$/;"	f	class:QCPDataSelection
addElement	gui_sources/qcustomplot.cpp	/^bool QCPLayoutGrid::addElement(QCPLayoutElement *element)$/;"	f	class:QCPLayoutGrid
addElement	gui_sources/qcustomplot.cpp	/^bool QCPLayoutGrid::addElement(int row, int column, QCPLayoutElement *element)$/;"	f	class:QCPLayoutGrid
addElement	gui_sources/qcustomplot.cpp	/^void QCPLayoutInset::addElement(QCPLayoutElement *element, Qt::Alignment alignment)$/;"	f	class:QCPLayoutInset
addElement	gui_sources/qcustomplot.cpp	/^void QCPLayoutInset::addElement(QCPLayoutElement *element, const QRectF &rect)$/;"	f	class:QCPLayoutInset
addGraph	gui_sources/qcustomplot.cpp	/^QCPGraph *QCustomPlot::addGraph(QCPAxis *keyAxis, QCPAxis *valueAxis)$/;"	f	class:QCustomPlot
addItem	gui_sources/qcustomplot.cpp	/^bool QCPLegend::addItem(QCPAbstractLegendItem *item)$/;"	f	class:QCPLegend
addLayer	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::addLayer(const QString &name, QCPLayer *otherLayer, QCustomPlot::LayerInsertMode insertMode)$/;"	f	class:QCustomPlot
addRadialAxis	gui_sources/qcustomplot.cpp	/^QCPPolarAxisRadial *QCPPolarAxisAngular::addRadialAxis(QCPPolarAxisRadial *axis)$/;"	f	class:QCPPolarAxisAngular
addTick	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerText::addTick(double position, const QString &label)$/;"	f	class:QCPAxisTickerText
addTicks	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerText::addTicks(const QMap<double, QString> &ticks)$/;"	f	class:QCPAxisTickerText
addTicks	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerText::addTicks(const QVector<double> &positions, const QVector<QString> &labels)$/;"	f	class:QCPAxisTickerText
addToLegend	gui_sources/qcustomplot.cpp	/^bool QCPAbstractPlottable::addToLegend()$/;"	f	class:QCPAbstractPlottable
addToLegend	gui_sources/qcustomplot.cpp	/^bool QCPAbstractPlottable::addToLegend(QCPLegend *legend)$/;"	f	class:QCPAbstractPlottable
addToLegend	gui_sources/qcustomplot.cpp	/^bool QCPPolarGraph::addToLegend()$/;"	f	class:QCPPolarGraph
addToLegend	gui_sources/qcustomplot.cpp	/^bool QCPPolarGraph::addToLegend(QCPLegend *legend)$/;"	f	class:QCPPolarGraph
adjust	gui_sources/link_line.cpp	/^void LinkLine::adjust()$/;"	f	class:LinkLine
adjustImageReceiver	COMMON/interface_image_source.cpp	/^void ImageSourceInterface::adjustImageReceiver(cv::Mat& receiver)$/;"	f	class:ImageSourceInterface
adjusted	gui_sources/qcustomplot.h	/^  QCPDataRange adjusted(int changeBegin, int changeEnd) const { return QCPDataRange(mBegin+changeBegin, mEnd+changeEnd); }$/;"	f	class:QCPDataRange
admm_iterations	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW int admm_iterations;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
adoptElement	gui_sources/qcustomplot.cpp	/^void QCPLayout::adoptElement(QCPLayoutElement *el)$/;"	f	class:QCPLayout
advance	gui_sources/node.cpp	/^bool Node::advance()                  { if(newPos == pos()) return false; setPos(newPos); return true; }$/;"	f	class:Node
aeAll	gui_sources/qcustomplot.h	/^                          ,aeAll           = 0xFFFF \/\/\/< <tt>0xFFFF<\/tt> All elements$/;"	e	enum:QCP::AntialiasedElement
aeAxes	gui_sources/qcustomplot.h	/^enum AntialiasedElement { aeAxes           = 0x0001 \/\/\/< <tt>0x0001<\/tt> Axis base line and tick marks$/;"	e	enum:QCP::AntialiasedElement
aeFills	gui_sources/qcustomplot.h	/^                          ,aeFills         = 0x0100 \/\/\/< <tt>0x0100<\/tt> Borders of fills (e.g. under or between graphs)$/;"	e	enum:QCP::AntialiasedElement
aeGrid	gui_sources/qcustomplot.h	/^                          ,aeGrid          = 0x0002 \/\/\/< <tt>0x0002<\/tt> Grid lines$/;"	e	enum:QCP::AntialiasedElement
aeItems	gui_sources/qcustomplot.h	/^                          ,aeItems         = 0x0040 \/\/\/< <tt>0x0040<\/tt> Main lines of items$/;"	e	enum:QCP::AntialiasedElement
aeLegend	gui_sources/qcustomplot.h	/^                          ,aeLegend        = 0x0008 \/\/\/< <tt>0x0008<\/tt> Legend box$/;"	e	enum:QCP::AntialiasedElement
aeLegendItems	gui_sources/qcustomplot.h	/^                          ,aeLegendItems   = 0x0010 \/\/\/< <tt>0x0010<\/tt> Legend items$/;"	e	enum:QCP::AntialiasedElement
aeNone	gui_sources/qcustomplot.h	/^                          ,aeNone          = 0x0000 \/\/\/< <tt>0x0000<\/tt> No elements$/;"	e	enum:QCP::AntialiasedElement
aeOther	gui_sources/qcustomplot.h	/^                          ,aeOther         = 0x8000 \/\/\/< <tt>0x8000<\/tt> Other elements that don't fit into any of the existing categories$/;"	e	enum:QCP::AntialiasedElement
aePlottables	gui_sources/qcustomplot.h	/^                          ,aePlottables    = 0x0020 \/\/\/< <tt>0x0020<\/tt> Main lines of plottables$/;"	e	enum:QCP::AntialiasedElement
aeScatters	gui_sources/qcustomplot.h	/^                          ,aeScatters      = 0x0080 \/\/\/< <tt>0x0080<\/tt> Scatter symbols of plottables (excluding scatter symbols of type ssPixmap)$/;"	e	enum:QCP::AntialiasedElement
aeSubGrid	gui_sources/qcustomplot.h	/^                          ,aeSubGrid       = 0x0004 \/\/\/< <tt>0x0004<\/tt> Sub grid lines$/;"	e	enum:QCP::AntialiasedElement
aeZeroLine	gui_sources/qcustomplot.h	/^                          ,aeZeroLine      = 0x0200 \/\/\/< <tt>0x0200<\/tt> Zero-lines, see \\ref QCPGrid::setZeroLinePen$/;"	e	enum:QCP::AntialiasedElement
afterLayout	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::afterLayout()$/;"	f	class:QCustomPlot
afterReplot	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::afterReplot()$/;"	f	class:QCustomPlot
aiBottom	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemPixmap::AnchorIndex
aiBottom	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemRect::AnchorIndex
aiBottom	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeft, aiTop, aiTopRight, aiRight, aiBottomRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemText::AnchorIndex
aiBottom	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeftRim, aiTop, aiTopRightRim, aiRight, aiBottomRightRim, aiBottom, aiBottomLeftRim, aiLeft, aiCenter};$/;"	e	enum:QCPItemEllipse::AnchorIndex
aiBottomLeft	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemPixmap::AnchorIndex
aiBottomLeft	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemRect::AnchorIndex
aiBottomLeft	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeft, aiTop, aiTopRight, aiRight, aiBottomRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemText::AnchorIndex
aiBottomLeftRim	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeftRim, aiTop, aiTopRightRim, aiRight, aiBottomRightRim, aiBottom, aiBottomLeftRim, aiLeft, aiCenter};$/;"	e	enum:QCPItemEllipse::AnchorIndex
aiBottomRight	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeft, aiTop, aiTopRight, aiRight, aiBottomRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemText::AnchorIndex
aiBottomRightRim	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeftRim, aiTop, aiTopRightRim, aiRight, aiBottomRightRim, aiBottom, aiBottomLeftRim, aiLeft, aiCenter};$/;"	e	enum:QCPItemEllipse::AnchorIndex
aiCenter	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiCenter};$/;"	e	enum:QCPItemBracket::AnchorIndex
aiCenter	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeftRim, aiTop, aiTopRightRim, aiRight, aiBottomRightRim, aiBottom, aiBottomLeftRim, aiLeft, aiCenter};$/;"	e	enum:QCPItemEllipse::AnchorIndex
aiLeft	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemPixmap::AnchorIndex
aiLeft	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemRect::AnchorIndex
aiLeft	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeft, aiTop, aiTopRight, aiRight, aiBottomRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemText::AnchorIndex
aiLeft	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeftRim, aiTop, aiTopRightRim, aiRight, aiBottomRightRim, aiBottom, aiBottomLeftRim, aiLeft, aiCenter};$/;"	e	enum:QCPItemEllipse::AnchorIndex
aiRight	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemPixmap::AnchorIndex
aiRight	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemRect::AnchorIndex
aiRight	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeft, aiTop, aiTopRight, aiRight, aiBottomRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemText::AnchorIndex
aiRight	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeftRim, aiTop, aiTopRightRim, aiRight, aiBottomRightRim, aiBottom, aiBottomLeftRim, aiLeft, aiCenter};$/;"	e	enum:QCPItemEllipse::AnchorIndex
aiTop	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemPixmap::AnchorIndex
aiTop	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemRect::AnchorIndex
aiTop	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeft, aiTop, aiTopRight, aiRight, aiBottomRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemText::AnchorIndex
aiTop	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeftRim, aiTop, aiTopRightRim, aiRight, aiBottomRightRim, aiBottom, aiBottomLeftRim, aiLeft, aiCenter};$/;"	e	enum:QCPItemEllipse::AnchorIndex
aiTopLeft	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeft, aiTop, aiTopRight, aiRight, aiBottomRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemText::AnchorIndex
aiTopLeftRim	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeftRim, aiTop, aiTopRightRim, aiRight, aiBottomRightRim, aiBottom, aiBottomLeftRim, aiLeft, aiCenter};$/;"	e	enum:QCPItemEllipse::AnchorIndex
aiTopRight	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemPixmap::AnchorIndex
aiTopRight	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemRect::AnchorIndex
aiTopRight	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeft, aiTop, aiTopRight, aiRight, aiBottomRight, aiBottom, aiBottomLeft, aiLeft};$/;"	e	enum:QCPItemText::AnchorIndex
aiTopRightRim	gui_sources/qcustomplot.h	/^  enum AnchorIndex {aiTopLeftRim, aiTop, aiTopRightRim, aiRight, aiBottomRightRim, aiBottom, aiBottomLeftRim, aiLeft, aiCenter};$/;"	e	enum:QCPItemEllipse::AnchorIndex
alpha	gui_sources/qcustomplot.cpp	/^unsigned char QCPColorMapData::alpha(int keyIndex, int valueIndex)$/;"	f	class:QCPColorMapData
amRectangular	gui_sources/qcustomplot.h	/^  enum AnchorMode { amRectangular    \/\/\/< $/;"	e	enum:QCPLabelPainterPrivate::AnchorMode
amSkewedRotated	gui_sources/qcustomplot.h	/^                    ,amSkewedRotated \/\/\/<$/;"	e	enum:QCPLabelPainterPrivate::AnchorMode
amSkewedUpright	gui_sources/qcustomplot.h	/^                    ,amSkewedUpright \/\/\/<$/;"	e	enum:QCPLabelPainterPrivate::AnchorMode
analyzeFontMetrics	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::analyzeFontMetrics()$/;"	f	class:QCPLabelPainterPrivate
anchor	gui_sources/qcustomplot.cpp	/^QCPItemAnchor *QCPAbstractItem::anchor(const QString &name) const$/;"	f	class:QCPAbstractItem
anchorMode	gui_sources/qcustomplot.h	/^  AnchorMode anchorMode() const { return mAnchorMode; }$/;"	f	class:QCPLabelPainterPrivate
anchorPixelPosition	gui_sources/qcustomplot.cpp	/^QPointF QCPAbstractItem::anchorPixelPosition(int anchorId) const$/;"	f	class:QCPAbstractItem
anchorPixelPosition	gui_sources/qcustomplot.cpp	/^QPointF QCPItemBracket::anchorPixelPosition(int anchorId) const$/;"	f	class:QCPItemBracket
anchorPixelPosition	gui_sources/qcustomplot.cpp	/^QPointF QCPItemEllipse::anchorPixelPosition(int anchorId) const$/;"	f	class:QCPItemEllipse
anchorPixelPosition	gui_sources/qcustomplot.cpp	/^QPointF QCPItemPixmap::anchorPixelPosition(int anchorId) const$/;"	f	class:QCPItemPixmap
anchorPixelPosition	gui_sources/qcustomplot.cpp	/^QPointF QCPItemRect::anchorPixelPosition(int anchorId) const$/;"	f	class:QCPItemRect
anchorPixelPosition	gui_sources/qcustomplot.cpp	/^QPointF QCPItemText::anchorPixelPosition(int anchorId) const$/;"	f	class:QCPItemText
anchorReference	gui_sources/qcustomplot.h	/^  QPointF anchorReference() const { return mAnchorReference; }$/;"	f	class:QCPLabelPainterPrivate
anchorReferenceType	gui_sources/qcustomplot.h	/^  AnchorReferenceType anchorReferenceType() const { return mAnchorReferenceType; }$/;"	f	class:QCPLabelPainterPrivate
anchorSide	gui_sources/qcustomplot.h	/^  AnchorSide anchorSide() const { return mAnchorSide; }$/;"	f	class:QCPLabelPainterPrivate
anchors	gui_sources/qcustomplot.h	/^  QList<QCPItemAnchor*> anchors() const { return mAnchors; }$/;"	f	class:QCPAbstractItem
angle	gui_sources/qcustomplot.h	/^  double angle() const { return mAngle; }$/;"	f	class:QCPPolarAxisAngular
angle	gui_sources/qcustomplot.h	/^  double angle() const { return mAngle; }$/;"	f	class:QCPPolarAxisRadial
angle	gui_sources/qcustomplot.h	/^  double angle() const { return qAtan2(mY, mX); }$/;"	f	class:QCPVector2D
angleRadToCoord	gui_sources/qcustomplot.h	/^  double angleRadToCoord(double angleRad) const { return mRange.lower+(angleRad-mAngleRad)\/(mRangeReversed ? -2.0*M_PI : 2.0*M_PI)*mRange.size(); }$/;"	f	class:QCPPolarAxisAngular
angleReference	gui_sources/qcustomplot.h	/^  AngleReference angleReference() const { return mAngleReference; }$/;"	f	class:QCPPolarAxisRadial
angularAxis	gui_sources/qcustomplot.h	/^  QCPPolarAxisAngular *angularAxis() const { return mAngularAxis; }$/;"	f	class:QCPPolarAxisRadial
angularPen	gui_sources/qcustomplot.h	/^  QPen angularPen() const { return mAngularPen; }$/;"	f	class:QCPPolarGrid
angularSubGridPen	gui_sources/qcustomplot.h	/^  QPen angularSubGridPen() const { return mAngularSubGridPen; }$/;"	f	class:QCPPolarGrid
antialiased	gui_sources/qcustomplot.h	/^  bool antialiased() const { return mAntialiased; }$/;"	f	class:QCPLayerable
antialiasedElements	gui_sources/qcustomplot.h	/^  QCP::AntialiasedElements antialiasedElements() const { return mAntialiasedElements; }$/;"	f	class:QCustomPlot
antialiasedFill	gui_sources/qcustomplot.h	/^  bool antialiasedFill() const { return mAntialiasedFill; }$/;"	f	class:QCPAbstractPlottable
antialiasedFill	gui_sources/qcustomplot.h	/^  bool antialiasedFill() const { return mAntialiasedFill; }$/;"	f	class:QCPPolarGraph
antialiasedScatters	gui_sources/qcustomplot.h	/^  bool antialiasedScatters() const { return mAntialiasedScatters; }$/;"	f	class:QCPAbstractPlottable
antialiasedScatters	gui_sources/qcustomplot.h	/^  bool antialiasedScatters() const { return mAntialiasedScatters; }$/;"	f	class:QCPPolarGraph
antialiasedSubGrid	gui_sources/qcustomplot.h	/^  bool antialiasedSubGrid() const { return mAntialiasedSubGrid; }$/;"	f	class:QCPGrid
antialiasedSubGrid	gui_sources/qcustomplot.h	/^  bool antialiasedSubGrid() const { return mAntialiasedSubGrid; }$/;"	f	class:QCPPolarGrid
antialiasedZeroLine	gui_sources/qcustomplot.h	/^  bool antialiasedZeroLine() const { return mAntialiasedZeroLine; }$/;"	f	class:QCPGrid
antialiasedZeroLine	gui_sources/qcustomplot.h	/^  bool antialiasedZeroLine() const { return mAntialiasedZeroLine; }$/;"	f	class:QCPPolarGrid
antialiasing	gui_sources/qcustomplot.h	/^  bool antialiasing() const { return testRenderHint(QPainter::Antialiasing); }$/;"	f	class:QCPPainter
append	gui_sources/qcustomplot.cpp	/^void QCPBarsGroup::append(QCPBars *bars)$/;"	f	class:QCPBarsGroup
applyAnchorTransform	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::applyAnchorTransform(LabelData &labelData) const$/;"	f	class:QCPLabelPainterPrivate
applyAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPLayerable::applyAntialiasingHint(QCPPainter *painter, bool localAntialiased, QCP::AntialiasedElement overrideElement) const$/;"	f	class:QCPLayerable
applyBrush	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecorator::applyBrush(QCPPainter *painter) const$/;"	f	class:QCPSelectionDecorator
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPAbstractItem::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPAbstractItem
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPAbstractLegendItem::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPAbstractLegendItem
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPAbstractPlottable
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPAxis::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPAxis
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPAxisRect
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPColorScale::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPColorScale
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPGrid::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPGrid
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPLegend::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPLegend
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPPolarAxisAngular
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPPolarAxisRadial
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPPolarGraph
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPPolarGrid
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPSelectionRect::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPSelectionRect
applyDefaultAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPTextElement::applyDefaultAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPTextElement
applyFillAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::applyFillAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPAbstractPlottable
applyFillAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::applyFillAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPPolarGraph
applyPen	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecorator::applyPen(QCPPainter *painter) const$/;"	f	class:QCPSelectionDecorator
applyScattersAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::applyScattersAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPAbstractPlottable
applyScattersAntialiasingHint	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::applyScattersAntialiasingHint(QCPPainter *painter) const$/;"	f	class:QCPPolarGraph
applyTo	gui_sources/qcustomplot.cpp	/^void QCPScatterStyle::applyTo(QCPPainter *painter, const QPen &defaultPen) const$/;"	f	class:QCPScatterStyle
appsrc_ptr	stream_video_rtsp.cpp	/^GstElement* VideoStreamRTSP::appsrc_ptr;$/;"	m	class:VideoStreamRTSP	file:
appsrc_ptr	stream_video_rtsp.h	/^  static GstElement *appsrc_ptr;$/;"	m	class:VideoStreamRTSP
arAbsolute	gui_sources/qcustomplot.h	/^  enum AngleReference { arAbsolute    \/\/\/< The axis tilt is given in absolute degrees. The zero is to the right and positive angles are measured counter-clockwise.$/;"	e	enum:QCPPolarAxisRadial::AngleReference
arAngularAxis	gui_sources/qcustomplot.h	/^                       ,arAngularAxis \/\/\/< The axis tilt is measured in the angular coordinate system given by the parent angular axis.$/;"	e	enum:QCPPolarAxisRadial::AngleReference
arrowSize	gui_sources/link_line.h	/^    qreal arrowSize;$/;"	m	class:LinkLine
artNormal	gui_sources/qcustomplot.h	/^  enum AnchorReferenceType { artNormal    \/\/\/< $/;"	e	enum:QCPLabelPainterPrivate::AnchorReferenceType
artTangent	gui_sources/qcustomplot.h	/^                             ,artTangent \/\/\/<$/;"	e	enum:QCPLabelPainterPrivate::AnchorReferenceType
asBottom	gui_sources/qcustomplot.h	/^                    ,asBottom   \/\/\/< $/;"	e	enum:QCPLabelPainterPrivate::AnchorSide
asBottomLeft	gui_sources/qcustomplot.h	/^                    ,asBottomLeft$/;"	e	enum:QCPLabelPainterPrivate::AnchorSide
asBottomRight	gui_sources/qcustomplot.h	/^                    ,asBottomRight$/;"	e	enum:QCPLabelPainterPrivate::AnchorSide
asLeft	gui_sources/qcustomplot.h	/^  enum AnchorSide { asLeft      \/\/\/< $/;"	e	enum:QCPLabelPainterPrivate::AnchorSide
asRight	gui_sources/qcustomplot.h	/^                    ,asRight    \/\/\/< $/;"	e	enum:QCPLabelPainterPrivate::AnchorSide
asTop	gui_sources/qcustomplot.h	/^                    ,asTop      \/\/\/< $/;"	e	enum:QCPLabelPainterPrivate::AnchorSide
asTopLeft	gui_sources/qcustomplot.h	/^                    ,asTopLeft$/;"	e	enum:QCPLabelPainterPrivate::AnchorSide
asTopRight	gui_sources/qcustomplot.h	/^                    ,asTopRight$/;"	e	enum:QCPLabelPainterPrivate::AnchorSide
aspectRatioMode	gui_sources/qcustomplot.h	/^  Qt::AspectRatioMode aspectRatioMode() const { return mAspectRatioMode; }$/;"	f	class:QCPItemPixmap
at	gui_sources/qcustomplot.h	/^  const_iterator at(int index) const { return constBegin()+qBound(0, index, size()); }$/;"	f	class:QCPDataContainer
atBottom	gui_sources/qcustomplot.h	/^                  ,atBottom = 0x08  \/\/\/< <tt>0x08<\/tt> Axis is horizontal and on the bottom side of the axis rect$/;"	e	enum:QCPAxis::AxisType
atLeft	gui_sources/qcustomplot.h	/^  enum AxisType { atLeft    = 0x01  \/\/\/< <tt>0x01<\/tt> Axis is vertical and on the left side of the axis rect$/;"	e	enum:QCPAxis::AxisType
atRight	gui_sources/qcustomplot.h	/^                  ,atRight  = 0x02  \/\/\/< <tt>0x02<\/tt> Axis is vertical and on the right side of the axis rect$/;"	e	enum:QCPAxis::AxisType
atTop	gui_sources/qcustomplot.h	/^                  ,atTop    = 0x04  \/\/\/< <tt>0x04<\/tt> Axis is horizontal and on the top side of the axis rect$/;"	e	enum:QCPAxis::AxisType
autoAddPlottableToLegend	gui_sources/qcustomplot.h	/^  bool autoAddPlottableToLegend() const { return mAutoAddPlottableToLegend; }$/;"	f	class:QCustomPlot
autoMargins	gui_sources/qcustomplot.h	/^  QCP::MarginSides autoMargins() const { return mAutoMargins; }$/;"	f	class:QCPLayoutElement
autoSqueeze	gui_sources/qcustomplot.h	/^  bool autoSqueeze() const { return mAutoSqueeze; }$/;"	f	class:QCPDataContainer
avarage_window_size	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	int avarage_window_size = 16;$/;"	m	class:AccumulateDataFilter
axes	gui_sources/qcustomplot.cpp	/^QList<QCPAxis*> QCPAxisRect::axes() const$/;"	f	class:QCPAxisRect
axes	gui_sources/qcustomplot.cpp	/^QList<QCPAxis*> QCPAxisRect::axes(QCPAxis::AxisTypes types) const$/;"	f	class:QCPAxisRect
axis	gui_sources/qcustomplot.cpp	/^QCPAxis *QCPAxisRect::axis(QCPAxis::AxisType type, int index) const$/;"	f	class:QCPAxisRect
axis	gui_sources/qcustomplot.h	/^  QCPAxis *axis() const { return mColorAxis.data(); }$/;"	f	class:QCPColorScale
axisClick	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::axisClick(QCPAxis * _t1, QCPAxis::SelectablePart _t2, QMouseEvent * _t3)$/;"	f	class:QCustomPlot
axisCount	gui_sources/qcustomplot.cpp	/^int QCPAxisRect::axisCount(QCPAxis::AxisType type) const$/;"	f	class:QCPAxisRect
axisDoubleClick	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::axisDoubleClick(QCPAxis * _t1, QCPAxis::SelectablePart _t2, QMouseEvent * _t3)$/;"	f	class:QCustomPlot
axisRect	gui_sources/qcustomplot.cpp	/^QCPAxisRect *QCPItemPosition::axisRect() const$/;"	f	class:QCPItemPosition
axisRect	gui_sources/qcustomplot.cpp	/^QCPAxisRect *QCustomPlot::axisRect(int index) const$/;"	f	class:QCustomPlot
axisRect	gui_sources/qcustomplot.h	/^  QCPAxisRect *axisRect() const { return mAxisRect; }$/;"	f	class:QCPAxis
axisRect	gui_sources/qcustomplot.h	/^  QRect axisRect, viewportRect;$/;"	m	class:QCPAxisPainterPrivate
axisRectAt	gui_sources/qcustomplot.cpp	/^QCPAxisRect *QCustomPlot::axisRectAt(const QPointF &pos) const$/;"	f	class:QCustomPlot
axisRectCount	gui_sources/qcustomplot.cpp	/^int QCustomPlot::axisRectCount() const$/;"	f	class:QCustomPlot
axisRects	gui_sources/qcustomplot.cpp	/^QList<QCPAxisRect*> QCustomPlot::axisRects() const$/;"	f	class:QCustomPlot
axisRemoved	gui_sources/qcustomplot.cpp	/^void QCustomPlot::axisRemoved(QCPAxis *axis)$/;"	f	class:QCustomPlot
axisSelectableChanged	gui_sources/qcustomplot.cpp	/^void QCPColorScaleAxisRectPrivate::axisSelectableChanged(QCPAxis::SelectableParts selectableParts)$/;"	f	class:QCPColorScaleAxisRectPrivate
axisSelectionBox	gui_sources/qcustomplot.h	/^  QRect axisSelectionBox() const { return mAxisSelectionBox; }$/;"	f	class:QCPAxisPainterPrivate
axisSelectionChanged	gui_sources/qcustomplot.cpp	/^void QCPColorScaleAxisRectPrivate::axisSelectionChanged(QCPAxis::SelectableParts selectedParts)$/;"	f	class:QCPColorScaleAxisRectPrivate
axisType	gui_sources/qcustomplot.h	/^  AxisType axisType() const { return mAxisType; }$/;"	f	class:QCPAxis
background	gui_sources/qcustomplot.h	/^  QPixmap background() const { return mBackgroundPixmap; }$/;"	f	class:QCPAxisRect
background	gui_sources/qcustomplot.h	/^  QPixmap background() const { return mBackgroundPixmap; }$/;"	f	class:QCPPolarAxisAngular
background	gui_sources/qcustomplot.h	/^  QPixmap background() const { return mBackgroundPixmap; }$/;"	f	class:QCustomPlot
backgroundBrush	gui_sources/qcustomplot.h	/^  QBrush backgroundBrush() const { return mBackgroundBrush; }$/;"	f	class:QCPAxisRect
backgroundBrush	gui_sources/qcustomplot.h	/^  QBrush backgroundBrush() const { return mBackgroundBrush; }$/;"	f	class:QCPPolarAxisAngular
backgroundScaled	gui_sources/qcustomplot.h	/^  bool backgroundScaled() const { return mBackgroundScaled; }$/;"	f	class:QCPAxisRect
backgroundScaled	gui_sources/qcustomplot.h	/^  bool backgroundScaled() const { return mBackgroundScaled; }$/;"	f	class:QCPPolarAxisAngular
backgroundScaled	gui_sources/qcustomplot.h	/^  bool backgroundScaled() const { return mBackgroundScaled; }$/;"	f	class:QCustomPlot
backgroundScaledMode	gui_sources/qcustomplot.h	/^  Qt::AspectRatioMode backgroundScaledMode() const { return mBackgroundScaledMode; }$/;"	f	class:QCPAxisRect
backgroundScaledMode	gui_sources/qcustomplot.h	/^  Qt::AspectRatioMode backgroundScaledMode() const { return mBackgroundScaledMode; }$/;"	f	class:QCPPolarAxisAngular
backgroundScaledMode	gui_sources/qcustomplot.h	/^  Qt::AspectRatioMode backgroundScaledMode() const { return mBackgroundScaledMode; }$/;"	f	class:QCustomPlot
background_ratio	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW int background_ratio;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
barAbove	gui_sources/qcustomplot.h	/^  QCPBars *barAbove() const { return mBarAbove.data(); }$/;"	f	class:QCPBars
barBelow	gui_sources/qcustomplot.h	/^  QCPBars *barBelow() const { return mBarBelow.data(); }$/;"	f	class:QCPBars
barWidth	gui_sources/qcustomplot.h	/^  int barWidth () const { return mBarWidth; }$/;"	f	class:QCPColorScale
bars	gui_sources/qcustomplot.cpp	/^QCPBars *QCPBarsGroup::bars(int index) const$/;"	f	class:QCPBarsGroup
bars	gui_sources/qcustomplot.h	/^  QList<QCPBars*> bars() const { return mBars; }$/;"	f	class:QCPBarsGroup
barsGroup	gui_sources/qcustomplot.h	/^  QCPBarsGroup *barsGroup() const { return mBarsGroup; }$/;"	f	class:QCPBars
baseBounds	gui_sources/qcustomplot.h	/^    QRect baseBounds, expBounds, suffixBounds, totalBounds, rotatedTotalBounds;$/;"	m	struct:QCPAxisPainterPrivate::TickLabelData
baseBounds	gui_sources/qcustomplot.h	/^    QRect baseBounds, expBounds, suffixBounds;$/;"	m	struct:QCPLabelPainterPrivate::LabelData
baseFont	gui_sources/qcustomplot.h	/^    QFont baseFont, expFont;$/;"	m	struct:QCPAxisPainterPrivate::TickLabelData
baseFont	gui_sources/qcustomplot.h	/^    QFont baseFont, expFont;$/;"	m	struct:QCPLabelPainterPrivate::LabelData
basePart	gui_sources/qcustomplot.h	/^    QString basePart, expPart, suffixPart;$/;"	m	struct:QCPAxisPainterPrivate::TickLabelData
basePart	gui_sources/qcustomplot.h	/^    QString basePart, expPart, suffixPart;$/;"	m	struct:QCPLabelPainterPrivate::LabelData
basePen	gui_sources/qcustomplot.h	/^  QPen basePen() const { return mBasePen; }$/;"	f	class:QCPAxis
basePen	gui_sources/qcustomplot.h	/^  QPen basePen() const { return mBasePen; }$/;"	f	class:QCPPolarAxisAngular
basePen	gui_sources/qcustomplot.h	/^  QPen basePen() const { return mBasePen; }$/;"	f	class:QCPPolarAxisRadial
basePen	gui_sources/qcustomplot.h	/^  QPen basePen;$/;"	m	class:QCPAxisPainterPrivate
baseValue	gui_sources/qcustomplot.h	/^  double baseValue() const { return mBaseValue; }$/;"	f	class:QCPBars
bbox	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^	cv::Rect bbox;$/;"	m	class:TrackerFirst
bbox_prev	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^	cv::Rect bbox_prev;$/;"	m	class:TrackerFirst
beforeReplot	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::beforeReplot()$/;"	f	class:QCustomPlot
begin	gui_sources/qcustomplot.cpp	/^bool QCPPainter::begin(QPaintDevice *device)$/;"	f	class:QCPPainter
begin	gui_sources/qcustomplot.h	/^  int begin() const { return mBegin; }$/;"	f	class:QCPDataRange
begin	gui_sources/qcustomplot.h	/^  iterator begin() { return mData.begin()+mPreallocSize; }$/;"	f	class:QCPDataContainer
borderPen	gui_sources/qcustomplot.h	/^  QPen borderPen() const { return mBorderPen; }$/;"	f	class:QCPLegend
bottom	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const bottom;$/;"	m	class:QCPItemEllipse
bottom	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const bottom;$/;"	m	class:QCPItemPixmap
bottom	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const bottom;$/;"	m	class:QCPItemRect
bottom	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const bottom;$/;"	m	class:QCPItemText
bottom	gui_sources/qcustomplot.h	/^  int bottom() const { return mRect.bottom(); }$/;"	f	class:QCPAxisRect
bottom	gui_sources/qcustomplot.h	/^  int bottom() const { return mRect.bottom(); }$/;"	f	class:QCPPolarAxisAngular
bottomLeft	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const bottomLeft;$/;"	m	class:QCPItemPixmap
bottomLeft	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const bottomLeft;$/;"	m	class:QCPItemRect
bottomLeft	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const bottomLeft;$/;"	m	class:QCPItemText
bottomLeft	gui_sources/qcustomplot.h	/^  QPoint bottomLeft() const { return mRect.bottomLeft(); }$/;"	f	class:QCPAxisRect
bottomLeft	gui_sources/qcustomplot.h	/^  QPoint bottomLeft() const { return mRect.bottomLeft(); }$/;"	f	class:QCPPolarAxisAngular
bottomLeftRim	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const bottomLeftRim;$/;"	m	class:QCPItemEllipse
bottomRight	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const bottomRight;$/;"	m	class:QCPItemText
bottomRight	gui_sources/qcustomplot.h	/^  QCPItemPosition * const bottomRight;$/;"	m	class:QCPItemEllipse
bottomRight	gui_sources/qcustomplot.h	/^  QCPItemPosition * const bottomRight;$/;"	m	class:QCPItemPixmap
bottomRight	gui_sources/qcustomplot.h	/^  QCPItemPosition * const bottomRight;$/;"	m	class:QCPItemRect
bottomRight	gui_sources/qcustomplot.h	/^  QPoint bottomRight() const { return mRect.bottomRight(); }$/;"	f	class:QCPAxisRect
bottomRight	gui_sources/qcustomplot.h	/^  QPoint bottomRight() const { return mRect.bottomRight(); }$/;"	f	class:QCPPolarAxisAngular
bottomRightRim	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const bottomRightRim;$/;"	m	class:QCPItemEllipse
bounded	gui_sources/qcustomplot.cpp	/^QCPDataRange QCPDataRange::bounded(const QCPDataRange &other) const$/;"	f	class:QCPDataRange
bounded	gui_sources/qcustomplot.cpp	/^QCPRange QCPRange::bounded(double lowerBound, double upperBound) const$/;"	f	class:QCPRange
boundingDistance	gui_sources/qcustomplot.cpp	/^double QCPLineEnding::boundingDistance() const$/;"	f	class:QCPLineEnding
boundingRect	gui_sources/link_line.cpp	/^QRectF LinkLine::boundingRect() const$/;"	f	class:LinkLine
boundingRect	gui_sources/node.cpp	/^QRectF Node::boundingRect() const$/;"	f	class:Node
bracketBrush	gui_sources/qcustomplot.h	/^  QBrush bracketBrush() const { return mBracketBrush; }$/;"	f	class:QCPSelectionDecoratorBracket
bracketHeight	gui_sources/qcustomplot.h	/^  int bracketHeight() const { return mBracketHeight; }$/;"	f	class:QCPSelectionDecoratorBracket
bracketPen	gui_sources/qcustomplot.h	/^  QPen bracketPen() const { return mBracketPen; }$/;"	f	class:QCPSelectionDecoratorBracket
bracketStyle	gui_sources/qcustomplot.h	/^  BracketStyle bracketStyle() const { return mBracketStyle; }$/;"	f	class:QCPSelectionDecoratorBracket
bracketWidth	gui_sources/qcustomplot.h	/^  int bracketWidth() const { return mBracketWidth; }$/;"	f	class:QCPSelectionDecoratorBracket
brush	gui_sources/qcustomplot.h	/^  QBrush brush() const { return mBrush; }$/;"	f	class:QCPAbstractPlottable
brush	gui_sources/qcustomplot.h	/^  QBrush brush() const { return mBrush; }$/;"	f	class:QCPItemEllipse
brush	gui_sources/qcustomplot.h	/^  QBrush brush() const { return mBrush; }$/;"	f	class:QCPItemRect
brush	gui_sources/qcustomplot.h	/^  QBrush brush() const { return mBrush; }$/;"	f	class:QCPItemText
brush	gui_sources/qcustomplot.h	/^  QBrush brush() const { return mBrush; }$/;"	f	class:QCPItemTracer
brush	gui_sources/qcustomplot.h	/^  QBrush brush() const { return mBrush; }$/;"	f	class:QCPLegend
brush	gui_sources/qcustomplot.h	/^  QBrush brush() const { return mBrush; }$/;"	f	class:QCPPolarGraph
brush	gui_sources/qcustomplot.h	/^  QBrush brush() const { return mBrush; }$/;"	f	class:QCPScatterStyle
brush	gui_sources/qcustomplot.h	/^  QBrush brush() const { return mBrush; }$/;"	f	class:QCPSelectionDecorator
brush	gui_sources/qcustomplot.h	/^  QBrush brush() const { return mBrush; }$/;"	f	class:QCPSelectionRect
brushNegative	gui_sources/qcustomplot.h	/^  QBrush brushNegative() const { return mBrushNegative; }$/;"	f	class:QCPFinancial
brushPositive	gui_sources/qcustomplot.h	/^  QBrush brushPositive() const { return mBrushPositive; }$/;"	f	class:QCPFinancial
bsCalligraphic	gui_sources/qcustomplot.h	/^                      ,bsCalligraphic \/\/\/< A curly brace with varying stroke width giving a calligraphic impression$/;"	e	enum:QCPItemBracket::BracketStyle
bsCurly	gui_sources/qcustomplot.h	/^                      ,bsCurly  \/\/\/< A curly brace$/;"	e	enum:QCPItemBracket::BracketStyle
bsEllipse	gui_sources/qcustomplot.h	/^                      ,bsEllipse       \/\/\/< An ellipse is drawn. The size of the ellipse is given by the bracket width\/height properties.$/;"	e	enum:QCPSelectionDecoratorBracket::BracketStyle
bsHalfEllipse	gui_sources/qcustomplot.h	/^                      ,bsHalfEllipse   \/\/\/< A half ellipse is drawn. The size of the ellipse is given by the bracket width\/height properties.$/;"	e	enum:QCPSelectionDecoratorBracket::BracketStyle
bsPlus	gui_sources/qcustomplot.h	/^                      ,bsPlus         \/\/\/< A plus is drawn.$/;"	e	enum:QCPSelectionDecoratorBracket::BracketStyle
bsRound	gui_sources/qcustomplot.h	/^                      ,bsRound  \/\/\/< A brace with round edges$/;"	e	enum:QCPItemBracket::BracketStyle
bsSquare	gui_sources/qcustomplot.h	/^  enum BracketStyle { bsSquare  \/\/\/< A brace with angled edges$/;"	e	enum:QCPItemBracket::BracketStyle
bsSquareBracket	gui_sources/qcustomplot.h	/^  enum BracketStyle { bsSquareBracket \/\/\/< A square bracket is drawn.$/;"	e	enum:QCPSelectionDecoratorBracket::BracketStyle
bsUserStyle	gui_sources/qcustomplot.h	/^                      ,bsUserStyle    \/\/\/< Start custom bracket styles at this index when subclassing and reimplementing \\ref drawBracket.$/;"	e	enum:QCPSelectionDecoratorBracket::BracketStyle
bufferDevicePixelRatio	gui_sources/qcustomplot.h	/^  double bufferDevicePixelRatio() const { return mBufferDevicePixelRatio; }$/;"	f	class:QCustomPlot
butAimRegim1	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QPushButton *butAimRegim1;$/;"	m	class:Ui_WidgetAimingControl
butAimRegim2	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QPushButton *butAimRegim2;$/;"	m	class:Ui_WidgetAimingControl
butAimRegim3	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QPushButton *butAimRegim3;$/;"	m	class:Ui_WidgetAimingControl
butAimRegim4	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QPushButton *butAimRegim4;$/;"	m	class:Ui_WidgetAimingControl
butAimRegim5	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QPushButton *butAimRegim5;$/;"	m	class:Ui_WidgetAimingControl
butMoveDown	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    QPushButton *butMoveDown;$/;"	m	class:Ui_WidgetImageImitator
butMoveLeft	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    QPushButton *butMoveLeft;$/;"	m	class:Ui_WidgetImageImitator
butMoveRight	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    QPushButton *butMoveRight;$/;"	m	class:Ui_WidgetImageImitator
butMoveUp	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    QPushButton *butMoveUp;$/;"	m	class:Ui_WidgetImageImitator
butProcessCentroid	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^    QPushButton *butProcessCentroid;$/;"	m	class:Ui_WidgetProcessingImageControl
butProcessTemplate	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^    QPushButton *butProcessTemplate;$/;"	m	class:Ui_WidgetProcessingImageControl
butRegimAiming	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	/^    QPushButton *butRegimAiming;$/;"	m	class:Ui_WidgetProcessController
butRegimCalibration	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	/^    QPushButton *butRegimCalibration;$/;"	m	class:Ui_WidgetProcessController
butRegimImitator	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	/^    QPushButton *butRegimImitator;$/;"	m	class:Ui_WidgetProcessController
butRegimTestSignal	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	/^    QPushButton *butRegimTestSignal;$/;"	m	class:Ui_WidgetProcessController
butReset	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QPushButton *butReset;$/;"	m	class:Ui_WidgetAimingControl
butResetProcessing	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^    QPushButton *butResetProcessing;$/;"	m	class:Ui_WidgetProcessingImageControl
butSetExposure	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QPushButton *butSetExposure;$/;"	m	class:Ui_WidgetCameraControl
butSetParam	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QPushButton *butSetParam;$/;"	m	class:Ui_WidgetAimingControl
butStartAimMoving	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    QPushButton *butStartAimMoving;$/;"	m	class:Ui_WidgetImageImitator
butStartStopWork	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QPushButton *butStartStopWork;$/;"	m	class:Ui_WidgetCameraControl
butStopAimMoving	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    QPushButton *butStopAimMoving;$/;"	m	class:Ui_WidgetImageImitator
butZoom1	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QPushButton *butZoom1;$/;"	m	class:Ui_WidgetCameraControl
butZoom2	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QPushButton *butZoom2;$/;"	m	class:Ui_WidgetCameraControl
butZoom3	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QPushButton *butZoom3;$/;"	m	class:Ui_WidgetCameraControl
butZoom4	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QPushButton *butZoom4;$/;"	m	class:Ui_WidgetCameraControl
butZoom5	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QPushButton *butZoom5;$/;"	m	class:Ui_WidgetCameraControl
buttons	gui_sources/widget_container_group.h	/^QVector<QPushButton*> buttons;$/;"	m	class:WidgetContainerGroup
cacheKey	gui_sources/qcustomplot.cpp	/^QByteArray QCPLabelPainterPrivate::cacheKey(const QString &text, const QColor &color, double rotation, AnchorSide side) const$/;"	f	class:QCPLabelPainterPrivate
cacheSize	gui_sources/qcustomplot.cpp	/^int QCPLabelPainterPrivate::cacheSize() const$/;"	f	class:QCPLabelPainterPrivate
calculateAutoMargin	gui_sources/qcustomplot.cpp	/^int QCPAxisRect::calculateAutoMargin(QCP::MarginSide side)$/;"	f	class:QCPAxisRect
calculateAutoMargin	gui_sources/qcustomplot.cpp	/^int QCPLayoutElement::calculateAutoMargin(QCP::MarginSide side)$/;"	f	class:QCPLayoutElement
calculateMargin	gui_sources/qcustomplot.cpp	/^int QCPAxis::calculateMargin()$/;"	f	class:QCPAxis
call_configure_video	stream_video_rtsp.cpp	/^void VideoStreamRTSP::call_configure_video(GstRTSPMediaFactory * factory, GstRTSPMedia * media, gpointer user_data)$/;"	f	class:VideoStreamRTSP
callback_data	CAMERA_INTERFACE/camera_interface_class.h	/^	ArvStreamCallbackData callback_data;$/;"	m	class:CameraInterfaceAravis
camera	CAMERA_INTERFACE/camera_interface_class.h	/^	  ArvCamera *camera = nullptr;$/;"	m	class:CameraInterfaceAravis
cancel	gui_sources/qcustomplot.cpp	/^void QCPSelectionRect::cancel()$/;"	f	class:QCPSelectionRect
canceled	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPSelectionRect::canceled(const QRect & _t1, QInputEvent * _t2)$/;"	f	class:QCPSelectionRect
candlestickSelectTest	gui_sources/qcustomplot.cpp	/^double QCPFinancial::candlestickSelectTest(const QPointF &pos, const QCPFinancialDataContainer::const_iterator &begin, const QCPFinancialDataContainer::const_iterator &end, QCPFinancialDataContainer::const_iterator &closestDataPoint) const$/;"	f	class:QCPFinancial
cell	gui_sources/qcustomplot.cpp	/^double QCPColorMapData::cell(int keyIndex, int valueIndex)$/;"	f	class:QCPColorMapData
cellToCoord	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::cellToCoord(int keyIndex, int valueIndex, double *key, double *value) const$/;"	f	class:QCPColorMapData
center	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const center;$/;"	m	class:QCPItemBracket
center	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const center;$/;"	m	class:QCPItemEllipse
center	gui_sources/qcustomplot.h	/^  QPoint center() const { return mRect.center(); }$/;"	f	class:QCPAxisRect
center	gui_sources/qcustomplot.h	/^  QPointF center() const { return mCenter; }$/;"	f	class:QCPPolarAxisAngular
center	gui_sources/qcustomplot.h	/^  double center() const { return (upper+lower)*0.5; }$/;"	f	class:QCPRange
centralwidget	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QWidget *centralwidget;$/;"	m	class:Ui_WidgetMainWindow
changed	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPSelectionRect::changed(const QRect & _t1, QMouseEvent * _t2)$/;"	f	class:QCPSelectionRect
channel	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    quint8  channel = 0;$/;"	m	struct:LaserStateStruct
channelFillGraph	gui_sources/qcustomplot.h	/^  QCPGraph *channelFillGraph() const { return mChannelFillGraph.data(); }$/;"	f	class:QCPGraph
channel_counter	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	int channel_counter = 1;$/;"	m	class:AccumulateDataFilter
chartStyle	gui_sources/qcustomplot.h	/^  ChartStyle chartStyle() const { return mChartStyle; }$/;"	f	class:QCPFinancial
cheb_attenuation	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float cheb_attenuation;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
checkChannel1	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    QPushButton *checkChannel1;$/;"	m	class:Ui_WidgetSinusSource
checkChannel2	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    QPushButton *checkChannel2;$/;"	m	class:Ui_WidgetSinusSource
checkRangeOffset	DEVICES/device_rotary_interface.h	/^bool DeviceRotaryInterface<T_CONNECTION,T_COMMAND,T_MESSAGE>::checkRangeOffset(QPair<int, int> Pos)$/;"	f	class:DeviceRotaryInterface
checkWorkBlock	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QPushButton *checkWorkBlock;$/;"	m	class:Ui_WidgetAimingControl
checkWorkBlock	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    QPushButton *checkWorkBlock;$/;"	m	class:Ui_WidgetSinusSource
children	gui_sources/qcustomplot.h	/^  QList<QCPLayerable*> children() const { return mChildren; }$/;"	f	class:QCPLayer
ciHSV	gui_sources/qcustomplot.h	/^                            ,ciHSV \/\/\/< Color channels hue, saturation and value are linearly interpolated (The hue is interpolated over the shortest angle distance)$/;"	e	enum:QCPColorGradient::ColorInterpolation
ciRGB	gui_sources/qcustomplot.h	/^  enum ColorInterpolation { ciRGB  \/\/\/< Color channels red, green and blue are linearly interpolated$/;"	e	enum:QCPColorGradient::ColorInterpolation
cleanMantissa	gui_sources/qcustomplot.cpp	/^double QCPAxisTicker::cleanMantissa(double input) const$/;"	f	class:QCPAxisTicker
clear	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerText::clear()$/;"	f	class:QCPAxisTickerText
clear	gui_sources/qcustomplot.cpp	/^void QCPBarsGroup::clear()$/;"	f	class:QCPBarsGroup
clear	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::clear()$/;"	f	class:QCPColorMapData
clear	gui_sources/qcustomplot.cpp	/^void QCPDataSelection::clear()$/;"	f	class:QCPDataSelection
clear	gui_sources/qcustomplot.cpp	/^void QCPLayout::clear()$/;"	f	class:QCPLayout
clear	gui_sources/qcustomplot.cpp	/^void QCPMarginGroup::clear()$/;"	f	class:QCPMarginGroup
clear	gui_sources/qcustomplot.cpp	/^void QCPPaintBufferGlFbo::clear(const QColor &color)$/;"	f	class:QCPPaintBufferGlFbo
clear	gui_sources/qcustomplot.cpp	/^void QCPPaintBufferGlPbuffer::clear(const QColor &color)$/;"	f	class:QCPPaintBufferGlPbuffer
clear	gui_sources/qcustomplot.cpp	/^void QCPPaintBufferPixmap::clear(const QColor &color)$/;"	f	class:QCPPaintBufferPixmap
clear	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::clear()$/;"	f	class:QCPDataContainer
clearAlpha	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::clearAlpha()$/;"	f	class:QCPColorMapData
clearCache	gui_sources/qcustomplot.cpp	/^void QCPAxisPainterPrivate::clearCache()$/;"	f	class:QCPAxisPainterPrivate
clearCache	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::clearCache()$/;"	f	class:QCPLabelPainterPrivate
clearColorStops	gui_sources/qcustomplot.cpp	/^void QCPColorGradient::clearColorStops()$/;"	f	class:QCPColorGradient
clearGraphs	gui_sources/qcustomplot.cpp	/^int QCustomPlot::clearGraphs()$/;"	f	class:QCustomPlot
clearItems	gui_sources/qcustomplot.cpp	/^int QCustomPlot::clearItems()$/;"	f	class:QCustomPlot
clearItems	gui_sources/qcustomplot.cpp	/^void QCPLegend::clearItems()$/;"	f	class:QCPLegend
clearPlottables	gui_sources/qcustomplot.cpp	/^int QCustomPlot::clearPlottables()$/;"	f	class:QCustomPlot
clearStruct	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   void clearStruct() { std::memset(this,0,sizeof(CommandSetPos)); }$/;"	f	struct:CommandSetPos
clearStruct	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   void clearStruct() { std::memset(this,0,sizeof(CommandSetSpeed)); }$/;"	f	struct:CommandSetSpeed
clearStruct	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^  void clearStruct() { std::memset(this,0,sizeof(CommandDevice)); }$/;"	f	struct:CommandDevice
clicked	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPTextElement::clicked(QMouseEvent * _t1)$/;"	f	class:QCPTextElement
clipAxisRect	gui_sources/qcustomplot.cpp	/^QCPAxisRect *QCPAbstractItem::clipAxisRect() const$/;"	f	class:QCPAbstractItem
clipRect	gui_sources/qcustomplot.cpp	/^QRect QCPAbstractItem::clipRect() const$/;"	f	class:QCPAbstractItem
clipRect	gui_sources/qcustomplot.cpp	/^QRect QCPAbstractLegendItem::clipRect() const$/;"	f	class:QCPAbstractLegendItem
clipRect	gui_sources/qcustomplot.cpp	/^QRect QCPAbstractPlottable::clipRect() const$/;"	f	class:QCPAbstractPlottable
clipRect	gui_sources/qcustomplot.cpp	/^QRect QCPLayerable::clipRect() const$/;"	f	class:QCPLayerable
clipRect	gui_sources/qcustomplot.cpp	/^QRect QCPPolarGraph::clipRect() const$/;"	f	class:QCPPolarGraph
clipToAxisRect	gui_sources/qcustomplot.h	/^  bool clipToAxisRect() const { return mClipToAxisRect; }$/;"	f	class:QCPAbstractItem
close	gui_sources/qcustomplot.h	/^  double key, open, high, low, close;$/;"	m	class:QCPFinancialData
closeEvent	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::closeEvent(QCloseEvent *event)$/;"	f	class:WidgetMainWindow
color	gui_sources/qcustomplot.cpp	/^QRgb QCPColorGradient::color(double position, const QCPRange &range, bool logarithmic)$/;"	f	class:QCPColorGradient
color	gui_sources/qcustomplot.h	/^    QColor color;$/;"	m	struct:QCPLabelPainterPrivate::LabelData
color	gui_sources/qcustomplot.h	/^  QColor color() const { return mColor; }$/;"	f	class:QCPItemText
color	gui_sources/qcustomplot.h	/^  QColor color() const { return mColor; }$/;"	f	class:QCPLabelPainterPrivate
colorInterpolation	gui_sources/qcustomplot.h	/^  ColorInterpolation colorInterpolation() const { return mColorInterpolation; }$/;"	f	class:QCPColorGradient
colorMaps	gui_sources/qcustomplot.cpp	/^QList<QCPColorMap*> QCPColorScale::colorMaps() const$/;"	f	class:QCPColorScale
colorScale	gui_sources/qcustomplot.h	/^  QCPColorScale *colorScale() const { return mColorScale.data(); }$/;"	f	class:QCPColorMap
colorStops	gui_sources/qcustomplot.h	/^  QMap<double, QColor> colorStops() const { return mColorStops; }$/;"	f	class:QCPColorGradient
colorize	gui_sources/qcustomplot.cpp	/^void QCPColorGradient::colorize(const double *data, const QCPRange &range, QRgb *scanLine, int n, int dataIndexFactor, bool logarithmic)$/;"	f	class:QCPColorGradient
colorize	gui_sources/qcustomplot.cpp	/^void QCPColorGradient::colorize(const double *data, const unsigned char *alpha, const QCPRange &range, QRgb *scanLine, int n, int dataIndexFactor, bool logarithmic)$/;"	f	class:QCPColorGradient
columnCount	gui_sources/qcustomplot.h	/^  int columnCount() const { return mElements.size() > 0 ? mElements.first().size() : 0; }$/;"	f	class:QCPLayoutGrid
columnSpacing	gui_sources/qcustomplot.h	/^  int columnSpacing() const { return mColumnSpacing; }$/;"	f	class:QCPLayoutGrid
columnStretchFactors	gui_sources/qcustomplot.h	/^  QList<double> columnStretchFactors() const { return mColumnStretchFactors; }$/;"	f	class:QCPLayoutGrid
commonMargin	gui_sources/qcustomplot.cpp	/^int QCPMarginGroup::commonMargin(QCP::MarginSide side) const$/;"	f	class:QCPMarginGroup
compress_feature	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW bool compress_feature;        \/\/!<  activate the pca method to compress the features$/;"	m	struct:cv::tracking::TrackerKCF::Params
compressed_size	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW int compressed_size;          \/\/!<  feature size after compression$/;"	m	struct:cv::tracking::TrackerKCF::Params
connectBars	gui_sources/qcustomplot.cpp	/^void QCPBars::connectBars(QCPBars *lower, QCPBars *upper)$/;"	f	class:QCPBars
connectTo	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  void connectTo(QString IDDeviceStr, int IDDevice = 0) {};$/;"	f	class:CANConnectionEngine
connectTo	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^void TCPConnectionEngine::connectTo(QString address, int Port)$/;"	f	class:TCPConnectionEngine
connectTo	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^void UDPEngineInterface::connectTo(QString IPDevice, int Port) $/;"	f	class:UDPEngineInterface
const	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
const	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
constBegin	gui_sources/qcustomplot.h	/^  const_iterator constBegin() const { return mData.constBegin()+mPreallocSize; }$/;"	f	class:QCPDataContainer
constEnd	gui_sources/qcustomplot.h	/^  const_iterator constEnd() const { return mData.constEnd(); }$/;"	f	class:QCPDataContainer
const_iterator	gui_sources/qcustomplot.h	/^  typedef typename QVector<DataType>::const_iterator const_iterator;$/;"	t	class:QCPDataContainer
contains	gui_sources/qcustomplot.cpp	/^bool QCPDataRange::contains(const QCPDataRange &other) const$/;"	f	class:QCPDataRange
contains	gui_sources/qcustomplot.cpp	/^bool QCPDataSelection::contains(const QCPDataSelection &other) const$/;"	f	class:QCPDataSelection
contains	gui_sources/qcustomplot.h	/^  bool contains(QCPBars *bars) const { return mBars.contains(bars); }$/;"	f	class:QCPBarsGroup
contains	gui_sources/qcustomplot.h	/^  bool contains(double value) const { return value >= lower && value <= upper; }$/;"	f	class:QCPRange
coordToAngleRad	gui_sources/qcustomplot.h	/^  double coordToAngleRad(double coord) const { return mAngleRad+(coord-mRange.lower)\/mRange.size()*(mRangeReversed ? -2.0*M_PI : 2.0*M_PI); } \/\/ mention in doc that return doesn't wrap$/;"	f	class:QCPPolarAxisAngular
coordToCell	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::coordToCell(double key, double value, int *keyIndex, int *valueIndex) const$/;"	f	class:QCPColorMapData
coordToPixel	gui_sources/qcustomplot.cpp	/^QPointF QCPPolarAxisAngular::coordToPixel(double angleCoord, double radiusCoord) const$/;"	f	class:QCPPolarAxisAngular
coordToPixel	gui_sources/qcustomplot.cpp	/^QPointF QCPPolarAxisRadial::coordToPixel(double angleCoord, double radiusCoord) const$/;"	f	class:QCPPolarAxisRadial
coordToPixel	gui_sources/qcustomplot.cpp	/^double QCPAxis::coordToPixel(double value) const$/;"	f	class:QCPAxis
coordToRadius	gui_sources/qcustomplot.cpp	/^double QCPPolarAxisRadial::coordToRadius(double coord) const$/;"	f	class:QCPPolarAxisRadial
coords	gui_sources/qcustomplot.h	/^  QPointF coords() const { return QPointF(mKey, mValue); }$/;"	f	class:QCPItemPosition
coordsToPixels	gui_sources/qcustomplot.cpp	/^const QPointF QCPAbstractPlottable::coordsToPixels(double key, double value) const$/;"	f	class:QCPAbstractPlottable
coordsToPixels	gui_sources/qcustomplot.cpp	/^const QPointF QCPPolarGraph::coordsToPixels(double key, double value) const$/;"	f	class:QCPPolarGraph
coordsToPixels	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::coordsToPixels(double key, double value, double &x, double &y) const$/;"	f	class:QCPAbstractPlottable
coordsToPixels	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::coordsToPixels(double key, double value, double &x, double &y) const$/;"	f	class:QCPPolarGraph
copyFrom	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecorator::copyFrom(const QCPSelectionDecorator *other)$/;"	f	class:QCPSelectionDecorator
counter	CAMERA_INTERFACE/camera_interface_class.h	/^	int counter;$/;"	m	struct:ArvStreamCallbackData
counter	COMMON/interface_image_source.h	/^    int counter = 0;$/;"	m	class:FramePeriodMeasure
counter	UTILITES/debug_output_filter.h	/^    int counter = 0;$/;"	m	class:OutputFilter
counter	UTILITES/thread_operation_nodes.h	/^    int counter = -1;$/;"	m	class:ThinningFilter
counter	UTILITES/thread_operation_nodes.h	/^  int counter = 0;$/;"	m	class:CoordPassThinning
counter	gui_sources/GRAPHICS_WINDOW_GRAPH/linegraph.h	/^    int counter = 0;$/;"	m	class:GraphPointsLineInterface
counter	stream_video_rtsp.h	/^  int counter =0;$/;"	m	class:VideoStreamRTSP
counter_test	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	int counter_test = 0;$/;"	m	class:RotateOperationContainer
createAlpha	gui_sources/qcustomplot.cpp	/^bool QCPColorMapData::createAlpha(bool initializeOpaque)$/;"	f	class:QCPColorMapData
createAnchor	gui_sources/qcustomplot.cpp	/^QCPItemAnchor *QCPAbstractItem::createAnchor(const QString &name, int anchorId)$/;"	f	class:QCPAbstractItem
createCachedLabel	gui_sources/qcustomplot.cpp	/^QCPLabelPainterPrivate::CachedLabel *QCPLabelPainterPrivate::createCachedLabel(const LabelData &labelData) const$/;"	f	class:QCPLabelPainterPrivate
createLabelVector	gui_sources/qcustomplot.cpp	/^QVector<QString> QCPAxisTicker::createLabelVector(const QVector<double> &ticks, const QLocale &locale, QChar formatChar, int precision)$/;"	f	class:QCPAxisTicker
createPaintBuffer	gui_sources/qcustomplot.cpp	/^QCPAbstractPaintBuffer *QCustomPlot::createPaintBuffer()$/;"	f	class:QCustomPlot
createPosition	gui_sources/qcustomplot.cpp	/^QCPItemPosition *QCPAbstractItem::createPosition(const QString &name)$/;"	f	class:QCPAbstractItem
createSubTickVector	gui_sources/qcustomplot.cpp	/^QVector<double> QCPAxisTicker::createSubTickVector(int subTickCount, const QVector<double> &ticks)$/;"	f	class:QCPAxisTicker
createTickVector	gui_sources/qcustomplot.cpp	/^QVector<double> QCPAxisTicker::createTickVector(double tickStep, const QCPRange &range)$/;"	f	class:QCPAxisTicker
createTickVector	gui_sources/qcustomplot.cpp	/^QVector<double> QCPAxisTickerDateTime::createTickVector(double tickStep, const QCPRange &range)$/;"	f	class:QCPAxisTickerDateTime
createTickVector	gui_sources/qcustomplot.cpp	/^QVector<double> QCPAxisTickerLog::createTickVector(double tickStep, const QCPRange &range)$/;"	f	class:QCPAxisTickerLog
createTickVector	gui_sources/qcustomplot.cpp	/^QVector<double> QCPAxisTickerText::createTickVector(double tickStep, const QCPRange &range)$/;"	f	class:QCPAxisTickerText
csCandlestick	gui_sources/qcustomplot.h	/^                   ,csCandlestick  \/\/\/< Candlestick representation$/;"	e	enum:QCPFinancial::ChartStyle
csOhlc	gui_sources/qcustomplot.h	/^  enum ChartStyle { csOhlc         \/\/\/< Open-High-Low-Close bar representation$/;"	e	enum:QCPFinancial::ChartStyle
currentLayer	gui_sources/qcustomplot.cpp	/^QCPLayer *QCustomPlot::currentLayer() const$/;"	f	class:QCustomPlot
current_ident	UTILITES/debug_output_filter.cpp	/^int OutputFilter::current_ident = 0;$/;"	m	class:OutputFilter	file:
current_ident	UTILITES/debug_output_filter.h	/^    static int current_ident;$/;"	m	class:OutputFilter
current_layout	gui_sources/widget_table_group.h	/^    std::vector<QHBoxLayout*>::iterator current_layout;$/;"	m	class:WidgetTableGroup
customPath	gui_sources/qcustomplot.h	/^  QPainterPath customPath() const { return mCustomPath; }$/;"	f	class:QCPScatterStyle
cv	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^namespace cv {$/;"	n
data	gui_sources/qcustomplot.cpp	/^double QCPColorMapData::data(double key, double value)$/;"	f	class:QCPColorMapData
data	gui_sources/qcustomplot.h	/^  QCPColorMapData *data() const { return mMapData; }$/;"	f	class:QCPColorMap
data	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPBarsDataContainer> data() const { return mDataContainer; }$/;"	f	class:QCPBars
data	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPCurveDataContainer> data() const { return mDataContainer; }$/;"	f	class:QCPCurve
data	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPErrorBarsDataContainer> data() const { return mDataContainer; }$/;"	f	class:QCPErrorBars
data	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPFinancialDataContainer> data() const { return mDataContainer; }$/;"	f	class:QCPFinancial
data	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPGraphDataContainer> data() const { return mDataContainer; }$/;"	f	class:QCPGraph
data	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPGraphDataContainer> data() const { return mDataContainer; }$/;"	f	class:QCPPolarGraph
data	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPStatisticalBoxDataContainer> data() const { return mDataContainer; }$/;"	f	class:QCPStatisticalBox
dataBounds	gui_sources/qcustomplot.h	/^  QCPRange dataBounds() const { return mDataBounds; }$/;"	f	class:QCPColorMapData
dataCount	gui_sources/qcustomplot.cpp	/^int QCPErrorBars::dataCount() const$/;"	f	class:QCPErrorBars
dataCount	gui_sources/qcustomplot.cpp	/^int QCPPolarGraph::dataCount() const$/;"	f	class:QCPPolarGraph
dataCount	gui_sources/qcustomplot.h	/^int QCPAbstractPlottable1D<DataType>::dataCount() const$/;"	f	class:QCPAbstractPlottable1D
dataMainKey	gui_sources/qcustomplot.cpp	/^double QCPErrorBars::dataMainKey(int index) const$/;"	f	class:QCPErrorBars
dataMainKey	gui_sources/qcustomplot.h	/^double QCPAbstractPlottable1D<DataType>::dataMainKey(int index) const$/;"	f	class:QCPAbstractPlottable1D
dataMainValue	gui_sources/qcustomplot.cpp	/^double QCPErrorBars::dataMainValue(int index) const$/;"	f	class:QCPErrorBars
dataMainValue	gui_sources/qcustomplot.h	/^double QCPAbstractPlottable1D<DataType>::dataMainValue(int index) const$/;"	f	class:QCPAbstractPlottable1D
dataPixelPosition	gui_sources/qcustomplot.cpp	/^QPointF QCPBars::dataPixelPosition(int index) const$/;"	f	class:QCPBars
dataPixelPosition	gui_sources/qcustomplot.cpp	/^QPointF QCPErrorBars::dataPixelPosition(int index) const$/;"	f	class:QCPErrorBars
dataPixelPosition	gui_sources/qcustomplot.h	/^QPointF QCPAbstractPlottable1D<DataType>::dataPixelPosition(int index) const$/;"	f	class:QCPAbstractPlottable1D
dataPlottable	gui_sources/qcustomplot.h	/^  QCPAbstractPlottable *dataPlottable() const { return mDataPlottable.data(); }$/;"	f	class:QCPErrorBars
dataPointCount	gui_sources/qcustomplot.cpp	/^int QCPDataSelection::dataPointCount() const$/;"	f	class:QCPDataSelection
dataRange	gui_sources/qcustomplot.cpp	/^QCPDataRange QCPDataSelection::dataRange(int index) const$/;"	f	class:QCPDataSelection
dataRange	gui_sources/qcustomplot.h	/^  QCPDataRange dataRange() const { return QCPDataRange(0, size()); }$/;"	f	class:QCPDataContainer
dataRange	gui_sources/qcustomplot.h	/^  QCPRange dataRange() const { return mDataRange; }$/;"	f	class:QCPColorMap
dataRange	gui_sources/qcustomplot.h	/^  QCPRange dataRange() const { return mDataRange; }$/;"	f	class:QCPColorScale
dataRangeChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPColorMap::dataRangeChanged(const QCPRange & _t1)$/;"	f	class:QCPColorMap
dataRangeChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPColorScale::dataRangeChanged(const QCPRange & _t1)$/;"	f	class:QCPColorScale
dataRangeCount	gui_sources/qcustomplot.h	/^  int dataRangeCount() const { return mDataRanges.size(); }$/;"	f	class:QCPDataSelection
dataRanges	gui_sources/qcustomplot.h	/^  QList<QCPDataRange> dataRanges() const { return mDataRanges; }$/;"	f	class:QCPDataSelection
dataScaleType	gui_sources/qcustomplot.h	/^  QCPAxis::ScaleType dataScaleType() const { return mDataScaleType; }$/;"	f	class:QCPColorMap
dataScaleType	gui_sources/qcustomplot.h	/^  QCPAxis::ScaleType dataScaleType() const { return mDataScaleType; }$/;"	f	class:QCPColorScale
dataScaleTypeChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPColorMap::dataScaleTypeChanged(QCPAxis::ScaleType _t1)$/;"	f	class:QCPColorMap
dataScaleTypeChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPColorScale::dataScaleTypeChanged(QCPAxis::ScaleType _t1)$/;"	f	class:QCPColorScale
dataSortKey	gui_sources/qcustomplot.cpp	/^double QCPErrorBars::dataSortKey(int index) const$/;"	f	class:QCPErrorBars
dataSortKey	gui_sources/qcustomplot.h	/^double QCPAbstractPlottable1D<DataType>::dataSortKey(int index) const$/;"	f	class:QCPAbstractPlottable1D
dataToImpulseLines	gui_sources/qcustomplot.cpp	/^QVector<QPointF> QCPGraph::dataToImpulseLines(const QVector<QCPGraphData> &data) const$/;"	f	class:QCPGraph
dataToLines	gui_sources/qcustomplot.cpp	/^QVector<QPointF> QCPGraph::dataToLines(const QVector<QCPGraphData> &data) const$/;"	f	class:QCPGraph
dataToLines	gui_sources/qcustomplot.cpp	/^QVector<QPointF> QCPPolarGraph::dataToLines(const QVector<QCPGraphData> &data) const$/;"	f	class:QCPPolarGraph
dataToStepCenterLines	gui_sources/qcustomplot.cpp	/^QVector<QPointF> QCPGraph::dataToStepCenterLines(const QVector<QCPGraphData> &data) const$/;"	f	class:QCPGraph
dataToStepLeftLines	gui_sources/qcustomplot.cpp	/^QVector<QPointF> QCPGraph::dataToStepLeftLines(const QVector<QCPGraphData> &data) const$/;"	f	class:QCPGraph
dataToStepRightLines	gui_sources/qcustomplot.cpp	/^QVector<QPointF> QCPGraph::dataToStepRightLines(const QVector<QCPGraphData> &data) const$/;"	f	class:QCPGraph
dataValueRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPErrorBars::dataValueRange(int index) const$/;"	f	class:QCPErrorBars
dataValueRange	gui_sources/qcustomplot.h	/^QCPRange QCPAbstractPlottable1D<DataType>::dataValueRange(int index) const$/;"	f	class:QCPAbstractPlottable1D
dateTimeFormat	gui_sources/qcustomplot.h	/^  QString dateTimeFormat() const { return mDateTimeFormat; }$/;"	f	class:QCPAxisTickerDateTime
dateTimeSpec	gui_sources/qcustomplot.h	/^  Qt::TimeSpec dateTimeSpec() const { return mDateTimeSpec; }$/;"	f	class:QCPAxisTickerDateTime
dateTimeToKey	gui_sources/qcustomplot.cpp	/^double QCPAxisTickerDateTime::dateTimeToKey(const QDate &date, Qt::TimeSpec timeSpec)$/;"	f	class:QCPAxisTickerDateTime
dateTimeToKey	gui_sources/qcustomplot.cpp	/^double QCPAxisTickerDateTime::dateTimeToKey(const QDateTime &dateTime)$/;"	f	class:QCPAxisTickerDateTime
desc_npca	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW int desc_npca;       \/\/!<  non-compressed descriptors of TrackerKCF::MODE$/;"	m	struct:cv::tracking::TrackerKCF::Params
desc_pca	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW int desc_pca;        \/\/!<  compressed descriptors of TrackerKCF::MODE$/;"	m	struct:cv::tracking::TrackerKCF::Params
deselectAll	gui_sources/qcustomplot.cpp	/^void QCustomPlot::deselectAll()$/;"	f	class:QCustomPlot
deselectEvent	gui_sources/qcustomplot.cpp	/^void QCPAbstractItem::deselectEvent(bool *selectionStateChanged)$/;"	f	class:QCPAbstractItem
deselectEvent	gui_sources/qcustomplot.cpp	/^void QCPAbstractLegendItem::deselectEvent(bool *selectionStateChanged)$/;"	f	class:QCPAbstractLegendItem
deselectEvent	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::deselectEvent(bool *selectionStateChanged)$/;"	f	class:QCPAbstractPlottable
deselectEvent	gui_sources/qcustomplot.cpp	/^void QCPAxis::deselectEvent(bool *selectionStateChanged)$/;"	f	class:QCPAxis
deselectEvent	gui_sources/qcustomplot.cpp	/^void QCPLayerable::deselectEvent(bool *selectionStateChanged)$/;"	f	class:QCPLayerable
deselectEvent	gui_sources/qcustomplot.cpp	/^void QCPLegend::deselectEvent(bool *selectionStateChanged)$/;"	f	class:QCPLegend
deselectEvent	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::deselectEvent(bool *selectionStateChanged)$/;"	f	class:QCPPolarAxisRadial
deselectEvent	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::deselectEvent(bool *selectionStateChanged)$/;"	f	class:QCPPolarGraph
deselectEvent	gui_sources/qcustomplot.cpp	/^void QCPTextElement::deselectEvent(bool *selectionStateChanged)$/;"	f	class:QCPTextElement
dest	gui_sources/link_line.h	/^    WidgetSceneNodeInterface* dest;$/;"	m	class:LinkLine
destNode	gui_sources/link_line.cpp	/^WidgetSceneNodeInterface* LinkLine::destNode() const  {return dest; }$/;"	f	class:LinkLine
destPoint	gui_sources/link_line.h	/^    QPointF destPoint;$/;"	m	class:LinkLine
destPort	gui_sources/link_line.h	/^    Node* destPort;$/;"	m	class:LinkLine
destPortNode	gui_sources/link_line.cpp	/^Node* LinkLine::destPortNode() const { return destPort; }$/;"	f	class:LinkLine
detect_thresh	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float detect_thresh;         \/\/!<  detection confidence threshold$/;"	m	struct:cv::tracking::TrackerKCF::Params
device	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  QCanBusDevice *device = nullptr;$/;"	m	class:CANConnectionEngine
deviceCAN	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  CANConnectionEngine* deviceCAN = nullptr;$/;"	m	class:CANTestMessage
devicePixelRatio	gui_sources/qcustomplot.h	/^  double devicePixelRatio() const { return mDevicePixelRatio; }$/;"	f	class:QCPAbstractPaintBuffer
dispatchCommand	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_generic.h	/^   static void dispatchCommand(const QByteArray& Command) $/;"	f	class:CommandDispatcherGeneric
dispatchCommand	main.cpp	/^template<> void CommandDispatcherGeneric<TypeRegister<CommandDevice<0>>::ID()>::dispatchCommand(const QByteArray& Command) $/;"	f	class:CommandDispatcherGeneric
dispatchCommand	main.cpp	/^template<> void CommandDispatcherGeneric<TypeRegister<CommandSetPosRotary>::ID()>::dispatchCommand(const QByteArray& Command) $/;"	f	class:CommandDispatcherGeneric
distance	UTILITES/thread_operation_nodes.h	/^  double distance = 0;$/;"	m	class:CoordDetector
distanceSquaredToLine	gui_sources/qcustomplot.cpp	/^double QCPVector2D::distanceSquaredToLine(const QCPVector2D &start, const QCPVector2D &end) const$/;"	f	class:QCPVector2D
distanceSquaredToLine	gui_sources/qcustomplot.cpp	/^double QCPVector2D::distanceSquaredToLine(const QLineF &line) const$/;"	f	class:QCPVector2D
distanceToStraightLine	gui_sources/qcustomplot.cpp	/^double QCPVector2D::distanceToStraightLine(const QCPVector2D &base, const QCPVector2D &direction) const$/;"	f	class:QCPVector2D
done	CAMERA_INTERFACE/camera_interface_class.h	/^	gboolean done;$/;"	m	struct:ArvStreamCallbackData
donePainting	gui_sources/qcustomplot.cpp	/^void QCPPaintBufferGlFbo::donePainting()$/;"	f	class:QCPPaintBufferGlFbo
donePainting	gui_sources/qcustomplot.h	/^  virtual void donePainting() {}$/;"	f	class:QCPAbstractPaintBuffer
dot	gui_sources/qcustomplot.h	/^  double dot(const QCPVector2D &vec) const { return mX*vec.mX+mY*vec.mY; }$/;"	f	class:QCPVector2D
doubleClicked	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPTextElement::doubleClicked(QMouseEvent * _t1)$/;"	f	class:QCPTextElement
draw	gui_sources/qcustomplot.cpp	/^void QCPAxis::draw(QCPPainter *painter)$/;"	f	class:QCPAxis
draw	gui_sources/qcustomplot.cpp	/^void QCPAxisPainterPrivate::draw(QCPPainter *painter)$/;"	f	class:QCPAxisPainterPrivate
draw	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::draw(QCPPainter *painter)$/;"	f	class:QCPAxisRect
draw	gui_sources/qcustomplot.cpp	/^void QCPBars::draw(QCPPainter *painter)$/;"	f	class:QCPBars
draw	gui_sources/qcustomplot.cpp	/^void QCPColorMap::draw(QCPPainter *painter)$/;"	f	class:QCPColorMap
draw	gui_sources/qcustomplot.cpp	/^void QCPColorScaleAxisRectPrivate::draw(QCPPainter *painter)$/;"	f	class:QCPColorScaleAxisRectPrivate
draw	gui_sources/qcustomplot.cpp	/^void QCPCurve::draw(QCPPainter *painter)$/;"	f	class:QCPCurve
draw	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::draw(QCPPainter *painter)$/;"	f	class:QCPErrorBars
draw	gui_sources/qcustomplot.cpp	/^void QCPFinancial::draw(QCPPainter *painter)$/;"	f	class:QCPFinancial
draw	gui_sources/qcustomplot.cpp	/^void QCPGraph::draw(QCPPainter *painter)$/;"	f	class:QCPGraph
draw	gui_sources/qcustomplot.cpp	/^void QCPGrid::draw(QCPPainter *painter)$/;"	f	class:QCPGrid
draw	gui_sources/qcustomplot.cpp	/^void QCPItemBracket::draw(QCPPainter *painter)$/;"	f	class:QCPItemBracket
draw	gui_sources/qcustomplot.cpp	/^void QCPItemCurve::draw(QCPPainter *painter)$/;"	f	class:QCPItemCurve
draw	gui_sources/qcustomplot.cpp	/^void QCPItemEllipse::draw(QCPPainter *painter)$/;"	f	class:QCPItemEllipse
draw	gui_sources/qcustomplot.cpp	/^void QCPItemLine::draw(QCPPainter *painter)$/;"	f	class:QCPItemLine
draw	gui_sources/qcustomplot.cpp	/^void QCPItemPixmap::draw(QCPPainter *painter)$/;"	f	class:QCPItemPixmap
draw	gui_sources/qcustomplot.cpp	/^void QCPItemRect::draw(QCPPainter *painter)$/;"	f	class:QCPItemRect
draw	gui_sources/qcustomplot.cpp	/^void QCPItemStraightLine::draw(QCPPainter *painter)$/;"	f	class:QCPItemStraightLine
draw	gui_sources/qcustomplot.cpp	/^void QCPItemText::draw(QCPPainter *painter)$/;"	f	class:QCPItemText
draw	gui_sources/qcustomplot.cpp	/^void QCPItemTracer::draw(QCPPainter *painter)$/;"	f	class:QCPItemTracer
draw	gui_sources/qcustomplot.cpp	/^void QCPLayer::draw(QCPPainter *painter)$/;"	f	class:QCPLayer
draw	gui_sources/qcustomplot.cpp	/^void QCPLegend::draw(QCPPainter *painter)$/;"	f	class:QCPLegend
draw	gui_sources/qcustomplot.cpp	/^void QCPLineEnding::draw(QCPPainter *painter, const QCPVector2D &pos, const QCPVector2D &dir) const$/;"	f	class:QCPLineEnding
draw	gui_sources/qcustomplot.cpp	/^void QCPLineEnding::draw(QCPPainter *painter, const QCPVector2D &pos, double angle) const$/;"	f	class:QCPLineEnding
draw	gui_sources/qcustomplot.cpp	/^void QCPPaintBufferGlFbo::draw(QCPPainter *painter) const$/;"	f	class:QCPPaintBufferGlFbo
draw	gui_sources/qcustomplot.cpp	/^void QCPPaintBufferGlPbuffer::draw(QCPPainter *painter) const$/;"	f	class:QCPPaintBufferGlPbuffer
draw	gui_sources/qcustomplot.cpp	/^void QCPPaintBufferPixmap::draw(QCPPainter *painter) const$/;"	f	class:QCPPaintBufferPixmap
draw	gui_sources/qcustomplot.cpp	/^void QCPPlottableLegendItem::draw(QCPPainter *painter)$/;"	f	class:QCPPlottableLegendItem
draw	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::draw(QCPPainter *painter)$/;"	f	class:QCPPolarAxisAngular
draw	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::draw(QCPPainter *painter)$/;"	f	class:QCPPolarAxisRadial
draw	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::draw(QCPPainter *painter)$/;"	f	class:QCPPolarGraph
draw	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::draw(QCPPainter *painter)$/;"	f	class:QCPPolarGrid
draw	gui_sources/qcustomplot.cpp	/^void QCPPolarLegendItem::draw(QCPPainter *painter)$/;"	f	class:QCPPolarLegendItem
draw	gui_sources/qcustomplot.cpp	/^void QCPSelectionRect::draw(QCPPainter *painter)$/;"	f	class:QCPSelectionRect
draw	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::draw(QCPPainter *painter)$/;"	f	class:QCPStatisticalBox
draw	gui_sources/qcustomplot.cpp	/^void QCPTextElement::draw(QCPPainter *painter)$/;"	f	class:QCPTextElement
draw	gui_sources/qcustomplot.cpp	/^void QCustomPlot::draw(QCPPainter *painter)$/;"	f	class:QCustomPlot
drawAngularGrid	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::drawAngularGrid(QCPPainter *painter, const QPointF &center, double radius, const QVector<QPointF> &ticksCosSin, const QPen &pen)$/;"	f	class:QCPPolarGrid
drawBackground	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::drawBackground(QCPPainter *painter)$/;"	f	class:QCPAxisRect
drawBackground	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::drawBackground(QCPPainter *painter, const QPointF &center, double radius)$/;"	f	class:QCPPolarAxisAngular
drawBackground	gui_sources/qcustomplot.cpp	/^void QCustomPlot::drawBackground(QCPPainter *painter)$/;"	f	class:QCustomPlot
drawBracket	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecoratorBracket::drawBracket(QCPPainter *painter, int direction) const$/;"	f	class:QCPSelectionDecoratorBracket
drawCandlestickPlot	gui_sources/qcustomplot.cpp	/^void QCPFinancial::drawCandlestickPlot(QCPPainter *painter, const QCPFinancialDataContainer::const_iterator &begin, const QCPFinancialDataContainer::const_iterator &end, bool isSelected)$/;"	f	class:QCPFinancial
drawCurveLine	gui_sources/qcustomplot.cpp	/^void QCPCurve::drawCurveLine(QCPPainter *painter, const QVector<QPointF> &lines) const$/;"	f	class:QCPCurve
drawDecoration	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecorator::drawDecoration(QCPPainter *painter, QCPDataSelection selection)$/;"	f	class:QCPSelectionDecorator
drawDecoration	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecoratorBracket::drawDecoration(QCPPainter *painter, QCPDataSelection selection)$/;"	f	class:QCPSelectionDecoratorBracket
drawFill	gui_sources/qcustomplot.cpp	/^void QCPGraph::drawFill(QCPPainter *painter, QVector<QPointF> *lines) const$/;"	f	class:QCPGraph
drawFill	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::drawFill(QCPPainter *painter, QVector<QPointF> *lines) const$/;"	f	class:QCPPolarGraph
drawGridLines	gui_sources/qcustomplot.cpp	/^void QCPGrid::drawGridLines(QCPPainter *painter) const$/;"	f	class:QCPGrid
drawImpulsePlot	gui_sources/qcustomplot.cpp	/^void QCPGraph::drawImpulsePlot(QCPPainter *painter, const QVector<QPointF> &lines) const$/;"	f	class:QCPGraph
drawLabelMaybeCached	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::drawLabelMaybeCached(QCPPainter *painter, const QFont &font, const QColor &color, const QPointF &pos, AnchorSide side, double rotation, const QString &text)$/;"	f	class:QCPLabelPainterPrivate
drawLegendIcon	gui_sources/qcustomplot.cpp	/^void QCPBars::drawLegendIcon(QCPPainter *painter, const QRectF &rect) const$/;"	f	class:QCPBars
drawLegendIcon	gui_sources/qcustomplot.cpp	/^void QCPColorMap::drawLegendIcon(QCPPainter *painter, const QRectF &rect) const$/;"	f	class:QCPColorMap
drawLegendIcon	gui_sources/qcustomplot.cpp	/^void QCPCurve::drawLegendIcon(QCPPainter *painter, const QRectF &rect) const$/;"	f	class:QCPCurve
drawLegendIcon	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::drawLegendIcon(QCPPainter *painter, const QRectF &rect) const$/;"	f	class:QCPErrorBars
drawLegendIcon	gui_sources/qcustomplot.cpp	/^void QCPFinancial::drawLegendIcon(QCPPainter *painter, const QRectF &rect) const$/;"	f	class:QCPFinancial
drawLegendIcon	gui_sources/qcustomplot.cpp	/^void QCPGraph::drawLegendIcon(QCPPainter *painter, const QRectF &rect) const$/;"	f	class:QCPGraph
drawLegendIcon	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::drawLegendIcon(QCPPainter *painter, const QRectF &rect) const$/;"	f	class:QCPPolarGraph
drawLegendIcon	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::drawLegendIcon(QCPPainter *painter, const QRectF &rect) const$/;"	f	class:QCPStatisticalBox
drawLine	gui_sources/qcustomplot.cpp	/^void QCPPainter::drawLine(const QLineF &line)$/;"	f	class:QCPPainter
drawLine	gui_sources/qcustomplot.h	/^  void drawLine(const QPointF &p1, const QPointF &p2) {drawLine(QLineF(p1, p2));}$/;"	f	class:QCPPainter
drawLinePlot	gui_sources/qcustomplot.cpp	/^void QCPGraph::drawLinePlot(QCPPainter *painter, const QVector<QPointF> &lines) const$/;"	f	class:QCPGraph
drawLinePlot	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::drawLinePlot(QCPPainter *painter, const QVector<QPointF> &lines) const$/;"	f	class:QCPPolarGraph
drawOhlcPlot	gui_sources/qcustomplot.cpp	/^void QCPFinancial::drawOhlcPlot(QCPPainter *painter, const QCPFinancialDataContainer::const_iterator &begin, const QCPFinancialDataContainer::const_iterator &end, bool isSelected)$/;"	f	class:QCPFinancial
drawPolyline	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::drawPolyline(QCPPainter *painter, const QVector<QPointF> &lineData) const$/;"	f	class:QCPPolarGraph
drawPolyline	gui_sources/qcustomplot.h	/^void QCPAbstractPlottable1D<DataType>::drawPolyline(QCPPainter *painter, const QVector<QPointF> &lineData) const$/;"	f	class:QCPAbstractPlottable1D
drawRadialGrid	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::drawRadialGrid(QCPPainter *painter, const QPointF &center, const QVector<double> &coords, const QPen &pen, const QPen &zeroPen)$/;"	f	class:QCPPolarGrid
drawScatterPlot	gui_sources/qcustomplot.cpp	/^void QCPCurve::drawScatterPlot(QCPPainter *painter, const QVector<QPointF> &points, const QCPScatterStyle &style) const$/;"	f	class:QCPCurve
drawScatterPlot	gui_sources/qcustomplot.cpp	/^void QCPGraph::drawScatterPlot(QCPPainter *painter, const QVector<QPointF> &scatters, const QCPScatterStyle &style) const$/;"	f	class:QCPGraph
drawScatterPlot	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::drawScatterPlot(QCPPainter *painter, const QVector<QPointF> &scatters, const QCPScatterStyle &style) const$/;"	f	class:QCPPolarGraph
drawShape	gui_sources/qcustomplot.cpp	/^void QCPScatterStyle::drawShape(QCPPainter *painter, const QPointF &pos) const$/;"	f	class:QCPScatterStyle
drawShape	gui_sources/qcustomplot.cpp	/^void QCPScatterStyle::drawShape(QCPPainter *painter, double x, double y) const$/;"	f	class:QCPScatterStyle
drawStatisticalBox	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::drawStatisticalBox(QCPPainter *painter, QCPStatisticalBoxDataContainer::const_iterator it, const QCPScatterStyle &outlierStyle) const$/;"	f	class:QCPStatisticalBox
drawSubGridLines	gui_sources/qcustomplot.cpp	/^void QCPGrid::drawSubGridLines(QCPPainter *painter) const$/;"	f	class:QCPGrid
drawText	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::drawText(QCPPainter *painter, const QPointF &pos, const LabelData &labelData) const$/;"	f	class:QCPLabelPainterPrivate
drawTickLabel	gui_sources/qcustomplot.cpp	/^void QCPAxisPainterPrivate::drawTickLabel(QCPPainter *painter, double x, double y, const TickLabelData &labelData) const$/;"	f	class:QCPAxisPainterPrivate
drawTickLabel	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::drawTickLabel(QCPPainter *painter, const QPointF &tickPos, const QString &text)$/;"	f	class:QCPLabelPainterPrivate
drawToPaintBuffer	gui_sources/qcustomplot.cpp	/^void QCPLayer::drawToPaintBuffer()$/;"	f	class:QCPLayer
dsNone	gui_sources/qcustomplot.h	/^  enum DateStrategy {dsNone, dsUniformTimeInDay, dsUniformDayInMonth} mDateStrategy;$/;"	e	enum:QCPAxisTickerDateTime::DateStrategy
dsUniformDayInMonth	gui_sources/qcustomplot.h	/^  enum DateStrategy {dsNone, dsUniformTimeInDay, dsUniformDayInMonth} mDateStrategy;$/;"	e	enum:QCPAxisTickerDateTime::DateStrategy
dsUniformTimeInDay	gui_sources/qcustomplot.h	/^  enum DateStrategy {dsNone, dsUniformTimeInDay, dsUniformDayInMonth} mDateStrategy;$/;"	e	enum:QCPAxisTickerDateTime::DateStrategy
dummy	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	/^   } dummy;$/;"	m	namespace:__anon4	typeref:struct:__anon4::initializer	file:
duty	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    quint16 duty = 0; $/;"	m	struct:LaserStateStruct
element	gui_sources/qcustomplot.cpp	/^QCPLayoutElement *QCPLayoutGrid::element(int row, int column) const$/;"	f	class:QCPLayoutGrid
elementAt	gui_sources/qcustomplot.cpp	/^QCPLayoutElement *QCPLayoutGrid::elementAt(int index) const$/;"	f	class:QCPLayoutGrid
elementAt	gui_sources/qcustomplot.cpp	/^QCPLayoutElement *QCPLayoutInset::elementAt(int index) const$/;"	f	class:QCPLayoutInset
elementCount	gui_sources/qcustomplot.cpp	/^int QCPLayoutInset::elementCount() const$/;"	f	class:QCPLayoutInset
elements	gui_sources/qcustomplot.cpp	/^QList<QCPLayoutElement*> QCPAxisRect::elements(bool recursive) const$/;"	f	class:QCPAxisRect
elements	gui_sources/qcustomplot.cpp	/^QList<QCPLayoutElement*> QCPLayout::elements(bool recursive) const$/;"	f	class:QCPLayout
elements	gui_sources/qcustomplot.cpp	/^QList<QCPLayoutElement*> QCPLayoutElement::elements(bool recursive) const$/;"	f	class:QCPLayoutElement
elements	gui_sources/qcustomplot.cpp	/^QList<QCPLayoutElement*> QCPLayoutGrid::elements(bool recursive) const$/;"	f	class:QCPLayoutGrid
elements	gui_sources/qcustomplot.cpp	/^QList<QCPLayoutElement*> QCPPolarAxisAngular::elements(bool recursive) const$/;"	f	class:QCPPolarAxisAngular
elements	gui_sources/qcustomplot.h	/^  QList<QCPLayoutElement*> elements(QCP::MarginSide side) const { return mChildren.value(side); }$/;"	f	class:QCPMarginGroup
enable	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    quint8  enable = 0;$/;"	m	struct:ControlCommandLaser
enable	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    quint8  enable = 0;$/;"	m	struct:LaserStateStruct
enableMove	DEVICES/device_rotary_interface.h	/^  void enableMove(bool OnOff) { if(OnOff && timerMove.isActive()) return; if(OnOff) timerMove.start(1); else timerMove.stop(); }$/;"	f	class:DynamicModule
end	gui_sources/qcustomplot.h	/^  QCPItemPosition * const end;$/;"	m	class:QCPItemCurve
end	gui_sources/qcustomplot.h	/^  QCPItemPosition * const end;$/;"	m	class:QCPItemLine
end	gui_sources/qcustomplot.h	/^  int end() const { return mEnd; }$/;"	f	class:QCPDataRange
end	gui_sources/qcustomplot.h	/^  iterator end() { return mData.end(); }$/;"	f	class:QCPDataContainer
endDir	gui_sources/qcustomplot.h	/^  QCPItemPosition * const endDir;$/;"	m	class:QCPItemCurve
endSelection	gui_sources/qcustomplot.cpp	/^void QCPSelectionRect::endSelection(QMouseEvent *event)$/;"	f	class:QCPSelectionRect
enforceType	gui_sources/qcustomplot.cpp	/^void QCPDataSelection::enforceType(QCP::SelectionType type)$/;"	f	class:QCPDataSelection
engineControlBlock	COMMON/type_block_enum.h	/^	ImageProcBlock, ChillControlBlock, WeatherControlBlock, CamerasControlBlock, AimingBlock, RecieveErrorBlock, LasersBlock, engineControlBlock, RemoteControlBlock, KLPInterfaceBlock, MainContoller, CalmanFilterBlock, PIDBlock,CoordData$/;"	e	enum:TypeEnumBlock
engineDelayMeasure	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  CANDelayMeasure* engineDelayMeasure = nullptr;$/;"	m	class:CANConnectionEngine
engineSendTest	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  CANTestMessage * engineSendTest = nullptr;$/;"	m	class:CANConnectionEngine
engine_ring_buffer_dense	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^class engine_ring_buffer_dense$/;"	c
engine_ring_buffer_dense	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^engine_ring_buffer_dense<H,S_M,N_M>::engine_ring_buffer_dense()$/;"	f	class:engine_ring_buffer_dense
epAllowCosmetic	gui_sources/qcustomplot.h	/^                 ,epAllowCosmetic \/\/\/< Cosmetic pens are exported normally (e.g. in PDF exports, cosmetic pens always appear as 1 pixel on screen, independent of viewer zoom level)$/;"	e	enum:QCP::ExportPen
epNoCosmetic	gui_sources/qcustomplot.h	/^enum ExportPen { epNoCosmetic     \/\/\/< Cosmetic pens are converted to pens with pixel width 1 when exporting$/;"	e	enum:QCP::ExportPen
error	CAMERA_INTERFACE/camera_interface_class.h	/^	GError *error = NULL;$/;"	m	class:CameraInterfaceAravis
errorBarVisible	gui_sources/qcustomplot.cpp	/^bool QCPErrorBars::errorBarVisible(int index) const$/;"	f	class:QCPErrorBars
errorMinus	gui_sources/qcustomplot.h	/^  double errorMinus, errorPlus;$/;"	m	class:QCPErrorBarsData
errorPlus	gui_sources/qcustomplot.h	/^  double errorMinus, errorPlus;$/;"	m	class:QCPErrorBarsData
errorType	gui_sources/qcustomplot.h	/^  ErrorType errorType() const { return mErrorType; }$/;"	f	class:QCPErrorBars
esBar	gui_sources/qcustomplot.h	/^                     ,esBar          \/\/\/< A bar perpendicular to the line$/;"	e	enum:QCPLineEnding::EndingStyle
esDiamond	gui_sources/qcustomplot.h	/^                     ,esDiamond      \/\/\/< A filled diamond (45 degrees rotated square)$/;"	e	enum:QCPLineEnding::EndingStyle
esDisc	gui_sources/qcustomplot.h	/^                     ,esDisc         \/\/\/< A filled circle$/;"	e	enum:QCPLineEnding::EndingStyle
esFlatArrow	gui_sources/qcustomplot.h	/^                     ,esFlatArrow    \/\/\/< A filled arrow head with a straight\/flat back (a triangle)$/;"	e	enum:QCPLineEnding::EndingStyle
esHalfBar	gui_sources/qcustomplot.h	/^                     ,esHalfBar      \/\/\/< A bar perpendicular to the line, pointing out to only one side (to which side can be changed with \\ref setInverted)$/;"	e	enum:QCPLineEnding::EndingStyle
esLineArrow	gui_sources/qcustomplot.h	/^                     ,esLineArrow    \/\/\/< A non-filled arrow head with open back$/;"	e	enum:QCPLineEnding::EndingStyle
esNone	gui_sources/qcustomplot.h	/^  enum EndingStyle { esNone          \/\/\/< No ending decoration$/;"	e	enum:QCPLineEnding::EndingStyle
esSkewedBar	gui_sources/qcustomplot.h	/^                     ,esSkewedBar    \/\/\/< A bar that is skewed (skew controllable via \\ref setLength)$/;"	e	enum:QCPLineEnding::EndingStyle
esSpikeArrow	gui_sources/qcustomplot.h	/^                     ,esSpikeArrow   \/\/\/< A filled arrow head with an indented back$/;"	e	enum:QCPLineEnding::EndingStyle
esSquare	gui_sources/qcustomplot.h	/^                     ,esSquare       \/\/\/< A filled square$/;"	e	enum:QCPLineEnding::EndingStyle
etKeyError	gui_sources/qcustomplot.h	/^  enum ErrorType { etKeyError    \/\/\/< The errors are for the key dimension (bars appear parallel to the key axis)$/;"	e	enum:QCPErrorBars::ErrorType
etValueError	gui_sources/qcustomplot.h	/^                   ,etValueError \/\/\/< The errors are for the value dimension (bars appear parallel to the value axis)$/;"	e	enum:QCPErrorBars::ErrorType
exactClipRegion	gui_sources/qcustomplot.cpp	/^QRegion QCPPolarAxisAngular::exactClipRegion() const$/;"	f	class:QCPPolarAxisAngular
expBounds	gui_sources/qcustomplot.h	/^    QRect baseBounds, expBounds, suffixBounds, totalBounds, rotatedTotalBounds;$/;"	m	struct:QCPAxisPainterPrivate::TickLabelData
expBounds	gui_sources/qcustomplot.h	/^    QRect baseBounds, expBounds, suffixBounds;$/;"	m	struct:QCPLabelPainterPrivate::LabelData
expFont	gui_sources/qcustomplot.h	/^    QFont baseFont, expFont;$/;"	m	struct:QCPAxisPainterPrivate::TickLabelData
expFont	gui_sources/qcustomplot.h	/^    QFont baseFont, expFont;$/;"	m	struct:QCPLabelPainterPrivate::LabelData
expPart	gui_sources/qcustomplot.h	/^    QString basePart, expPart, suffixPart;$/;"	m	struct:QCPAxisPainterPrivate::TickLabelData
expPart	gui_sources/qcustomplot.h	/^    QString basePart, expPart, suffixPart;$/;"	m	struct:QCPLabelPainterPrivate::LabelData
expand	gui_sources/qcustomplot.cpp	/^void QCPRange::expand(const QCPRange &otherRange)$/;"	f	class:QCPRange
expand	gui_sources/qcustomplot.cpp	/^void QCPRange::expand(double includeCoord)$/;"	f	class:QCPRange
expandTo	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::expandTo(int newRowCount, int newColumnCount)$/;"	f	class:QCPLayoutGrid
expanded	gui_sources/qcustomplot.cpp	/^QCPDataRange QCPDataRange::expanded(const QCPDataRange &other) const$/;"	f	class:QCPDataRange
expanded	gui_sources/qcustomplot.cpp	/^QCPRange QCPRange::expanded(const QCPRange &otherRange) const$/;"	f	class:QCPRange
expanded	gui_sources/qcustomplot.cpp	/^QCPRange QCPRange::expanded(double includeCoord) const$/;"	f	class:QCPRange
factory	stream_video_rtsp.h	/^  GstRTSPMediaFactory *factory= nullptr;$/;"	m	class:VideoStreamRTSP
fieldWidth	gui_sources/qcustomplot.h	/^  int fieldWidth(TimeUnit unit) const { return mFieldWidth.value(unit); }$/;"	f	class:QCPAxisTickerTime
fill	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::fill(double z)$/;"	f	class:QCPColorMapData
fillAlpha	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::fillAlpha(unsigned char alpha)$/;"	f	class:QCPColorMapData
fillOrder	gui_sources/qcustomplot.h	/^  FillOrder fillOrder() const { return mFillOrder; }$/;"	f	class:QCPLayoutGrid
filter_lr	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float filter_lr;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
find	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.cpp	/^void TrackerFirst::find(cv::Mat& image)$/;"	f	class:TrackerFirst
findBegin	gui_sources/qcustomplot.cpp	/^int QCPErrorBars::findBegin(double sortKey, bool expandedRange) const$/;"	f	class:QCPErrorBars
findBegin	gui_sources/qcustomplot.h	/^int QCPAbstractPlottable1D<DataType>::findBegin(double sortKey, bool expandedRange) const$/;"	f	class:QCPAbstractPlottable1D
findBegin	gui_sources/qcustomplot.h	/^typename QCPDataContainer<DataType>::const_iterator QCPDataContainer<DataType>::findBegin(double sortKey, bool expandedRange) const$/;"	f	class:QCPDataContainer
findEnd	gui_sources/qcustomplot.cpp	/^int QCPErrorBars::findEnd(double sortKey, bool expandedRange) const$/;"	f	class:QCPErrorBars
findEnd	gui_sources/qcustomplot.h	/^int QCPAbstractPlottable1D<DataType>::findEnd(double sortKey, bool expandedRange) const$/;"	f	class:QCPAbstractPlottable1D
findEnd	gui_sources/qcustomplot.h	/^typename QCPDataContainer<DataType>::const_iterator QCPDataContainer<DataType>::findEnd(double sortKey, bool expandedRange) const$/;"	f	class:QCPDataContainer
findIndexAboveX	gui_sources/qcustomplot.cpp	/^int QCPGraph::findIndexAboveX(const QVector<QPointF> *data, double x) const$/;"	f	class:QCPGraph
findIndexAboveY	gui_sources/qcustomplot.cpp	/^int QCPGraph::findIndexAboveY(const QVector<QPointF> *data, double y) const$/;"	f	class:QCPGraph
findIndexBelowX	gui_sources/qcustomplot.cpp	/^int QCPGraph::findIndexBelowX(const QVector<QPointF> *data, double x) const$/;"	f	class:QCPGraph
findIndexBelowY	gui_sources/qcustomplot.cpp	/^int QCPGraph::findIndexBelowY(const QVector<QPointF> *data, double y) const$/;"	f	class:QCPGraph
flag_filter_open	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	bool flag_filter_open = false;$/;"	m	class:AccumulateDataFilter
foColumnsFirst	gui_sources/qcustomplot.h	/^                  ,foColumnsFirst \/\/\/< Columns are filled first, and a new element is wrapped to the next row if the column count would exceed \\ref setWrap.$/;"	e	enum:QCPLayoutGrid::FillOrder
foRowsFirst	gui_sources/qcustomplot.h	/^  enum FillOrder { foRowsFirst    \/\/\/< Rows are filled first, and a new element is wrapped to the next column if the row count would exceed \\ref setWrap.$/;"	e	enum:QCPLayoutGrid::FillOrder
focusInEvent	gui_sources/widget_scene_node_interface.cpp	/^void WidgetSceneNodeInterface::focusInEvent(QFocusEvent *event)$/;"	f	class:WidgetSceneNodeInterface
focusOutEvent	gui_sources/widget_scene_node_interface.cpp	/^ void WidgetSceneNodeInterface::focusOutEvent(QFocusEvent *event)$/;"	f	class:WidgetSceneNodeInterface
follow	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.cpp	/^void TrackerFirst::follow(cv::Mat& image)$/;"	f	class:TrackerFirst
follow_flag	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^	bool follow_flag = false;$/;"	m	class:TrackerFirst
font	gui_sources/qcustomplot.h	/^  QFont font() const { return mFont; }$/;"	f	class:QCPAbstractLegendItem
font	gui_sources/qcustomplot.h	/^  QFont font() const { return mFont; }$/;"	f	class:QCPItemText
font	gui_sources/qcustomplot.h	/^  QFont font() const { return mFont; }$/;"	f	class:QCPLabelPainterPrivate
font	gui_sources/qcustomplot.h	/^  QFont font() const { return mFont; }$/;"	f	class:QCPLegend
font	gui_sources/qcustomplot.h	/^  QFont font() const { return mFont; }$/;"	f	class:QCPTextElement
fractionStyle	gui_sources/qcustomplot.h	/^  FractionStyle fractionStyle() const { return mFractionStyle; }$/;"	f	class:QCPAxisTickerPi
fractionToString	gui_sources/qcustomplot.cpp	/^QString QCPAxisTickerPi::fractionToString(int numerator, int denominator) const$/;"	f	class:QCPAxisTickerPi
frameOutput	stream_video_rtsp.h	/^  cv::Mat frameOutput;$/;"	m	class:VideoStreamRTSP
frameOutputScaled	stream_video_rtsp.h	/^  cv::Mat frameOutputScaled;$/;"	m	class:VideoStreamRTSP
freeOpenGl	gui_sources/qcustomplot.cpp	/^void QCustomPlot::freeOpenGl()$/;"	f	class:QCustomPlot
fromSortKey	gui_sources/qcustomplot.h	/^  inline static QCPBarsData fromSortKey(double sortKey) { return QCPBarsData(sortKey, 0); }$/;"	f	class:QCPBarsData
fromSortKey	gui_sources/qcustomplot.h	/^  inline static QCPCurveData fromSortKey(double sortKey) { return QCPCurveData(sortKey, 0, 0); }$/;"	f	class:QCPCurveData
fromSortKey	gui_sources/qcustomplot.h	/^  inline static QCPFinancialData fromSortKey(double sortKey) { return QCPFinancialData(sortKey, 0, 0, 0, 0); }$/;"	f	class:QCPFinancialData
fromSortKey	gui_sources/qcustomplot.h	/^  inline static QCPGraphData fromSortKey(double sortKey) { return QCPGraphData(sortKey, 0); }$/;"	f	class:QCPGraphData
fromSortKey	gui_sources/qcustomplot.h	/^  inline static QCPStatisticalBoxData fromSortKey(double sortKey) { return QCPStatisticalBoxData(sortKey, 0, 0, 0, 0, 0); }$/;"	f	class:QCPStatisticalBoxData
fsAsciiFractions	gui_sources/qcustomplot.h	/^                       ,fsAsciiFractions   \/\/\/< Fractions are written as rationals using ASCII characters only, e.g. "1\/4" or "1\/8"$/;"	e	enum:QCPAxisTickerPi::FractionStyle
fsFloatingPoint	gui_sources/qcustomplot.h	/^  enum FractionStyle { fsFloatingPoint     \/\/\/< Fractions are displayed as regular decimal floating point numbers, e.g. "0.25" or "0.125".$/;"	e	enum:QCPAxisTickerPi::FractionStyle
fsUnicodeFractions	gui_sources/qcustomplot.h	/^                       ,fsUnicodeFractions \/\/\/< Fractions are written using sub- and superscript UTF-8 digits and the fraction symbol.$/;"	e	enum:QCPAxisTickerPi::FractionStyle
generate	gui_sources/qcustomplot.cpp	/^void QCPAxisTicker::generate(const QCPRange &range, const QLocale &locale, QChar formatChar, int precision, QVector<double> &ticks, QVector<double> *subTicks, QVector<QString> *tickLabels)$/;"	f	class:QCPAxisTicker
generateLabelParameterHash	gui_sources/qcustomplot.cpp	/^QByteArray QCPAxisPainterPrivate::generateLabelParameterHash() const$/;"	f	class:QCPAxisPainterPrivate
generateLabelParameterHash	gui_sources/qcustomplot.cpp	/^QByteArray QCPLabelPainterPrivate::generateLabelParameterHash() const$/;"	f	class:QCPLabelPainterPrivate
getAnchorPos	gui_sources/qcustomplot.cpp	/^QPointF QCPLabelPainterPrivate::getAnchorPos(const QPointF &tickPos)$/;"	f	class:QCPLabelPainterPrivate
getAvailableFrames	COMMON/interface_image_source.h	/^    virtual int getAvailableFrames() { return 0;};$/;"	f	class:ImageSourceInterface
getBarRect	gui_sources/qcustomplot.cpp	/^QRectF QCPBars::getBarRect(double key, double value) const$/;"	f	class:QCPBars
getBasePen	gui_sources/qcustomplot.cpp	/^QPen QCPAxis::getBasePen() const$/;"	f	class:QCPAxis
getBasePen	gui_sources/qcustomplot.cpp	/^QPen QCPPolarAxisAngular::getBasePen() const$/;"	f	class:QCPPolarAxisAngular
getBasePen	gui_sources/qcustomplot.cpp	/^QPen QCPPolarAxisRadial::getBasePen() const$/;"	f	class:QCPPolarAxisRadial
getBorderPen	gui_sources/qcustomplot.cpp	/^QPen QCPLegend::getBorderPen() const$/;"	f	class:QCPLegend
getBrush	gui_sources/qcustomplot.cpp	/^QBrush QCPLegend::getBrush() const$/;"	f	class:QCPLegend
getChannelFillPolygon	gui_sources/qcustomplot.cpp	/^const QPolygonF QCPGraph::getChannelFillPolygon(const QVector<QPointF> *thisData, QCPDataRange thisSegment, const QVector<QPointF> *otherData, QCPDataRange otherSegment) const$/;"	f	class:QCPGraph
getCurveLines	gui_sources/qcustomplot.cpp	/^void QCPCurve::getCurveLines(QVector<QPointF> *lines, const QCPDataRange &dataRange, double penWidth) const$/;"	f	class:QCPCurve
getDataSegments	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::getDataSegments(QList<QCPDataRange> &selectedSegments, QList<QCPDataRange> &unselectedSegments) const$/;"	f	class:QCPErrorBars
getDataSegments	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::getDataSegments(QList<QCPDataRange> &selectedSegments, QList<QCPDataRange> &unselectedSegments) const$/;"	f	class:QCPPolarGraph
getDataSegments	gui_sources/qcustomplot.h	/^void QCPAbstractPlottable1D<DataType>::getDataSegments(QList<QCPDataRange> &selectedSegments, QList<QCPDataRange> &unselectedSegments) const$/;"	f	class:QCPAbstractPlottable1D
getErrorBarLines	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::getErrorBarLines(QCPErrorBarsDataContainer::const_iterator it, QVector<QLineF> &backbones, QVector<QLineF> &whiskers) const$/;"	f	class:QCPErrorBars
getFillBasePoint	gui_sources/qcustomplot.cpp	/^QPointF QCPGraph::getFillBasePoint(QPointF matchingDataPoint) const$/;"	f	class:QCPGraph
getFillPolygon	gui_sources/qcustomplot.cpp	/^const QPolygonF QCPGraph::getFillPolygon(const QVector<QPointF> *lineData, QCPDataRange segment) const$/;"	f	class:QCPGraph
getFinalMaximumOuterSize	gui_sources/qcustomplot.cpp	/^QSize QCPLayout::getFinalMaximumOuterSize(const QCPLayoutElement *el)$/;"	f	class:QCPLayout
getFinalMinimumOuterSize	gui_sources/qcustomplot.cpp	/^QSize QCPLayout::getFinalMinimumOuterSize(const QCPLayoutElement *el)$/;"	f	class:QCPLayout
getFinalRect	gui_sources/qcustomplot.cpp	/^QRect QCPItemPixmap::getFinalRect(bool *flippedHorz, bool *flippedVert) const$/;"	f	class:QCPItemPixmap
getFinalScatterStyle	gui_sources/qcustomplot.cpp	/^QCPScatterStyle QCPSelectionDecorator::getFinalScatterStyle(const QCPScatterStyle &unselectedStyle) const$/;"	f	class:QCPSelectionDecorator
getFont	gui_sources/qcustomplot.cpp	/^QFont QCPPlottableLegendItem::getFont() const$/;"	f	class:QCPPlottableLegendItem
getFont	gui_sources/qcustomplot.cpp	/^QFont QCPPolarLegendItem::getFont() const$/;"	f	class:QCPPolarLegendItem
getFramePeriod	CAMERA_INTERFACE/interface_camera_hik.cpp	/^std::pair<float,float> CameraInterfaceHIK::getFramePeriod() { return std::pair<float,float>(FrameMeasureInput.FramePeriod, $/;"	f	class:CameraInterfaceHIK
getFramePeriod	COMMON/interface_image_source.h	/^    virtual std::pair<float,float> getFramePeriod(){ return std::pair<float,float>(0,0);};  \/\/PERIOD GET, PERIOD PROCESS$/;"	f	class:ImageSourceInterface
getFramePeriod	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^std::pair<float,float> ModuleImageProcessing::getFramePeriod() { return std::pair<float,float>(FrameMeasureInput.FramePeriod, $/;"	f	class:ModuleImageProcessing
getIconBorderPen	gui_sources/qcustomplot.cpp	/^QPen QCPPlottableLegendItem::getIconBorderPen() const$/;"	f	class:QCPPlottableLegendItem
getIconBorderPen	gui_sources/qcustomplot.cpp	/^QPen QCPPolarLegendItem::getIconBorderPen() const$/;"	f	class:QCPPolarLegendItem
getImageDepth	COMMON/interface_image_source.h	/^    virtual               int      getImageDepth() { return CV_8UC1;};$/;"	f	class:ImageSourceInterface
getImageSize	COMMON/interface_image_source.h	/^    virtual std::pair<int,int>     getImageSize()  { return std::pair<int,int>(720,540);};$/;"	f	class:ImageSourceInterface
getImageSourceChannel	CAMERA_INTERFACE/interface_camera_hik.cpp	/^std::shared_ptr<ImageSourceInterface> CameraInterfaceHIK::getImageSourceChannel()$/;"	f	class:CameraInterfaceHIK
getImageSourceChannel	COMMON/interface_image_source.h	/^    virtual std::shared_ptr<ImageSourceInterface> getImageSourceChannel() {return std::shared_ptr<ImageSourceInterface>(this);};$/;"	f	class:ImageSourceInterface
getImageToDisplay	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^QImage& AimImageImitatorClass::getImageToDisplay() { return ImageToDisplay; }$/;"	f	class:AimImageImitatorClass
getImageToDisplay	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^void getImageToDisplay(QImage& ImageDst) { ImageDst = ImageToDisplay.copy();};$/;"	f	class:AimImageImitatorClass
getImageToDisplay	CAMERA_INTERFACE/camera_interface_class.cpp	/^QImage& CameraInterfaceAravis::getImageToDisplay() $/;"	f	class:CameraInterfaceAravis
getImageToDisplay	CAMERA_INTERFACE/interface_camera_hik.cpp	/^QImage& CameraInterfaceHIK::CameraImageStorage::getImageToDisplay() { return ImageToDisplay; }$/;"	f	class:CameraInterfaceHIK::CameraImageStorage
getImageToDisplay	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraImageStorage::getImageToDisplay(QImage& ImageDst){ ImageDst = ImageToDisplay.copy();};$/;"	f	class:CameraInterfaceHIK::CameraImageStorage
getImageToDisplay	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^QImage& ModuleImageProcessing::getImageToDisplay()$/;"	f	class:ModuleImageProcessing
getImageToDisplay	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^void ModuleImageProcessing::getImageToDisplay(QImage& ImageDst)$/;"	f	class:ModuleImageProcessing
getImageToDisplayColor	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^void AimImageImitatorClass::getImageToDisplayColor(QImage& ImageDst)$/;"	f	class:AimImageImitatorClass
getImageToProcess	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^cv::Mat& AimImageImitatorClass::getImageToProcess() { FLAG_FRAME_AVAILABLE = false; return ImageToProcess; }$/;"	f	class:AimImageImitatorClass
getImageToProcess	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^void getImageToProcess(cv::Mat& ImageDst) { ImageDst = ImageToProcess.clone();};$/;"	f	class:AimImageImitatorClass
getImageToProcess	CAMERA_INTERFACE/camera_interface_class.cpp	/^cv::Mat& CameraInterfaceAravis::getImageToProcess()                  {switchToNextFrame(); return ImageToProcess; }$/;"	f	class:CameraInterfaceAravis
getImageToProcess	CAMERA_INTERFACE/camera_interface_class.cpp	/^void     CameraInterfaceAravis::getImageToProcess(cv::Mat& ImageDst) {switchToNextFrame(); ImageDst = ImageToProcess.clone(); };$/;"	f	class:CameraInterfaceAravis
getImageToProcess	CAMERA_INTERFACE/interface_camera_hik.cpp	/^cv::Mat& CameraInterfaceHIK::CameraImageStorage::getImageToProcess()                  $/;"	f	class:CameraInterfaceHIK::CameraImageStorage
getImageToProcess	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void   CameraInterfaceHIK::CameraImageStorage::getImageToProcess(cv::Mat& ImageDst) $/;"	f	class:CameraInterfaceHIK::CameraImageStorage
getImageToProcess	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^cv::Mat& ModuleImageProcessing::getImageToProcess() { return ImageProcessing; }$/;"	f	class:ModuleImageProcessing
getImageToProcess	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^void ModuleImageProcessing::getImageToProcess(cv::Mat& ImageDst)$/;"	f	class:ModuleImageProcessing
getInfo	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^QString& AimImageImitatorClass::getInfo()  { return INFO_STRING; }$/;"	f	class:AimImageImitatorClass
getInfo	CAMERA_INTERFACE/camera_interface_class.cpp	/^QString& CameraInterfaceAravis::getInfo()  { return CAMERA_INFO; }$/;"	f	class:CameraInterfaceAravis
getInfo	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^QString& ModuleImageProcessing::getInfo()  { return ProcessInfo; }$/;"	f	class:ModuleImageProcessing
getKeyRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPBars::getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain) const$/;"	f	class:QCPBars
getKeyRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPColorMap::getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain) const$/;"	f	class:QCPColorMap
getKeyRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPCurve::getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain) const$/;"	f	class:QCPCurve
getKeyRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPErrorBars::getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain) const$/;"	f	class:QCPErrorBars
getKeyRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPFinancial::getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain) const$/;"	f	class:QCPFinancial
getKeyRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPGraph::getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain) const$/;"	f	class:QCPGraph
getKeyRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPPolarGraph::getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain) const$/;"	f	class:QCPPolarGraph
getKeyRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPStatisticalBox::getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain) const$/;"	f	class:QCPStatisticalBox
getLabelColor	gui_sources/qcustomplot.cpp	/^QColor QCPAxis::getLabelColor() const$/;"	f	class:QCPAxis
getLabelColor	gui_sources/qcustomplot.cpp	/^QColor QCPPolarAxisAngular::getLabelColor() const$/;"	f	class:QCPPolarAxisAngular
getLabelColor	gui_sources/qcustomplot.cpp	/^QColor QCPPolarAxisRadial::getLabelColor() const$/;"	f	class:QCPPolarAxisRadial
getLabelFont	gui_sources/qcustomplot.cpp	/^QFont QCPAxis::getLabelFont() const$/;"	f	class:QCPAxis
getLabelFont	gui_sources/qcustomplot.cpp	/^QFont QCPPolarAxisAngular::getLabelFont() const$/;"	f	class:QCPPolarAxisAngular
getLabelFont	gui_sources/qcustomplot.cpp	/^QFont QCPPolarAxisRadial::getLabelFont() const$/;"	f	class:QCPPolarAxisRadial
getLimits	DEVICES/device_rotary_interface.h	/^QPair<int,int> DeviceRotaryInterface<T_CONNECTION,T_COMMAND,T_MESSAGE>::getLimits(int axis)$/;"	f	class:DeviceRotaryInterface
getLines	gui_sources/qcustomplot.cpp	/^void QCPGraph::getLines(QVector<QPointF> *lines, const QCPDataRange &dataRange) const$/;"	f	class:QCPGraph
getLines	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::getLines(QVector<QPointF> *lines, const QCPDataRange &dataRange) const$/;"	f	class:QCPPolarGraph
getMantissa	gui_sources/qcustomplot.cpp	/^double QCPAxisTicker::getMantissa(double input, double *magnitude) const$/;"	f	class:QCPAxisTicker
getMarginValue	gui_sources/qcustomplot.h	/^inline int getMarginValue(const QMargins &margins, QCP::MarginSide side)$/;"	f	namespace:QCP
getMaxTickLabelSize	gui_sources/qcustomplot.cpp	/^void QCPAxisPainterPrivate::getMaxTickLabelSize(const QFont &font, const QString &text,  QSize *tickLabelsSize) const$/;"	f	class:QCPAxisPainterPrivate
getMaximumRowColSizes	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::getMaximumRowColSizes(QVector<int> *maxColWidths, QVector<int> *maxRowHeights) const$/;"	f	class:QCPLayoutGrid
getMinimumRowColSizes	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::getMinimumRowColSizes(QVector<int> *minColWidths, QVector<int> *minRowHeights) const$/;"	f	class:QCPLayoutGrid
getNonNanSegments	gui_sources/qcustomplot.cpp	/^QVector<QCPDataRange> QCPGraph::getNonNanSegments(const QVector<QPointF> *lineData, Qt::Orientation keyOrientation) const$/;"	f	class:QCPGraph
getOptimizedCornerPoints	gui_sources/qcustomplot.cpp	/^QVector<QPointF> QCPCurve::getOptimizedCornerPoints(int prevRegion, int currentRegion, double prevKey, double prevValue, double key, double value, double keyMin, double valueMax, double keyMax, double valueMin) const$/;"	f	class:QCPCurve
getOptimizedLineData	gui_sources/qcustomplot.cpp	/^void QCPGraph::getOptimizedLineData(QVector<QCPGraphData> *lineData, const QCPGraphDataContainer::const_iterator &begin, const QCPGraphDataContainer::const_iterator &end) const$/;"	f	class:QCPGraph
getOptimizedLineData	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::getOptimizedLineData(QVector<QCPGraphData> *lineData, const QCPGraphDataContainer::const_iterator &begin, const QCPGraphDataContainer::const_iterator &end) const$/;"	f	class:QCPPolarGraph
getOptimizedPoint	gui_sources/qcustomplot.cpp	/^QPointF QCPCurve::getOptimizedPoint(int otherRegion, double otherKey, double otherValue, double key, double value, double keyMin, double valueMax, double keyMax, double valueMin) const$/;"	f	class:QCPCurve
getOptimizedScatterData	gui_sources/qcustomplot.cpp	/^void QCPGraph::getOptimizedScatterData(QVector<QCPGraphData> *scatterData, QCPGraphDataContainer::const_iterator begin, QCPGraphDataContainer::const_iterator end) const$/;"	f	class:QCPGraph
getOptimizedScatterData	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::getOptimizedScatterData(QVector<QCPGraphData> *scatterData, QCPGraphDataContainer::const_iterator begin, QCPGraphDataContainer::const_iterator end) const$/;"	f	class:QCPPolarGraph
getOutput	AIMING_MODULES/aiming_class.cpp	/^const QPair<float,float>& AimingClass::getOutput() { return this->VectorOutput; }$/;"	f	class:AimingClass
getOutput	AIMING_MODULES/aiming_class.h	/^  const QPair<float,float>& getOutput() { return CurrentStatistic.NodeCoord.GetDispersionCoord(); }$/;"	f	class:AimingParamOptimizator
getOutput	AIMING_MODULES/pid_class.cpp	/^const QPair<float,float>& PIDClass::getOutput()                 { return PIDControlOutput; }$/;"	f	class:PIDClass
getOutput	AIMING_MODULES/rotate_vector_class.h	/^const QPair<T, T>& RotateVectorClass<T>::getOutput() $/;"	f	class:RotateVectorClass
getOutput	AIM_IMAGE_IMITATION/sinus_generator_class.h	/^	const QPair<float,float>& getOutput() { return CurrentOutput;};$/;"	f	class:SinusGeneratorClass
getOutput	COMMON/interface_pass_coord.h	/^	virtual const QPair<V, V>& getOutput() { return OutputCoord;};$/;"	f	class:PassCoordClass
getOutput	COMMON/interface_pass_coord.h	/^    const QPair<float,float>& getOutput() { if(OutputFunction != nullptr) PassCoordClass<float>::OutputCoord = OutputFunction(*Receiver); $/;"	f	class:PortAdapter
getOutput	DEVICES/device_generic_interface.h	/^	const QPair<float, float>& getOutput() {OutputCoord = getPos(); return PassCoordClass<float>::OutputCoord;};$/;"	f	class:DeviceRotaryGenericInterface
getOutput	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^const QPair<float,float>& AccumulateDataFilter::getOutput() { return LastInputFirst; }$/;"	f	class:AccumulateDataFilter
getOutput	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^const QPair<float,float>& RotateOperationContainer::getOutput()$/;"	f	class:RotateOperationContainer
getOutput	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	/^	 const QPair<float,float>& getOutput()$/;"	f	class:Substract
getOutput	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	/^	 const QPair<float,float>& getOutput()$/;"	f	class:SummVec
getOutput	UTILITES/engine_statistics.h	/^	const QPair<T,T>& getOutput() { return CoordAvarage;};$/;"	f	class:StatisticCoord
getOutput	UTILITES/thread_operation_nodes.h	/^  T getOutput() $/;"	f	class:ValueStorage
getOutput	UTILITES/thread_operation_nodes.h	/^  const QPair<T,T>& getOutput() { return PassCoordClass<T>::OutputCoord;}$/;"	f	class:CoordAvarageGlidingNode
getOutput	UTILITES/thread_operation_nodes.h	/^  const QPair<T,T>& getOutput() { return PassCoordClass<T>::OutputCoord;}$/;"	f	class:CoordAvaragePeriodicNode
getOutput	UTILITES/thread_operation_nodes.h	/^  const QPair<T,T>& getOutput() { return PassCoordClass<T>::OutputCoord;}$/;"	f	class:CoordDetector
getOutput	UTILITES/thread_operation_nodes.h	/^  const QPair<T,T>& getOutput() { return PassCoordClass<T>::OutputCoord;}$/;"	f	class:CoordPassEnd
getOutput	UTILITES/thread_operation_nodes.h	/^  const QPair<T,T>& getOutput() { return PassCoordClass<T>::OutputCoord;}$/;"	f	class:CoordPassShutter
getOutput	UTILITES/thread_operation_nodes.h	/^  const QPair<T,T>& getOutput() { return PassCoordClass<T>::OutputCoord;}$/;"	f	class:CoordPassWaitNode
getOutput	UTILITES/thread_operation_nodes.h	/^  const QPair<T,T>& getOutput() { return PassCoordClass<T>::OutputCoord;}$/;"	f	class:CoordPopByInputNode
getOutput	UTILITES/thread_operation_nodes.h	/^  const QPair<T,T>& getOutput() { return PassCoordClass<T>::OutputCoord;}$/;"	f	class:CoordStorage
getOutput	UTILITES/transform_coord_class.cpp	/^const QPair<float,float>& TransformCoordClass::getOutput() { return TransformedCoord; }$/;"	f	class:TransformCoordClass
getOutput	UTILITES/transform_coord_class.h	/^    const QPair<float,float>& getOutput() { return Output; }$/;"	f	class:TransformCoordClass
getOutputVector	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^std::vector<float> RotateOperationContainer::getOutputVector() $/;"	f	class:RotateOperationContainer
getOverlappingSegments	gui_sources/qcustomplot.cpp	/^QVector<QPair<QCPDataRange, QCPDataRange> > QCPGraph::getOverlappingSegments(QVector<QCPDataRange> thisSegments, const QVector<QPointF> *thisData, QVector<QCPDataRange> otherSegments, const QVector<QPointF> *otherData) const$/;"	f	class:QCPGraph
getPartAt	gui_sources/qcustomplot.cpp	/^QCPAxis::SelectablePart QCPAxis::getPartAt(const QPointF &pos) const$/;"	f	class:QCPAxis
getPartAt	gui_sources/qcustomplot.cpp	/^QCPPolarAxisAngular::SelectablePart QCPPolarAxisAngular::getPartAt(const QPointF &pos) const$/;"	f	class:QCPPolarAxisAngular
getPartAt	gui_sources/qcustomplot.cpp	/^QCPPolarAxisRadial::SelectablePart QCPPolarAxisRadial::getPartAt(const QPointF &pos) const$/;"	f	class:QCPPolarAxisRadial
getPixelCoordinates	gui_sources/qcustomplot.cpp	/^QPointF QCPSelectionDecoratorBracket::getPixelCoordinates(const QCPPlottableInterface1D *interface1d, int dataIndex) const$/;"	f	class:QCPSelectionDecoratorBracket
getPixelSpacing	gui_sources/qcustomplot.cpp	/^double QCPBarsGroup::getPixelSpacing(const QCPBars *bars, double keyCoord)$/;"	f	class:QCPBarsGroup
getPixelWidth	gui_sources/qcustomplot.cpp	/^double QCPFinancial::getPixelWidth(double key, double keyPixel) const$/;"	f	class:QCPFinancial
getPixelWidth	gui_sources/qcustomplot.cpp	/^void QCPBars::getPixelWidth(double key, double &lower, double &upper) const$/;"	f	class:QCPBars
getPoints	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^std::vector<QPair<int,int>>& AimImageImitatorClass::getPoints()  $/;"	f	class:AimImageImitatorClass
getPoints	CAMERA_INTERFACE/camera_interface_class.cpp	/^std::vector<QPair<int,int>>& CameraInterfaceAravis::getPoints()  $/;"	f	class:CameraInterfaceAravis
getPoints	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^std::vector<QPair<int,int>>& ModuleImageProcessing::getPoints()  $/;"	f	class:ModuleImageProcessing
getPos	DEVICES/device_rotary_interface.h	/^	const QPair<int,int>& getPos()      { return Position;} ;$/;"	f	class:DeviceRotaryInterface
getQuartileBox	gui_sources/qcustomplot.cpp	/^QRectF QCPStatisticalBox::getQuartileBox(QCPStatisticalBoxDataContainer::const_iterator it) const$/;"	f	class:QCPStatisticalBox
getRectClippedLine	gui_sources/qcustomplot.cpp	/^QLineF QCPItemLine::getRectClippedLine(const QCPVector2D &start, const QCPVector2D &end, const QRect &rect) const$/;"	f	class:QCPItemLine
getRectClippedStraightLine	gui_sources/qcustomplot.cpp	/^QLineF QCPItemStraightLine::getRectClippedStraightLine(const QCPVector2D &base, const QCPVector2D &vec, const QRect &rect) const$/;"	f	class:QCPItemStraightLine
getRects	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^std::vector<QRect>& AimImageImitatorClass::getRects()  $/;"	f	class:AimImageImitatorClass
getRects	CAMERA_INTERFACE/camera_interface_class.cpp	/^std::vector<QRect>& CameraInterfaceAravis::getRects()  $/;"	f	class:CameraInterfaceAravis
getRects	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^std::vector<QRect>& ModuleImageProcessing::getRects()  $/;"	f	class:ModuleImageProcessing
getRegion	gui_sources/qcustomplot.cpp	/^int QCPCurve::getRegion(double key, double value, double keyMin, double valueMax, double keyMax, double valueMin) const$/;"	f	class:QCPCurve
getScatters	gui_sources/qcustomplot.cpp	/^void QCPCurve::getScatters(QVector<QPointF> *scatters, const QCPDataRange &dataRange, double scatterWidth) const$/;"	f	class:QCPCurve
getScatters	gui_sources/qcustomplot.cpp	/^void QCPGraph::getScatters(QVector<QPointF> *scatters, const QCPDataRange &dataRange) const$/;"	f	class:QCPGraph
getScatters	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::getScatters(QVector<QPointF> *scatters, const QCPDataRange &dataRange) const$/;"	f	class:QCPPolarGraph
getSectionSizes	gui_sources/qcustomplot.cpp	/^QVector<int> QCPLayout::getSectionSizes(QVector<int> maxSizes, QVector<int> minSizes, QVector<double> stretchFactors, int totalSize) const$/;"	f	class:QCPLayout
getStackedBaseValue	gui_sources/qcustomplot.cpp	/^double QCPBars::getStackedBaseValue(double key, bool positive) const$/;"	f	class:QCPBars
getState	DEVICES/device_laser_interface.h	/^	bool getState() { return messageState.Param1 == 0 ? false : true; }$/;"	f	class:DeviceLaserInterface
getSubTickCount	gui_sources/qcustomplot.cpp	/^int QCPAxisTicker::getSubTickCount(double tickStep)$/;"	f	class:QCPAxisTicker
getSubTickCount	gui_sources/qcustomplot.cpp	/^int QCPAxisTickerDateTime::getSubTickCount(double tickStep)$/;"	f	class:QCPAxisTickerDateTime
getSubTickCount	gui_sources/qcustomplot.cpp	/^int QCPAxisTickerLog::getSubTickCount(double tickStep)$/;"	f	class:QCPAxisTickerLog
getSubTickCount	gui_sources/qcustomplot.cpp	/^int QCPAxisTickerPi::getSubTickCount(double tickStep)$/;"	f	class:QCPAxisTickerPi
getSubTickCount	gui_sources/qcustomplot.cpp	/^int QCPAxisTickerText::getSubTickCount(double tickStep)$/;"	f	class:QCPAxisTickerText
getSubTickCount	gui_sources/qcustomplot.cpp	/^int QCPAxisTickerTime::getSubTickCount(double tickStep)$/;"	f	class:QCPAxisTickerTime
getSubTickPen	gui_sources/qcustomplot.cpp	/^QPen QCPAxis::getSubTickPen() const$/;"	f	class:QCPAxis
getSubTickPen	gui_sources/qcustomplot.cpp	/^QPen QCPPolarAxisAngular::getSubTickPen() const$/;"	f	class:QCPPolarAxisAngular
getSubTickPen	gui_sources/qcustomplot.cpp	/^QPen QCPPolarAxisRadial::getSubTickPen() const$/;"	f	class:QCPPolarAxisRadial
getTangentAngle	gui_sources/qcustomplot.cpp	/^double QCPSelectionDecoratorBracket::getTangentAngle(const QCPPlottableInterface1D *interface1d, int dataIndex, int direction) const$/;"	f	class:QCPSelectionDecoratorBracket
getTextColor	gui_sources/qcustomplot.cpp	/^QColor QCPPlottableLegendItem::getTextColor() const$/;"	f	class:QCPPlottableLegendItem
getTextColor	gui_sources/qcustomplot.cpp	/^QColor QCPPolarLegendItem::getTextColor() const$/;"	f	class:QCPPolarLegendItem
getTextDrawPoint	gui_sources/qcustomplot.cpp	/^QPointF QCPItemText::getTextDrawPoint(const QPointF &pos, const QRectF &rect, Qt::Alignment positionAlignment) const$/;"	f	class:QCPItemText
getTickLabel	gui_sources/qcustomplot.cpp	/^QString QCPAxisTicker::getTickLabel(double tick, const QLocale &locale, QChar formatChar, int precision)$/;"	f	class:QCPAxisTicker
getTickLabel	gui_sources/qcustomplot.cpp	/^QString QCPAxisTickerDateTime::getTickLabel(double tick, const QLocale &locale, QChar formatChar, int precision)$/;"	f	class:QCPAxisTickerDateTime
getTickLabel	gui_sources/qcustomplot.cpp	/^QString QCPAxisTickerPi::getTickLabel(double tick, const QLocale &locale, QChar formatChar, int precision)$/;"	f	class:QCPAxisTickerPi
getTickLabel	gui_sources/qcustomplot.cpp	/^QString QCPAxisTickerText::getTickLabel(double tick, const QLocale &locale, QChar formatChar, int precision)$/;"	f	class:QCPAxisTickerText
getTickLabel	gui_sources/qcustomplot.cpp	/^QString QCPAxisTickerTime::getTickLabel(double tick, const QLocale &locale, QChar formatChar, int precision)$/;"	f	class:QCPAxisTickerTime
getTickLabelColor	gui_sources/qcustomplot.cpp	/^QColor QCPAxis::getTickLabelColor() const$/;"	f	class:QCPAxis
getTickLabelColor	gui_sources/qcustomplot.cpp	/^QColor QCPPolarAxisAngular::getTickLabelColor() const$/;"	f	class:QCPPolarAxisAngular
getTickLabelColor	gui_sources/qcustomplot.cpp	/^QColor QCPPolarAxisRadial::getTickLabelColor() const$/;"	f	class:QCPPolarAxisRadial
getTickLabelData	gui_sources/qcustomplot.cpp	/^QCPAxisPainterPrivate::TickLabelData QCPAxisPainterPrivate::getTickLabelData(const QFont &font, const QString &text) const$/;"	f	class:QCPAxisPainterPrivate
getTickLabelData	gui_sources/qcustomplot.cpp	/^QCPLabelPainterPrivate::LabelData QCPLabelPainterPrivate::getTickLabelData(const QFont &font, const QColor &color, double rotation, AnchorSide side, const QString &text) const$/;"	f	class:QCPLabelPainterPrivate
getTickLabelDrawOffset	gui_sources/qcustomplot.cpp	/^QPointF QCPAxisPainterPrivate::getTickLabelDrawOffset(const TickLabelData &labelData) const$/;"	f	class:QCPAxisPainterPrivate
getTickLabelFont	gui_sources/qcustomplot.cpp	/^QFont QCPAxis::getTickLabelFont() const$/;"	f	class:QCPAxis
getTickLabelFont	gui_sources/qcustomplot.cpp	/^QFont QCPPolarAxisAngular::getTickLabelFont() const$/;"	f	class:QCPPolarAxisAngular
getTickLabelFont	gui_sources/qcustomplot.cpp	/^QFont QCPPolarAxisRadial::getTickLabelFont() const$/;"	f	class:QCPPolarAxisRadial
getTickPen	gui_sources/qcustomplot.cpp	/^QPen QCPAxis::getTickPen() const$/;"	f	class:QCPAxis
getTickPen	gui_sources/qcustomplot.cpp	/^QPen QCPPolarAxisAngular::getTickPen() const$/;"	f	class:QCPPolarAxisAngular
getTickPen	gui_sources/qcustomplot.cpp	/^QPen QCPPolarAxisRadial::getTickPen() const$/;"	f	class:QCPPolarAxisRadial
getTickStep	gui_sources/qcustomplot.cpp	/^double QCPAxisTicker::getTickStep(const QCPRange &range)$/;"	f	class:QCPAxisTicker
getTickStep	gui_sources/qcustomplot.cpp	/^double QCPAxisTickerDateTime::getTickStep(const QCPRange &range)$/;"	f	class:QCPAxisTickerDateTime
getTickStep	gui_sources/qcustomplot.cpp	/^double QCPAxisTickerFixed::getTickStep(const QCPRange &range)$/;"	f	class:QCPAxisTickerFixed
getTickStep	gui_sources/qcustomplot.cpp	/^double QCPAxisTickerPi::getTickStep(const QCPRange &range)$/;"	f	class:QCPAxisTickerPi
getTickStep	gui_sources/qcustomplot.cpp	/^double QCPAxisTickerText::getTickStep(const QCPRange &range)$/;"	f	class:QCPAxisTickerText
getTickStep	gui_sources/qcustomplot.cpp	/^double QCPAxisTickerTime::getTickStep(const QCPRange &range)$/;"	f	class:QCPAxisTickerTime
getTraverse	gui_sources/qcustomplot.cpp	/^bool QCPCurve::getTraverse(double prevKey, double prevValue, double key, double value, double keyMin, double valueMax, double keyMax, double valueMin, QPointF &crossA, QPointF &crossB) const$/;"	f	class:QCPCurve
getTraverseCornerPoints	gui_sources/qcustomplot.cpp	/^void QCPCurve::getTraverseCornerPoints(int prevRegion, int currentRegion, double keyMin, double valueMax, double keyMax, double valueMin, QVector<QPointF> &beforeTraverse, QVector<QPointF> &afterTraverse) const$/;"	f	class:QCPCurve
getValueRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPBars::getValueRange(bool &foundRange, QCP::SignDomain inSignDomain, const QCPRange &inKeyRange) const$/;"	f	class:QCPBars
getValueRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPColorMap::getValueRange(bool &foundRange, QCP::SignDomain inSignDomain, const QCPRange &inKeyRange) const$/;"	f	class:QCPColorMap
getValueRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPCurve::getValueRange(bool &foundRange, QCP::SignDomain inSignDomain, const QCPRange &inKeyRange) const$/;"	f	class:QCPCurve
getValueRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPErrorBars::getValueRange(bool &foundRange, QCP::SignDomain inSignDomain, const QCPRange &inKeyRange) const$/;"	f	class:QCPErrorBars
getValueRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPFinancial::getValueRange(bool &foundRange, QCP::SignDomain inSignDomain, const QCPRange &inKeyRange) const$/;"	f	class:QCPFinancial
getValueRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPGraph::getValueRange(bool &foundRange, QCP::SignDomain inSignDomain, const QCPRange &inKeyRange) const$/;"	f	class:QCPGraph
getValueRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPPolarGraph::getValueRange(bool &foundRange, QCP::SignDomain inSignDomain, const QCPRange &inKeyRange) const$/;"	f	class:QCPPolarGraph
getValueRange	gui_sources/qcustomplot.cpp	/^QCPRange QCPStatisticalBox::getValueRange(bool &foundRange, QCP::SignDomain inSignDomain, const QCPRange &inKeyRange) const$/;"	f	class:QCPStatisticalBox
getVelocity	DEVICES/device_rotary_interface.h	/^	const QPair<int,int>& getVelocity() { return Velocity;};$/;"	f	class:DeviceRotaryInterface
getVisibleDataBounds	gui_sources/qcustomplot.cpp	/^void QCPBars::getVisibleDataBounds(QCPBarsDataContainer::const_iterator &begin, QCPBarsDataContainer::const_iterator &end) const$/;"	f	class:QCPBars
getVisibleDataBounds	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::getVisibleDataBounds(QCPErrorBarsDataContainer::const_iterator &begin, QCPErrorBarsDataContainer::const_iterator &end, const QCPDataRange &rangeRestriction) const$/;"	f	class:QCPErrorBars
getVisibleDataBounds	gui_sources/qcustomplot.cpp	/^void QCPFinancial::getVisibleDataBounds(QCPFinancialDataContainer::const_iterator &begin, QCPFinancialDataContainer::const_iterator &end) const$/;"	f	class:QCPFinancial
getVisibleDataBounds	gui_sources/qcustomplot.cpp	/^void QCPGraph::getVisibleDataBounds(QCPGraphDataContainer::const_iterator &begin, QCPGraphDataContainer::const_iterator &end, const QCPDataRange &rangeRestriction) const$/;"	f	class:QCPGraph
getVisibleDataBounds	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::getVisibleDataBounds(QCPGraphDataContainer::const_iterator &begin, QCPGraphDataContainer::const_iterator &end, const QCPDataRange &rangeRestriction) const$/;"	f	class:QCPPolarGraph
getVisibleDataBounds	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::getVisibleDataBounds(QCPStatisticalBoxDataContainer::const_iterator &begin, QCPStatisticalBoxDataContainer::const_iterator &end) const$/;"	f	class:QCPStatisticalBox
getWhiskerBackboneLines	gui_sources/qcustomplot.cpp	/^QVector<QLineF> QCPStatisticalBox::getWhiskerBackboneLines(QCPStatisticalBoxDataContainer::const_iterator it) const$/;"	f	class:QCPStatisticalBox
getWhiskerBarLines	gui_sources/qcustomplot.cpp	/^QVector<QLineF> QCPStatisticalBox::getWhiskerBarLines(QCPStatisticalBoxDataContainer::const_iterator it) const$/;"	f	class:QCPStatisticalBox
gpCandy	gui_sources/qcustomplot.h	/^                        ,gpCandy     \/\/\/< Blue over pink to white$/;"	e	enum:QCPColorGradient::GradientPreset
gpCold	gui_sources/qcustomplot.h	/^                        ,gpCold      \/\/\/< Continuous lightness from black over icey colors to white (suited for non-biased data representation)$/;"	e	enum:QCPColorGradient::GradientPreset
gpGeography	gui_sources/qcustomplot.h	/^                        ,gpGeography \/\/\/< Colors suitable to represent different elevations on geographical maps$/;"	e	enum:QCPColorGradient::GradientPreset
gpGrayscale	gui_sources/qcustomplot.h	/^  enum GradientPreset { gpGrayscale  \/\/\/< Continuous lightness from black to white (suited for non-biased data representation)$/;"	e	enum:QCPColorGradient::GradientPreset
gpHot	gui_sources/qcustomplot.h	/^                        ,gpHot       \/\/\/< Continuous lightness from black over firey colors to white (suited for non-biased data representation)$/;"	e	enum:QCPColorGradient::GradientPreset
gpHues	gui_sources/qcustomplot.h	/^                        ,gpHues      \/\/\/< Full hue cycle, with highest and lowest color red (suitable for periodic data, such as angles and phases, see \\ref setPeriodic)$/;"	e	enum:QCPColorGradient::GradientPreset
gpIon	gui_sources/qcustomplot.h	/^                        ,gpIon       \/\/\/< Half hue spectrum from black over purple to blue and finally green (creates banding illusion but allows more precise magnitude estimates)$/;"	e	enum:QCPColorGradient::GradientPreset
gpJet	gui_sources/qcustomplot.h	/^                        ,gpJet       \/\/\/< Hue variation similar to a spectrum, often used in numerical visualization (creates banding illusion but allows more precise magnitude estimates)$/;"	e	enum:QCPColorGradient::GradientPreset
gpNight	gui_sources/qcustomplot.h	/^                        ,gpNight     \/\/\/< Continuous lightness from black over weak blueish colors to white (suited for non-biased data representation)$/;"	e	enum:QCPColorGradient::GradientPreset
gpPolar	gui_sources/qcustomplot.h	/^                        ,gpPolar     \/\/\/< Colors suitable to emphasize polarity around the center, with blue for negative, black in the middle and red for positive values$/;"	e	enum:QCPColorGradient::GradientPreset
gpSpectrum	gui_sources/qcustomplot.h	/^                        ,gpSpectrum  \/\/\/< An approximation of the visible light spectrum (creates banding illusion but allows more precise magnitude estimates)$/;"	e	enum:QCPColorGradient::GradientPreset
gpThermal	gui_sources/qcustomplot.h	/^                        ,gpThermal   \/\/\/< Colors suitable for thermal imaging, ranging from dark blue over purple to orange, yellow and white$/;"	e	enum:QCPColorGradient::GradientPreset
grabFramesProcess	stream_video_rtsp.cpp	/^void VideoStreamRTSP::grabFramesProcess()$/;"	f	class:VideoStreamRTSP
gradient	gui_sources/qcustomplot.h	/^  QCPColorGradient gradient() const { return mGradient; }$/;"	f	class:QCPColorMap
gradient	gui_sources/qcustomplot.h	/^  QCPColorGradient gradient() const { return mGradient; }$/;"	f	class:QCPColorScale
gradientChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPColorMap::gradientChanged(const QCPColorGradient & _t1)$/;"	f	class:QCPColorMap
gradientChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPColorScale::gradientChanged(const QCPColorGradient & _t1)$/;"	f	class:QCPColorScale
graph	gui_sources/qcustomplot.cpp	/^QCPGraph *QCustomPlot::graph() const$/;"	f	class:QCustomPlot
graph	gui_sources/qcustomplot.cpp	/^QCPGraph *QCustomPlot::graph(int index) const$/;"	f	class:QCustomPlot
graph	gui_sources/qcustomplot.h	/^  QCPGraph *graph() const { return mGraph; }$/;"	f	class:QCPItemTracer
graphCount	gui_sources/qcustomplot.cpp	/^int QCustomPlot::graphCount() const$/;"	f	class:QCustomPlot
graphKey	gui_sources/qcustomplot.h	/^  double graphKey() const { return mGraphKey; }$/;"	f	class:QCPItemTracer
graphicsView	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QGraphicsView *graphicsView;$/;"	m	class:Ui_WidgetMainWindow
graphs	gui_sources/qcustomplot.cpp	/^QList<QCPGraph*> QCPAxis::graphs() const$/;"	f	class:QCPAxis
graphs	gui_sources/qcustomplot.cpp	/^QList<QCPGraph*> QCPAxisRect::graphs() const$/;"	f	class:QCPAxisRect
grid	gui_sources/qcustomplot.h	/^  QCPGrid *grid() const { return mGrid; }$/;"	f	class:QCPAxis
grid	gui_sources/qcustomplot.h	/^  QCPPolarGrid *grid() const { return mGrid; }$/;"	f	class:QCPPolarAxisAngular
gridLayout	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_WidgetAimingControl
gridLayout	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_WidgetCameraControl
gridLayout	build/ImageProcProject_autogen/include/ui_widget_container_group.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_WidgetContainerGroup
gridLayout	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_WidgetImageImitator
gridLayout	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_WidgetMainWindow
gridLayout	build/ImageProcProject_autogen/include/ui_widget_output_image_display.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_WidgetOutputImageDisplay
gridLayout	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_WidgetProcessController
gridLayout	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_WidgetProcessingImageControl
gridLayout	build/ImageProcProject_autogen/include/ui_widget_processing_image_generic.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_WidgetProcessingImage
gridLayout	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_WidgetSinusSource
gridLayout	build/ImageProcProject_autogen/include/ui_widget_table_group.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_WidgetTableGroup
gridLayout_2	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_WidgetAimingControl
gridLayout_2	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_WidgetImageImitator
gridLayout_2	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_WidgetSinusSource
gridLayout_3	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    QGridLayout *gridLayout_3;$/;"	m	class:Ui_WidgetImageImitator
gridLayout_5	build/ImageProcProject_autogen/include/ui_widget_output_text_display.h	/^    QGridLayout *gridLayout_5;$/;"	m	class:Ui_OutputTextDisplay
groupBox	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_WidgetAimingControl
groupBox	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_WidgetCameraControl
groupBox	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_WidgetImageImitator
groupBox	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_WidgetProcessController
groupBox	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_WidgetSinusSource
groupBox_2	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    QGroupBox *groupBox_2;$/;"	m	class:Ui_WidgetImageImitator
groupBox_2	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    QGroupBox *groupBox_2;$/;"	m	class:Ui_WidgetSinusSource
gsl_sigma	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float gsl_sigma;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
gtAll	gui_sources/qcustomplot.h	/^                  ,gtAll    = 0xFF \/\/\/< $/;"	e	enum:QCPPolarGrid::GridType
gtAngular	gui_sources/qcustomplot.h	/^  enum GridType { gtAngular = 0x01 \/\/\/< $/;"	e	enum:QCPPolarGrid::GridType
gtNone	gui_sources/qcustomplot.h	/^                  ,gtNone   = 0x00 \/\/\/< $/;"	e	enum:QCPPolarGrid::GridType
gtRadial	gui_sources/qcustomplot.h	/^                  ,gtRadial = 0x02 \/\/\/< $/;"	e	enum:QCPPolarGrid::GridType
handle	CAMERA_INTERFACE/interface_camera_hik.h	/^  void* handle = NULL;$/;"	m	class:CameraInterfaceHIK
hasAnchor	gui_sources/qcustomplot.cpp	/^bool QCPAbstractItem::hasAnchor(const QString &name) const$/;"	f	class:QCPAbstractItem
hasElement	gui_sources/qcustomplot.cpp	/^bool QCPLayoutGrid::hasElement(int row, int column)$/;"	f	class:QCPLayoutGrid
hasInvalidatedPaintBuffers	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::hasInvalidatedPaintBuffers()$/;"	f	class:QCustomPlot
hasItem	gui_sources/qcustomplot.cpp	/^bool QCPLegend::hasItem(QCPAbstractLegendItem *item) const$/;"	f	class:QCPLegend
hasItem	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::hasItem(QCPAbstractItem *item) const$/;"	f	class:QCustomPlot
hasItemWithPlottable	gui_sources/qcustomplot.cpp	/^bool QCPLegend::hasItemWithPlottable(const QCPAbstractPlottable *plottable) const$/;"	f	class:QCPLegend
hasPlottable	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::hasPlottable(QCPAbstractPlottable *plottable) const$/;"	f	class:QCustomPlot
head	gui_sources/qcustomplot.h	/^  QCPLineEnding head() const { return mHead; }$/;"	f	class:QCPItemCurve
head	gui_sources/qcustomplot.h	/^  QCPLineEnding head() const { return mHead; }$/;"	f	class:QCPItemLine
height	gui_sources/qcustomplot.h	/^  int height() const { return mRect.height(); }$/;"	f	class:QCPAxisRect
height	gui_sources/qcustomplot.h	/^  int height() const { return mRect.height(); }$/;"	f	class:QCPPolarAxisAngular
high	gui_sources/qcustomplot.h	/^  double key, open, high, low, close;$/;"	m	class:QCPFinancialData
histogram_bins	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW int histogram_bins;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
histogram_lr	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float histogram_lr;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
hog_clip	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float hog_clip;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
hog_orientations	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float hog_orientations;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
horizontalGroupBox	build/ImageProcProject_autogen/include/ui_widget_container_group.h	/^    QGroupBox *horizontalGroupBox;$/;"	m	class:Ui_WidgetContainerGroup
horizontalLayout	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_WidgetAimingControl
horizontalLayout	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_WidgetCameraControl
horizontalLayout	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_WidgetProcessingImageControl
horizontalLayout_2	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_WidgetCameraControl
horizontalLayout_3	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QHBoxLayout *horizontalLayout_3;$/;"	m	class:Ui_WidgetAimingControl
horizontalLayout_4	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QHBoxLayout *horizontalLayout_4;$/;"	m	class:Ui_WidgetAimingControl
iMultiSelect	gui_sources/qcustomplot.h	/^                   ,iMultiSelect      = 0x004 \/\/\/< <tt>0x004<\/tt> The user can select multiple objects by holding the modifier set by \\ref QCustomPlot::setMultiSelectModifier while clicking$/;"	e	enum:QCP::Interaction
iNone	gui_sources/qcustomplot.h	/^enum Interaction { iNone              = 0x000 \/\/\/< <tt>0x000<\/tt> None of the interactions are possible$/;"	e	enum:QCP::Interaction
iRangeDrag	gui_sources/qcustomplot.h	/^                   ,iRangeDrag        = 0x001 \/\/\/< <tt>0x001<\/tt> Axis ranges are draggable (see \\ref QCPAxisRect::setRangeDrag, \\ref QCPAxisRect::setRangeDragAxes)$/;"	e	enum:QCP::Interaction
iRangeZoom	gui_sources/qcustomplot.h	/^                   ,iRangeZoom        = 0x002 \/\/\/< <tt>0x002<\/tt> Axis ranges are zoomable with the mouse wheel (see \\ref QCPAxisRect::setRangeZoom, \\ref QCPAxisRect::setRangeZoomAxes)$/;"	e	enum:QCP::Interaction
iSelectAxes	gui_sources/qcustomplot.h	/^                   ,iSelectAxes       = 0x010 \/\/\/< <tt>0x010<\/tt> Axes are selectable (or parts of them, see QCPAxis::setSelectableParts)$/;"	e	enum:QCP::Interaction
iSelectItems	gui_sources/qcustomplot.h	/^                   ,iSelectItems      = 0x040 \/\/\/< <tt>0x040<\/tt> Items are selectable (Rectangles, Arrows, Textitems, etc. see \\ref QCPAbstractItem)$/;"	e	enum:QCP::Interaction
iSelectLegend	gui_sources/qcustomplot.h	/^                   ,iSelectLegend     = 0x020 \/\/\/< <tt>0x020<\/tt> Legends are selectable (or their child items, see QCPLegend::setSelectableParts)$/;"	e	enum:QCP::Interaction
iSelectOther	gui_sources/qcustomplot.h	/^                   ,iSelectOther      = 0x080 \/\/\/< <tt>0x080<\/tt> All other objects are selectable (e.g. your own derived layerables, other layout elements,...)$/;"	e	enum:QCP::Interaction
iSelectPlottables	gui_sources/qcustomplot.h	/^                   ,iSelectPlottables = 0x008 \/\/\/< <tt>0x008<\/tt> Plottables are selectable (e.g. graphs, curves, bars,... see QCPAbstractPlottable)$/;"	e	enum:QCP::Interaction
iSelectPlottablesBeyondAxisRect	gui_sources/qcustomplot.h	/^                   ,iSelectPlottablesBeyondAxisRect = 0x100 \/\/\/< <tt>0x100<\/tt> When performing plottable selection\/hit tests, this flag extends the sensitive area beyond the axis rect$/;"	e	enum:QCP::Interaction
iconBorderPen	gui_sources/qcustomplot.h	/^  QPen iconBorderPen() const { return mIconBorderPen; }$/;"	f	class:QCPLegend
iconSize	gui_sources/qcustomplot.h	/^  QSize iconSize() const { return mIconSize; }$/;"	f	class:QCPLegend
iconTextPadding	gui_sources/qcustomplot.h	/^  int iconTextPadding() const { return mIconTextPadding; }$/;"	f	class:QCPLegend
index	gui_sources/qcustomplot.h	/^  int index() const { return mIndex; }$/;"	f	class:QCPLayer
indexToRowCol	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::indexToRowCol(int index, int &row, int &column) const$/;"	f	class:QCPLayoutGrid
info	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    QString info = "CPU";$/;"	m	class:ImageTrackerCentroidGPU
info	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    QString info = "[ CENTROID CPU ]";$/;"	m	class:ImageTrackerCentroid
info	CV_IMAGE_PROCESSING/tracker_neural.h	/^    QString info;$/;"	m	class:NeuralTracker
info	CV_IMAGE_PROCESSING/tracker_template.h	/^    QString info = "[ TEMPLATE CPU ]";$/;"	m	class:ImageTrackerTemplate
info_arch	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_extensions_default	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v
info_language_extensions_default	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v
info_language_extensions_default	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v
info_language_extensions_default	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v
info_language_standard_default	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_standard_default =$/;"	v
info_language_standard_default	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_standard_default = "INFO" ":" "standard_default["$/;"	v
info_language_standard_default	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_standard_default =$/;"	v
info_language_standard_default	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_standard_default = "INFO" ":" "standard_default["$/;"	v
info_platform	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v
info_version	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v
info_version	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v
info_version	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v
info_version_internal	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";$/;"	v
info_version_internal	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
info_version_internal	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";$/;"	v
info_version_internal	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";$/;"	v
info_version_internal	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";$/;"	v
init	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.cpp	/^void TrackerFirst::init(const cv::Mat& image, cv::Rect bbox)$/;"	f	class:TrackerFirst
init	DEVICES/device_generic_interface.h	/^	void init()$/;"	f	class:DeviceGenericInterface
init	stream_video_rtsp.cpp	/^void VideoStreamRTSP::init(int width, int height, int framerate)$/;"	f	class:VideoStreamRTSP
init_follow	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^	bool init_follow = false;$/;"	m	class:TrackerFirst
initializeParentPlot	gui_sources/qcustomplot.cpp	/^void QCPLayerable::initializeParentPlot(QCustomPlot *parentPlot)$/;"	f	class:QCPLayerable
initializer	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	/^       initializer() { QT_RCC_MANGLE_NAMESPACE(qInitResources_pictures)(); }$/;"	f	struct:__anon4::initializer
initializer	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	/^   struct initializer {$/;"	s	namespace:__anon4	file:
input_counter	UTILITES/thread_operation_nodes.h	/^	int input_counter = 0;$/;"	m	class:CoordAvaragePeriodicNode
input_to_optimize_rotation	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	vector<pair<double,double>> input_to_optimize_rotation;$/;"	m	class:RotateOperationContainer
insert	gui_sources/qcustomplot.cpp	/^void QCPBarsGroup::insert(int i, QCPBars *bars)$/;"	f	class:QCPBarsGroup
insertColumn	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::insertColumn(int newIndex)$/;"	f	class:QCPLayoutGrid
insertRow	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::insertRow(int newIndex)$/;"	f	class:QCPLayoutGrid
insetAlignment	gui_sources/qcustomplot.cpp	/^Qt::Alignment QCPLayoutInset::insetAlignment(int index) const$/;"	f	class:QCPLayoutInset
insetLayout	gui_sources/qcustomplot.h	/^  QCPLayoutInset *insetLayout() const { return mInsetLayout; }$/;"	f	class:QCPAxisRect
insetLayout	gui_sources/qcustomplot.h	/^  QCPLayoutInset *insetLayout() const { return mInsetLayout; }$/;"	f	class:QCPPolarAxisAngular
insetPlacement	gui_sources/qcustomplot.cpp	/^QCPLayoutInset::InsetPlacement QCPLayoutInset::insetPlacement(int index) const$/;"	f	class:QCPLayoutInset
insetRect	gui_sources/qcustomplot.cpp	/^QRectF QCPLayoutInset::insetRect(int index) const$/;"	f	class:QCPLayoutInset
interactions	gui_sources/qcustomplot.h	/^  const QCP::Interactions interactions() const { return mInteractions; }$/;"	f	class:QCustomPlot
interface1D	gui_sources/qcustomplot.h	/^  virtual QCPPlottableInterface1D *interface1D() { return 0; } \/\/ TODO: return this later, when QCPAbstractPolarPlottable is created$/;"	f	class:QCPPolarGraph
interface1D	gui_sources/qcustomplot.h	/^  virtual QCPPlottableInterface1D *interface1D() { return nullptr; }$/;"	f	class:QCPAbstractPlottable
interp_factor	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float interp_factor;         \/\/!<  linear interpolation factor for adaptation$/;"	m	struct:cv::tracking::TrackerKCF::Params
interpolate	gui_sources/qcustomplot.h	/^  bool interpolate() const { return mInterpolate; }$/;"	f	class:QCPColorMap
interpolating	gui_sources/qcustomplot.h	/^  bool interpolating() const { return mInterpolating; }$/;"	f	class:QCPItemTracer
intersection	gui_sources/qcustomplot.cpp	/^QCPDataRange QCPDataRange::intersection(const QCPDataRange &other) const$/;"	f	class:QCPDataRange
intersection	gui_sources/qcustomplot.cpp	/^QCPDataSelection QCPDataSelection::intersection(const QCPDataRange &other) const$/;"	f	class:QCPDataSelection
intersection	gui_sources/qcustomplot.cpp	/^QCPDataSelection QCPDataSelection::intersection(const QCPDataSelection &other) const$/;"	f	class:QCPDataSelection
intersects	gui_sources/qcustomplot.cpp	/^bool QCPDataRange::intersects(const QCPDataRange &other) const$/;"	f	class:QCPDataRange
invalidated	gui_sources/qcustomplot.h	/^  bool invalidated() const { return mInvalidated; }$/;"	f	class:QCPAbstractPaintBuffer
inverse	gui_sources/qcustomplot.cpp	/^QCPDataSelection QCPDataSelection::inverse(const QCPDataRange &outerRange) const$/;"	f	class:QCPDataSelection
inverted	gui_sources/qcustomplot.cpp	/^QCPColorGradient QCPColorGradient::inverted() const$/;"	f	class:QCPColorGradient
inverted	gui_sources/qcustomplot.h	/^  bool inverted() const { return mInverted; }$/;"	f	class:QCPLineEnding
ipBorderAligned	gui_sources/qcustomplot.h	/^                        ,ipBorderAligned  \/\/\/< The element is aligned to one of the layout sides, see \\ref setInsetAlignment$/;"	e	enum:QCPLayoutInset::InsetPlacement
ipFree	gui_sources/qcustomplot.h	/^  enum InsetPlacement { ipFree            \/\/\/< The element may be positioned\/sized arbitrarily, see \\ref setInsetRect$/;"	e	enum:QCPLayoutInset::InsetPlacement
isActive	gui_sources/qcustomplot.h	/^  bool isActive() const { return mActive; }$/;"	f	class:QCPSelectionRect
isAimingFault	AIMING_MODULES/aiming_class.cpp	/^bool AimingClass::isAimingFault()$/;"	f	class:AimingClass
isAimingFaultStatistic	AIMING_MODULES/aiming_class.cpp	/^bool AimingParamOptimizator::isAimingFaultStatistic()$/;"	f	class:AimingParamOptimizator
isAtLimit	DEVICES/device_rotary_interface.h	/^bool DeviceRotaryInterface<T_CONNECTION,T_COMMAND,T_MESSAGE>::isAtLimit() { return checkRangeOffset(Position); }$/;"	f	class:DeviceRotaryInterface
isClosed	UTILITES/debug_output_filter.h	/^  bool isClosed() { return (Counter < Peak) ^ FlagInverse;}$/;"	f	class:BlockCounterClass
isConnected	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.cpp	/^bool CANConnectionEngine::isConnected()$/;"	f	class:CANConnectionEngine
isConnected	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^bool TCPConnectionEngine::isConnected()$/;"	f	class:TCPConnectionEngine
isConnected	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^bool UDPEngineInterface::isConnected() { return Connected;}$/;"	f	class:UDPEngineInterface
isCoordDetected	UTILITES/thread_operation_nodes.h	/^  bool isCoordDetected = false;$/;"	m	class:CoordDetector
isEmpty	gui_sources/qcustomplot.cpp	/^bool QCPMarginGroup::isEmpty() const$/;"	f	class:QCPMarginGroup
isEmpty	gui_sources/qcustomplot.h	/^  bool isEmpty() const { return length() == 0; }$/;"	f	class:QCPDataRange
isEmpty	gui_sources/qcustomplot.h	/^  bool isEmpty() const { return mBars.isEmpty(); }$/;"	f	class:QCPBarsGroup
isEmpty	gui_sources/qcustomplot.h	/^  bool isEmpty() const { return mDataRanges.isEmpty(); }$/;"	f	class:QCPDataSelection
isEmpty	gui_sources/qcustomplot.h	/^  bool isEmpty() const { return mIsEmpty; }$/;"	f	class:QCPColorMapData
isEmpty	gui_sources/qcustomplot.h	/^  bool isEmpty() const { return size() == 0; }$/;"	f	class:QCPDataContainer
isEnabled	CV_IMAGE_PROCESSING/optimization_threshold.h	/^	bool isEnabled() { return !DISABLED;}$/;"	f	class:OptimizationThreshold
isEnabled	ROTATE_OPTIMIZATION/rotation_find_executor.h	/^	bool isEnabled() { return timerStepper.isActive();}$/;"	f	class:RotationFindProcessClass
isFrameAvailable	COMMON/interface_image_source.h	/^    virtual bool isFrameAvailable()  { return getAvailableFrames() > 0;};$/;"	f	class:ImageSourceInterface
isInvalidData	gui_sources/qcustomplot.h	/^inline bool isInvalidData(double value)$/;"	f	namespace:QCP
isInvalidData	gui_sources/qcustomplot.h	/^inline bool isInvalidData(double value1, double value2)$/;"	f	namespace:QCP
isLinked	COMMON/interface_pass_coord.h	/^	bool isLinked() { return !NodesLinked.empty();}$/;"	f	class:PassCoordClass
isLinked	COMMON/interface_pass_image.h	/^	bool isLinked() { return !NodesLinked.empty();}$/;"	f	class:PassImageClass
isLinked	COMMON/interface_pass_value.h	/^	bool isLinked() { return !NodesLinked.empty();}$/;"	f	class:PassValueClass
isLinked	CV_IMAGE_PROCESSING/image_processing_node.h	/^    bool isLinked() { return SourceImage != nullptr;}$/;"	f	class:ModuleImageProcessing
isLoaded	UTILITES/engine_statistics.h	/^	bool isLoaded() { return StatLoaded; };$/;"	f	class:StatisticValue
isLoaded	UTILITES/engine_statistics.h	/^	bool isLoaded() { return StatLoaded;};$/;"	f	class:StatisticCoord
isLoaded	UTILITES/thread_operation_nodes.h	/^	bool isLoaded() { return window_size == input_counter;}$/;"	f	class:CoordAvaragePeriodicNode
isLoaded	UTILITES/thread_operation_nodes.h	/^  bool isLoaded()  { return CurrentInputValue == Values.end();}$/;"	f	class:ValueStorage
isLoaded	UTILITES/thread_operation_nodes.h	/^  bool isLoaded() { return CurrentInputCoord = Coords.end();}$/;"	f	class:CoordStorage
isMessageAvailable	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^bool engine_ring_buffer_dense<H,S_M,N_M>::isMessageAvailable()$/;"	f	class:engine_ring_buffer_dense
isMessageAvailable	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^bool RingBufferGeneric<H,M_S,M_N,I_T>::isMessageAvailable()$/;"	f	class:RingBufferGeneric
isMessageAvailable	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.cpp	/^bool CANConnectionEngine::isMessageAvailable() { return false;}$/;"	f	class:CANConnectionEngine
isMessageAvailable	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^bool TCPConnectionEngine::isMessageAvailable() { return RingBuffer->isMessageAvailable(); }/;"	f	class:TCPConnectionEngine
isMessageAvailable	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^bool UDPEngineInterface::isMessageAvailable() { return RingBuffer->isMessageAvailable(); }$/;"	f	class:UDPEngineInterface
isMessasge	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic.h	/^	      bool isMessasge() { return (HEADER.isValid()); };$/;"	f	class:MessageGeneric
isMessasge	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	/^	      bool isMessasge() { return (HEADER.isValid()); };$/;"	f	class:MessageGenericExt
isNone	gui_sources/qcustomplot.h	/^  bool isNone() const { return mShape == ssNone; }$/;"	f	class:QCPScatterStyle
isNull	gui_sources/qcustomplot.h	/^  bool isNull() const { return qIsNull(mX) && qIsNull(mY); }$/;"	f	class:QCPVector2D
isOpen	UTILITES/debug_output_filter.h	/^    bool isOpen(){ return counter == peak;}$/;"	f	class:OutputFilter
isOpen	UTILITES/debug_output_filter.h	/^  bool isOpen() { return (Counter >= Peak) ^ FlagInverse;}$/;"	f	class:BlockCounterClass
isOpen	UTILITES/thread_operation_nodes.h	/^    bool isOpen(){ return counter >= peak;}$/;"	f	class:ThinningFilter
isOpen	UTILITES/thread_operation_nodes.h	/^  bool isOpen() { return Shutteropencved ^ FlagInversion;}$/;"	f	class:ValuePassShutter
isPenDefined	gui_sources/qcustomplot.h	/^  bool isPenDefined() const { return mPenDefined; }$/;"	f	class:QCPScatterStyle
isROIMode	CV_IMAGE_PROCESSING/image_processing_node.h	/^    virtual bool isROIMode() { return FLAG_TRACK_MODE;};$/;"	f	class:ModuleImageProcessing
isROIValid	CV_IMAGE_PROCESSING/contour_processing.cpp	/^bool ContoursProcessorClass::isROIValid(const cv::Rect& ROI, int SizeImage)$/;"	f	class:ContoursProcessorClass
isReverseHorizontal	CAMERA_INTERFACE/interface_camera_hik.cpp	/^bool CameraInterfaceHIK::isReverseHorizontal()$/;"	f	class:CameraInterfaceHIK
isSignal	UTILITES/thread_operation_nodes.h	/^  bool isSignal() $/;"	f	class:ValueDetector
isTrackHold	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^   bool isTrackHold() { return follow_flag; };$/;"	f	class:TrackerFirst
isTrackHold	UTILITES/thread_operation_nodes.h	/^  bool isTrackHold() { return TrackingDetector.isSignal(); };$/;"	f	class:TrackHoldDetectorNode
isTypeRegistered	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static bool isTypeRegistered()         { return ID() > 0;}$/;"	f	class:TypeRegister
isTypeValid	TRANSMISSION/DATA_STRUCTURES/engine_type_register.h	/^      static bool isTypeValid(const int& TYPE_ID) { return TYPE_ID <= TypeRegister<>::TypeIDMax;}$/;"	f	class:TypeRegister
isValid	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    bool isValid() { return (HEADER1 == 0xF1);};$/;"	f	struct:HEADERStruct
isValid	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^bool RotateOperationContainer::isValid() { return RotationValid; }$/;"	f	class:RotateOperationContainer
isValid	TRANSMISSION/GENERIC_MESSAGES/message_header_generic.h	/^    bool isValid() const { return HEADER == 0x8220; }$/;"	f	class:MESSAGE_HEADER_GENERIC
isValid	TRANSMISSION/GENERIC_MESSAGES/message_header_generic_ext.h	/^    bool isValid() const { return HEADER == 0x8220; }$/;"	f	class:MESSAGE_HEADER_EXT
isValid	gui_sources/qcustomplot.h	/^  bool isValid() const { return (mEnd >= mBegin) && (mBegin >= 0); }$/;"	f	class:QCPDataRange
is_rotation_inverse	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	bool is_rotation_inverse = false;$/;"	m	class:RotateOperationContainer
item	gui_sources/qcustomplot.cpp	/^QCPAbstractItem *QCustomPlot::item() const$/;"	f	class:QCustomPlot
item	gui_sources/qcustomplot.cpp	/^QCPAbstractItem *QCustomPlot::item(int index) const$/;"	f	class:QCustomPlot
item	gui_sources/qcustomplot.cpp	/^QCPAbstractLegendItem *QCPLegend::item(int index) const$/;"	f	class:QCPLegend
itemAt	gui_sources/qcustomplot.cpp	/^QCPAbstractItem *QCustomPlot::itemAt(const QPointF &pos, bool onlySelectable) const$/;"	f	class:QCustomPlot
itemAt	gui_sources/qcustomplot.h	/^ItemType *QCustomPlot::itemAt(const QPointF &pos, bool onlySelectable) const$/;"	f	class:QCustomPlot
itemChange	gui_sources/node.cpp	/^QVariant Node::itemChange(GraphicsItemChange change, const QVariant &value)$/;"	f	class:Node
itemChange	gui_sources/widget_scene_node_interface.cpp	/^QVariant WidgetSceneNodeInterface::itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant &value)$/;"	f	class:WidgetSceneNodeInterface
itemClick	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::itemClick(QCPAbstractItem * _t1, QMouseEvent * _t2)$/;"	f	class:QCustomPlot
itemCount	gui_sources/qcustomplot.cpp	/^int QCPLegend::itemCount() const$/;"	f	class:QCPLegend
itemCount	gui_sources/qcustomplot.cpp	/^int QCustomPlot::itemCount() const$/;"	f	class:QCustomPlot
itemDoubleClick	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::itemDoubleClick(QCPAbstractItem * _t1, QMouseEvent * _t2)$/;"	f	class:QCustomPlot
itemWithPlottable	gui_sources/qcustomplot.cpp	/^QCPPlottableLegendItem *QCPLegend::itemWithPlottable(const QCPAbstractPlottable *plottable) const$/;"	f	class:QCPLegend
items	gui_sources/qcustomplot.cpp	/^QList<QCPAbstractItem *> QCPAxisRect::items() const$/;"	f	class:QCPAxisRect
items	gui_sources/qcustomplot.cpp	/^QList<QCPAbstractItem*> QCPAxis::items() const$/;"	f	class:QCPAxis
iterator	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^	int iterator = 0;$/;"	m	class:TrackerFirst
iterator	gui_sources/qcustomplot.h	/^  typedef typename QVector<DataType>::iterator iterator;$/;"	t	class:QCPDataContainer
iterator2	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^	int iterator2 = 0;$/;"	m	class:TrackerFirst
kaiser_alpha	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float kaiser_alpha;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
key	gui_sources/qcustomplot.h	/^  double key() const { return mKey; }$/;"	f	class:QCPItemPosition
key	gui_sources/qcustomplot.h	/^  double key, minimum, lowerQuartile, median, upperQuartile, maximum;$/;"	m	class:QCPStatisticalBoxData
key	gui_sources/qcustomplot.h	/^  double key, open, high, low, close;$/;"	m	class:QCPFinancialData
key	gui_sources/qcustomplot.h	/^  double key, value;$/;"	m	class:QCPBarsData
key	gui_sources/qcustomplot.h	/^  double key, value;$/;"	m	class:QCPGraphData
key	gui_sources/qcustomplot.h	/^  double t, key, value;$/;"	m	class:QCPCurveData
keyAxis	gui_sources/qcustomplot.h	/^  QCPAxis *keyAxis() const { return mKeyAxis.data(); }$/;"	f	class:QCPAbstractPlottable
keyAxis	gui_sources/qcustomplot.h	/^  QCPAxis *keyAxis() const { return mKeyAxis.data(); }$/;"	f	class:QCPItemPosition
keyAxis	gui_sources/qcustomplot.h	/^  QCPPolarAxisAngular *keyAxis() const { return mKeyAxis.data(); }$/;"	f	class:QCPPolarGraph
keyPixelOffset	gui_sources/qcustomplot.cpp	/^double QCPBarsGroup::keyPixelOffset(const QCPBars *bars, double keyCoord)$/;"	f	class:QCPBarsGroup
keyPressEvent	gui_sources/qcustomplot.cpp	/^void QCPSelectionRect::keyPressEvent(QKeyEvent *event)$/;"	f	class:QCPSelectionRect
keyRange	gui_sources/qcustomplot.h	/^  QCPRange keyRange() const { return mKeyRange; }$/;"	f	class:QCPColorMapData
keyRange	gui_sources/qcustomplot.h	/^QCPRange QCPDataContainer<DataType>::keyRange(bool &foundRange, QCP::SignDomain signDomain)$/;"	f	class:QCPDataContainer
keySize	gui_sources/qcustomplot.h	/^  int keySize() const { return mKeySize; }$/;"	f	class:QCPColorMapData
keyToDateTime	gui_sources/qcustomplot.cpp	/^QDateTime QCPAxisTickerDateTime::keyToDateTime(double key)$/;"	f	class:QCPAxisTickerDateTime
label	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QLabel *label;$/;"	m	class:Ui_WidgetAimingControl
label	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QLabel *label;$/;"	m	class:Ui_WidgetCameraControl
label	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    QLabel *label;$/;"	m	class:Ui_WidgetImageImitator
label	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^    QLabel *label;$/;"	m	class:Ui_WidgetProcessingImageControl
label	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    QLabel *label;$/;"	m	class:Ui_WidgetSinusSource
label	gui_sources/qcustomplot.cpp	/^QString QCPColorScale::label() const$/;"	f	class:QCPColorScale
label	gui_sources/qcustomplot.h	/^  QString label() const { return mLabel; }$/;"	f	class:QCPAxis
label	gui_sources/qcustomplot.h	/^  QString label() const { return mLabel; }$/;"	f	class:QCPPolarAxisAngular
label	gui_sources/qcustomplot.h	/^  QString label() const { return mLabel; }$/;"	f	class:QCPPolarAxisRadial
label	gui_sources/qcustomplot.h	/^  QString label;$/;"	m	class:QCPAxisPainterPrivate
labelColor	gui_sources/qcustomplot.h	/^  QColor labelColor() const { return mLabelColor; }$/;"	f	class:QCPAxis
labelColor	gui_sources/qcustomplot.h	/^  QColor labelColor() const { return mLabelColor; }$/;"	f	class:QCPPolarAxisAngular
labelColor	gui_sources/qcustomplot.h	/^  QColor labelColor() const { return mLabelColor; }$/;"	f	class:QCPPolarAxisRadial
labelColor	gui_sources/qcustomplot.h	/^  QColor labelColor;$/;"	m	class:QCPAxisPainterPrivate
labelDataDisplay	build/ImageProcProject_autogen/include/ui_widget_processing_image_generic.h	/^    QLabel *labelDataDisplay;$/;"	m	class:Ui_WidgetProcessingImage
labelFont	gui_sources/qcustomplot.h	/^  QFont labelFont() const { return mLabelFont; }$/;"	f	class:QCPAxis
labelFont	gui_sources/qcustomplot.h	/^  QFont labelFont() const { return mLabelFont; }$/;"	f	class:QCPPolarAxisAngular
labelFont	gui_sources/qcustomplot.h	/^  QFont labelFont() const { return mLabelFont; }$/;"	f	class:QCPPolarAxisRadial
labelFont	gui_sources/qcustomplot.h	/^  QFont labelFont;$/;"	m	class:QCPAxisPainterPrivate
labelImageDisplay	build/ImageProcProject_autogen/include/ui_widget_processing_image_generic.h	/^    LabelImage *labelImageDisplay;$/;"	m	class:Ui_WidgetProcessingImage
labelName	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	/^    QLabel *labelName;$/;"	m	class:Ui_WidgetProcessController
labelName	build/ImageProcProject_autogen/include/ui_widget_processing_image_generic.h	/^    QLabel *labelName;$/;"	m	class:Ui_WidgetProcessingImage
labelPadding	gui_sources/qcustomplot.cpp	/^int QCPAxis::labelPadding() const$/;"	f	class:QCPAxis
labelPadding	gui_sources/qcustomplot.cpp	/^int QCPPolarAxisRadial::labelPadding() const$/;"	f	class:QCPPolarAxisRadial
labelPadding	gui_sources/qcustomplot.h	/^  int labelPadding() const { return mLabelPadding; }$/;"	f	class:QCPPolarAxisAngular
labelPadding	gui_sources/qcustomplot.h	/^  int labelPadding; \/\/ directly accessed by QCPAxis setters\/getters$/;"	m	class:QCPAxisPainterPrivate
labelSelectionBox	gui_sources/qcustomplot.h	/^  QRect labelSelectionBox() const { return mLabelSelectionBox; }$/;"	f	class:QCPAxisPainterPrivate
label_2	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QLabel *label_2;$/;"	m	class:Ui_WidgetAimingControl
label_2	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QLabel *label_2;$/;"	m	class:Ui_WidgetCameraControl
label_2	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^    QLabel *label_2;$/;"	m	class:Ui_WidgetProcessingImageControl
label_3	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    QLabel *label_3;$/;"	m	class:Ui_WidgetSinusSource
label_4	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QLabel *label_4;$/;"	m	class:Ui_WidgetAimingControl
label_4	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    QLabel *label_4;$/;"	m	class:Ui_WidgetSinusSource
label_5	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QLabel *label_5;$/;"	m	class:Ui_WidgetAimingControl
lambda	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float lambda;                \/\/!<  regularization$/;"	m	struct:cv::tracking::TrackerKCF::Params
layer	gui_sources/qcustomplot.cpp	/^QCPLayer *QCustomPlot::layer(const QString &name) const$/;"	f	class:QCustomPlot
layer	gui_sources/qcustomplot.cpp	/^QCPLayer *QCustomPlot::layer(int index) const$/;"	f	class:QCustomPlot
layer	gui_sources/qcustomplot.h	/^  QCPLayer *layer() const { return mLayer; }$/;"	f	class:QCPLayerable
layerChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPLayerable::layerChanged(QCPLayer * _t1)$/;"	f	class:QCPLayerable
layerCount	gui_sources/qcustomplot.cpp	/^int QCustomPlot::layerCount() const$/;"	f	class:QCustomPlot
layerableAt	gui_sources/qcustomplot.cpp	/^QCPLayerable *QCustomPlot::layerableAt(const QPointF &pos, bool onlySelectable, QVariant *selectionDetails) const$/;"	f	class:QCustomPlot
layerableListAt	gui_sources/qcustomplot.cpp	/^QList<QCPLayerable*> QCustomPlot::layerableListAt(const QPointF &pos, bool onlySelectable, QList<QVariant> *selectionDetails) const$/;"	f	class:QCustomPlot
layout	gui_sources/qcustomplot.h	/^  QCPLayout *layout() const { return mParentLayout; }$/;"	f	class:QCPLayoutElement
layout1	build/ImageProcProject_autogen/include/ui_widget_table_group.h	/^    QHBoxLayout *layout1;$/;"	m	class:Ui_WidgetTableGroup
layout2	build/ImageProcProject_autogen/include/ui_widget_table_group.h	/^    QHBoxLayout *layout2;$/;"	m	class:Ui_WidgetTableGroup
layoutChanged	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::layoutChanged()$/;"	f	class:QCPAxisRect
layoutChanged	gui_sources/qcustomplot.cpp	/^void QCPLayoutElement::layoutChanged()$/;"	f	class:QCPLayoutElement
layoutElementAt	gui_sources/qcustomplot.cpp	/^QCPLayoutElement *QCustomPlot::layoutElementAt(const QPointF &pos) const$/;"	f	class:QCustomPlot
layouts	gui_sources/widget_table_group.h	/^    std::vector<QHBoxLayout*> layouts;$/;"	m	class:WidgetTableGroup
left	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const left;$/;"	m	class:QCPItemEllipse
left	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const left;$/;"	m	class:QCPItemPixmap
left	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const left;$/;"	m	class:QCPItemRect
left	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const left;$/;"	m	class:QCPItemText
left	gui_sources/qcustomplot.h	/^  QCPItemPosition * const left;$/;"	m	class:QCPItemBracket
left	gui_sources/qcustomplot.h	/^  int left() const { return mRect.left(); }$/;"	f	class:QCPAxisRect
left	gui_sources/qcustomplot.h	/^  int left() const { return mRect.left(); }$/;"	f	class:QCPPolarAxisAngular
legend	gui_sources/qcustomplot.h	/^  QCPLegend *legend;$/;"	m	class:QCustomPlot
legendClick	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::legendClick(QCPLegend * _t1, QCPAbstractLegendItem * _t2, QMouseEvent * _t3)$/;"	f	class:QCustomPlot
legendDoubleClick	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::legendDoubleClick(QCPLegend * _t1, QCPAbstractLegendItem * _t2, QMouseEvent * _t3)$/;"	f	class:QCustomPlot
legendRemoved	gui_sources/qcustomplot.cpp	/^void QCustomPlot::legendRemoved(QCPLegend *legend)$/;"	f	class:QCustomPlot
length	gui_sources/qcustomplot.h	/^  double length() const { return mLength; }$/;"	f	class:QCPItemBracket
length	gui_sources/qcustomplot.h	/^  double length() const { return mLength; }$/;"	f	class:QCPLineEnding
length	gui_sources/qcustomplot.h	/^  double length() const { return qSqrt(mX*mX+mY*mY); }$/;"	f	class:QCPVector2D
length	gui_sources/qcustomplot.h	/^  int length() const { return size(); }$/;"	f	class:QCPDataRange
lengthSquared	gui_sources/qcustomplot.h	/^  double lengthSquared() const { return mX*mX+mY*mY; }$/;"	f	class:QCPVector2D
lessThanDataRangeBegin	gui_sources/qcustomplot.h	/^  inline static bool lessThanDataRangeBegin(const QCPDataRange &a, const QCPDataRange &b) { return a.begin() < b.begin(); }$/;"	f	class:QCPDataSelection
levelCount	gui_sources/qcustomplot.h	/^  int levelCount() const { return mLevelCount; }$/;"	f	class:QCPColorGradient
limAbove	gui_sources/qcustomplot.h	/^                         ,limAbove \/\/\/< Layer is inserted above other layer$/;"	e	enum:QCustomPlot::LayerInsertMode
limBelow	gui_sources/qcustomplot.h	/^  enum LayerInsertMode { limBelow  \/\/\/< Layer is inserted below other layer$/;"	e	enum:QCustomPlot::LayerInsertMode
limitIteratorsToDataRange	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::limitIteratorsToDataRange(const_iterator &begin, const_iterator &end, const QCPDataRange &dataRange) const$/;"	f	class:QCPDataContainer
lineExposure	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    QLineEdit *lineExposure;$/;"	m	class:Ui_WidgetCameraControl
linePosCorrection	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QLineEdit *linePosCorrection;$/;"	m	class:Ui_WidgetAimingControl
lineStyle	gui_sources/qcustomplot.h	/^  LineStyle lineStyle() const { return mLineStyle; }$/;"	f	class:QCPCurve
lineStyle	gui_sources/qcustomplot.h	/^  LineStyle lineStyle() const { return mLineStyle; }$/;"	f	class:QCPGraph
lineStyle	gui_sources/qcustomplot.h	/^  LineStyle lineStyle() const { return mLineStyle; }$/;"	f	class:QCPPolarGraph
linkTo	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  void linkTo(CANConnectionEngine* device) $/;"	f	class:CANDelayMeasure
linkTo	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  void linkTo(CANConnectionEngine* device) { deviceCAN = device; };$/;"	f	class:CANTestMessage
linkToControlWindow	DEVICES/device_focus_ranger_interface.h	/^    void linkToControlWindow(WidgetFocusRangerControl* Window ){ ControlWindow = Window;};$/;"	f	class:DeviceFocusRangerInterface
linkToControlWindow	DEVICES/device_laser_interface.h	/^	void linkToControlWindow(WidgetLaserControl* ControlWindow ) {};$/;"	f	class:DeviceLaserInterface
linkToSource	stream_video_rtsp.cpp	/^void VideoStreamRTSP::linkToSource(ImageSourceInterface* Source)$/;"	f	class:VideoStreamRTSP
linux	build/ImageProcProject_autogen/moc_predefs.h	305;"	d
listMessages	build/ImageProcProject_autogen/include/ui_widget_output_text_display.h	/^    QListWidget *listMessages;$/;"	m	class:Ui_OutputTextDisplay
listenTo	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  void  listenTo(QHostAddress::SpecialAddress IPDevice, int Port) {};$/;"	f	class:CANConnectionEngine
listenTo	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  void  listenTo(QString IDDeviceStr, int IDDevice = 0) {};$/;"	f	class:CANConnectionEngine
listenTo	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^void TCPConnectionEngine::listenTo(QHostAddress::SpecialAddress address, int Port)$/;"	f	class:TCPConnectionEngine
listenTo	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^void TCPConnectionEngine::listenTo(QString address, int Port)$/;"	f	class:TCPConnectionEngine
listenTo	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^void  UDPEngineInterface::listenTo(QHostAddress::SpecialAddress IPHost, int Port)$/;"	f	class:UDPEngineInterface
listenTo	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^void  UDPEngineInterface::listenTo(QString IPHost, int Port)$/;"	f	class:UDPEngineInterface
lmBuffered	gui_sources/qcustomplot.h	/^                   ,lmBuffered \/\/\/< Layer has its own paint buffer and may be replotted individually (see \\ref replot).$/;"	e	enum:QCPLayer::LayerMode
lmLogical	gui_sources/qcustomplot.h	/^  enum LayerMode { lmLogical   \/\/\/< Layer is used only for rendering order, and shares paint buffer with all other adjacent logical layers.$/;"	e	enum:QCPLayer::LayerMode
lmRotated	gui_sources/qcustomplot.h	/^                   ,lmRotated \/\/\/< $/;"	e	enum:QCPPolarAxisAngular::LabelMode
lmRotated	gui_sources/qcustomplot.h	/^                   ,lmRotated \/\/\/< $/;"	e	enum:QCPPolarAxisRadial::LabelMode
lmUpright	gui_sources/qcustomplot.h	/^  enum LabelMode { lmUpright   \/\/\/< $/;"	e	enum:QCPPolarAxisAngular::LabelMode
lmUpright	gui_sources/qcustomplot.h	/^  enum LabelMode { lmUpright   \/\/\/< $/;"	e	enum:QCPPolarAxisRadial::LabelMode
loadPreset	gui_sources/qcustomplot.cpp	/^void QCPColorGradient::loadPreset(GradientPreset preset)$/;"	f	class:QCPColorGradient
loadSettings	DEVICES/device_laser_interface.h	/^    void loadSettings(){};$/;"	f	class:DeviceLaserInterface
loadSettings	DEVICES/device_rotary_interface.h	/^void DeviceRotaryInterface<T_CONNECTION,T_COMMAND,T_MESSAGE>::loadSettings()$/;"	f	class:DeviceRotaryInterface
logBase	gui_sources/qcustomplot.h	/^  double logBase() const { return mLogBase; }$/;"	f	class:QCPAxisTickerLog
loop	stream_video_rtsp.h	/^            GMainLoop *loop   = nullptr;$/;"	m	class:VideoStreamRTSP
low	gui_sources/qcustomplot.h	/^  double key, open, high, low, close;$/;"	m	class:QCPFinancialData
lower	gui_sources/qcustomplot.h	/^  double lower, upper;$/;"	m	class:QCPRange
lowerEnding	gui_sources/qcustomplot.cpp	/^QCPLineEnding QCPAxis::lowerEnding() const$/;"	f	class:QCPAxis
lowerEnding	gui_sources/qcustomplot.h	/^  QCPLineEnding lowerEnding, upperEnding; \/\/ directly accessed by QCPAxis setters\/getters$/;"	m	class:QCPAxisPainterPrivate
lowerQuartile	gui_sources/qcustomplot.h	/^  double key, minimum, lowerQuartile, median, upperQuartile, maximum;$/;"	m	class:QCPStatisticalBoxData
lsImpulse	gui_sources/qcustomplot.h	/^                   ,lsImpulse    \/\/\/< each data point is represented by a line parallel to the value axis, which reaches from the data point to the zero-value-line$/;"	e	enum:QCPGraph::LineStyle
lsInside	gui_sources/qcustomplot.h	/^  enum LabelSide { lsInside    \/\/\/< Tick labels will be displayed inside the axis rect and clipped to the inner axis rect$/;"	e	enum:QCPAxis::LabelSide
lsLine	gui_sources/qcustomplot.h	/^                   ,lsLine       \/\/\/< data points are connected by a straight line$/;"	e	enum:QCPGraph::LineStyle
lsLine	gui_sources/qcustomplot.h	/^                   ,lsLine       \/\/\/< data points are connected by a straight line$/;"	e	enum:QCPPolarGraph::LineStyle
lsLine	gui_sources/qcustomplot.h	/^                   ,lsLine \/\/\/< Data points are connected with a straight line$/;"	e	enum:QCPCurve::LineStyle
lsNone	gui_sources/qcustomplot.h	/^  enum LineStyle { lsNone        \/\/\/< data points are not connected with any lines (e.g. data only represented$/;"	e	enum:QCPGraph::LineStyle
lsNone	gui_sources/qcustomplot.h	/^  enum LineStyle { lsNone        \/\/\/< data points are not connected with any lines (e.g. data only represented$/;"	e	enum:QCPPolarGraph::LineStyle
lsNone	gui_sources/qcustomplot.h	/^  enum LineStyle { lsNone  \/\/\/< No line is drawn between data points (e.g. only scatters)$/;"	e	enum:QCPCurve::LineStyle
lsOutside	gui_sources/qcustomplot.h	/^                   ,lsOutside  \/\/\/< Tick labels will be displayed outside the axis rect$/;"	e	enum:QCPAxis::LabelSide
lsStepCenter	gui_sources/qcustomplot.h	/^                   ,lsStepCenter \/\/\/< line is drawn as steps where the step is in between two data points$/;"	e	enum:QCPGraph::LineStyle
lsStepLeft	gui_sources/qcustomplot.h	/^                   ,lsStepLeft   \/\/\/< line is drawn as steps where the step height is the value of the left data point$/;"	e	enum:QCPGraph::LineStyle
lsStepRight	gui_sources/qcustomplot.h	/^                   ,lsStepRight  \/\/\/< line is drawn as steps where the step height is the value of the right data point$/;"	e	enum:QCPGraph::LineStyle
mAADragBackup	gui_sources/qcustomplot.h	/^  QCP::AntialiasedElements mAADragBackup, mNotAADragBackup;$/;"	m	class:QCPAxis
mAADragBackup	gui_sources/qcustomplot.h	/^  QCP::AntialiasedElements mAADragBackup, mNotAADragBackup;$/;"	m	class:QCPAxisRect
mAADragBackup	gui_sources/qcustomplot.h	/^  QCP::AntialiasedElements mAADragBackup, mNotAADragBackup;$/;"	m	class:QCPPolarAxisAngular
mAADragBackup	gui_sources/qcustomplot.h	/^  QCP::AntialiasedElements mAADragBackup, mNotAADragBackup;$/;"	m	class:QCPPolarAxisRadial
mAbbreviateDecimalPowers	gui_sources/qcustomplot.h	/^  bool mAbbreviateDecimalPowers;$/;"	m	class:QCPLabelPainterPrivate
mActive	gui_sources/qcustomplot.h	/^  bool mActive;$/;"	m	class:QCPSelectionRect
mAdaptiveSampling	gui_sources/qcustomplot.h	/^  bool mAdaptiveSampling;$/;"	m	class:QCPGraph
mAlpha	gui_sources/qcustomplot.h	/^  unsigned char *mAlpha;$/;"	m	class:QCPColorMapData
mAnchorId	gui_sources/qcustomplot.h	/^  int mAnchorId;$/;"	m	class:QCPItemAnchor
mAnchorMode	gui_sources/qcustomplot.h	/^  AnchorMode mAnchorMode;$/;"	m	class:QCPLabelPainterPrivate
mAnchorReference	gui_sources/qcustomplot.h	/^  QPointF mAnchorReference;$/;"	m	class:QCPLabelPainterPrivate
mAnchorReferenceType	gui_sources/qcustomplot.h	/^  AnchorReferenceType mAnchorReferenceType;$/;"	m	class:QCPLabelPainterPrivate
mAnchorSide	gui_sources/qcustomplot.h	/^  AnchorSide mAnchorSide;$/;"	m	class:QCPLabelPainterPrivate
mAnchors	gui_sources/qcustomplot.h	/^  QList<QCPItemAnchor*> mAnchors;$/;"	m	class:QCPAbstractItem
mAngle	gui_sources/qcustomplot.h	/^  double mAngle, mAngleRad;$/;"	m	class:QCPPolarAxisAngular
mAngle	gui_sources/qcustomplot.h	/^  double mAngle;$/;"	m	class:QCPPolarAxisRadial
mAngleRad	gui_sources/qcustomplot.h	/^  double mAngle, mAngleRad;$/;"	m	class:QCPPolarAxisAngular
mAngleReference	gui_sources/qcustomplot.h	/^  AngleReference mAngleReference;$/;"	m	class:QCPPolarAxisRadial
mAngularAxis	gui_sources/qcustomplot.h	/^  QCPPolarAxisAngular *mAngularAxis;$/;"	m	class:QCPPolarAxisRadial
mAngularPen	gui_sources/qcustomplot.h	/^  QPen mAngularPen, mAngularSubGridPen;$/;"	m	class:QCPPolarGrid
mAngularSubGridPen	gui_sources/qcustomplot.h	/^  QPen mAngularPen, mAngularSubGridPen;$/;"	m	class:QCPPolarGrid
mAntialiased	gui_sources/qcustomplot.h	/^  bool mAntialiased;$/;"	m	class:QCPLayerable
mAntialiasedElements	gui_sources/qcustomplot.h	/^  QCP::AntialiasedElements mAntialiasedElements, mNotAntialiasedElements;$/;"	m	class:QCustomPlot
mAntialiasedFill	gui_sources/qcustomplot.h	/^  bool mAntialiasedFill, mAntialiasedScatters;$/;"	m	class:QCPAbstractPlottable
mAntialiasedFill	gui_sources/qcustomplot.h	/^  bool mAntialiasedFill, mAntialiasedScatters;$/;"	m	class:QCPPolarGraph
mAntialiasedScatters	gui_sources/qcustomplot.h	/^  bool mAntialiasedFill, mAntialiasedScatters;$/;"	m	class:QCPAbstractPlottable
mAntialiasedScatters	gui_sources/qcustomplot.h	/^  bool mAntialiasedFill, mAntialiasedScatters;$/;"	m	class:QCPPolarGraph
mAntialiasedSubGrid	gui_sources/qcustomplot.h	/^  bool mAntialiasedSubGrid, mAntialiasedZeroLine;$/;"	m	class:QCPGrid
mAntialiasedSubGrid	gui_sources/qcustomplot.h	/^  bool mAntialiasedSubGrid, mAntialiasedZeroLine;$/;"	m	class:QCPPolarGrid
mAntialiasedZeroLine	gui_sources/qcustomplot.h	/^  bool mAntialiasedSubGrid, mAntialiasedZeroLine;$/;"	m	class:QCPGrid
mAntialiasedZeroLine	gui_sources/qcustomplot.h	/^  bool mAntialiasedSubGrid, mAntialiasedZeroLine;$/;"	m	class:QCPPolarGrid
mAntialiasingStack	gui_sources/qcustomplot.h	/^  QStack<bool> mAntialiasingStack;$/;"	m	class:QCPPainter
mAspectRatioMode	gui_sources/qcustomplot.h	/^  Qt::AspectRatioMode mAspectRatioMode;$/;"	m	class:QCPItemPixmap
mAutoAddPlottableToLegend	gui_sources/qcustomplot.h	/^  bool mAutoAddPlottableToLegend;$/;"	m	class:QCustomPlot
mAutoMargins	gui_sources/qcustomplot.h	/^  QCP::MarginSides mAutoMargins;$/;"	m	class:QCPLayoutElement
mAutoSqueeze	gui_sources/qcustomplot.h	/^  bool mAutoSqueeze;$/;"	m	class:QCPDataContainer
mAxes	gui_sources/qcustomplot.h	/^  QHash<QCPAxis::AxisType, QList<QCPAxis*> > mAxes;$/;"	m	class:QCPAxisRect
mAxisPainter	gui_sources/qcustomplot.h	/^  QCPAxisPainterPrivate *mAxisPainter;$/;"	m	class:QCPAxis
mAxisRect	gui_sources/qcustomplot.h	/^  QCPAxisRect *mAxisRect;$/;"	m	class:QCPAxis
mAxisRect	gui_sources/qcustomplot.h	/^  QPointer<QCPAxisRect> mAxisRect;$/;"	m	class:QCPItemPosition
mAxisRect	gui_sources/qcustomplot.h	/^  QPointer<QCPColorScaleAxisRectPrivate> mAxisRect;$/;"	m	class:QCPColorScale
mAxisSelectionBox	gui_sources/qcustomplot.h	/^  QRect mAxisSelectionBox, mTickLabelsSelectionBox, mLabelSelectionBox;$/;"	m	class:QCPAxisPainterPrivate
mAxisSelectionBox	gui_sources/qcustomplot.h	/^  QRect mAxisSelectionBox, mTickLabelsSelectionBox, mLabelSelectionBox;$/;"	m	class:QCPLabelPainterPrivate
mAxisType	gui_sources/qcustomplot.h	/^  AxisType mAxisType;$/;"	m	class:QCPAxis
mBackgroundBrush	gui_sources/qcustomplot.h	/^  QBrush mBackgroundBrush;$/;"	m	class:QCPAxisRect
mBackgroundBrush	gui_sources/qcustomplot.h	/^  QBrush mBackgroundBrush;$/;"	m	class:QCPPolarAxisAngular
mBackgroundBrush	gui_sources/qcustomplot.h	/^  QBrush mBackgroundBrush;$/;"	m	class:QCustomPlot
mBackgroundPixmap	gui_sources/qcustomplot.h	/^  QPixmap mBackgroundPixmap;$/;"	m	class:QCPAxisRect
mBackgroundPixmap	gui_sources/qcustomplot.h	/^  QPixmap mBackgroundPixmap;$/;"	m	class:QCPPolarAxisAngular
mBackgroundPixmap	gui_sources/qcustomplot.h	/^  QPixmap mBackgroundPixmap;$/;"	m	class:QCustomPlot
mBackgroundScaled	gui_sources/qcustomplot.h	/^  bool mBackgroundScaled;$/;"	m	class:QCPAxisRect
mBackgroundScaled	gui_sources/qcustomplot.h	/^  bool mBackgroundScaled;$/;"	m	class:QCPPolarAxisAngular
mBackgroundScaled	gui_sources/qcustomplot.h	/^  bool mBackgroundScaled;$/;"	m	class:QCustomPlot
mBackgroundScaledMode	gui_sources/qcustomplot.h	/^  Qt::AspectRatioMode mBackgroundScaledMode;$/;"	m	class:QCPAxisRect
mBackgroundScaledMode	gui_sources/qcustomplot.h	/^  Qt::AspectRatioMode mBackgroundScaledMode;$/;"	m	class:QCPPolarAxisAngular
mBackgroundScaledMode	gui_sources/qcustomplot.h	/^  Qt::AspectRatioMode mBackgroundScaledMode;$/;"	m	class:QCustomPlot
mBarAbove	gui_sources/qcustomplot.h	/^  QPointer<QCPBars> mBarBelow, mBarAbove;$/;"	m	class:QCPBars
mBarBelow	gui_sources/qcustomplot.h	/^  QPointer<QCPBars> mBarBelow, mBarAbove;$/;"	m	class:QCPBars
mBarWidth	gui_sources/qcustomplot.h	/^  int mBarWidth;$/;"	m	class:QCPColorScale
mBars	gui_sources/qcustomplot.h	/^  QList<QCPBars*> mBars;$/;"	m	class:QCPBarsGroup
mBarsGroup	gui_sources/qcustomplot.h	/^  QCPBarsGroup *mBarsGroup;$/;"	m	class:QCPBars
mBasePen	gui_sources/qcustomplot.h	/^  QPen mBasePen, mSelectedBasePen;$/;"	m	class:QCPAxis
mBasePen	gui_sources/qcustomplot.h	/^  QPen mBasePen, mSelectedBasePen;$/;"	m	class:QCPPolarAxisAngular
mBasePen	gui_sources/qcustomplot.h	/^  QPen mBasePen, mSelectedBasePen;$/;"	m	class:QCPPolarAxisRadial
mBaseValue	gui_sources/qcustomplot.h	/^  double mBaseValue;$/;"	m	class:QCPBars
mBegin	gui_sources/qcustomplot.h	/^  int mBegin, mEnd;$/;"	m	class:QCPDataRange
mBiggestUnit	gui_sources/qcustomplot.h	/^  TimeUnit mSmallestUnit, mBiggestUnit;$/;"	m	class:QCPAxisTickerTime
mBorderPen	gui_sources/qcustomplot.h	/^  QPen mBorderPen, mIconBorderPen;$/;"	m	class:QCPLegend
mBracketBrush	gui_sources/qcustomplot.h	/^  QBrush mBracketBrush;$/;"	m	class:QCPSelectionDecoratorBracket
mBracketHeight	gui_sources/qcustomplot.h	/^  int mBracketHeight;$/;"	m	class:QCPSelectionDecoratorBracket
mBracketPen	gui_sources/qcustomplot.h	/^  QPen mBracketPen;$/;"	m	class:QCPSelectionDecoratorBracket
mBracketStyle	gui_sources/qcustomplot.h	/^  BracketStyle mBracketStyle;$/;"	m	class:QCPSelectionDecoratorBracket
mBracketWidth	gui_sources/qcustomplot.h	/^  int mBracketWidth;$/;"	m	class:QCPSelectionDecoratorBracket
mBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush, mSelectedBrush;$/;"	m	class:QCPItemEllipse
mBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush, mSelectedBrush;$/;"	m	class:QCPItemRect
mBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush, mSelectedBrush;$/;"	m	class:QCPItemText
mBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush, mSelectedBrush;$/;"	m	class:QCPItemTracer
mBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush;$/;"	m	class:QCPAbstractPlottable
mBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush;$/;"	m	class:QCPLegend
mBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush;$/;"	m	class:QCPPolarGraph
mBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush;$/;"	m	class:QCPScatterStyle
mBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush;$/;"	m	class:QCPSelectionDecorator
mBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush;$/;"	m	class:QCPSelectionRect
mBrushNegative	gui_sources/qcustomplot.h	/^  QBrush mBrushPositive, mBrushNegative;$/;"	m	class:QCPFinancial
mBrushPositive	gui_sources/qcustomplot.h	/^  QBrush mBrushPositive, mBrushNegative;$/;"	m	class:QCPFinancial
mBuffer	gui_sources/qcustomplot.h	/^  QPixmap mBuffer;$/;"	m	class:QCPPaintBufferPixmap
mBufferDevicePixelRatio	gui_sources/qcustomplot.h	/^  double mBufferDevicePixelRatio;$/;"	m	class:QCustomPlot
mCachedMargin	gui_sources/qcustomplot.h	/^  int mCachedMargin;$/;"	m	class:QCPAxis
mCachedMarginValid	gui_sources/qcustomplot.h	/^  bool mCachedMarginValid;$/;"	m	class:QCPAxis
mCenter	gui_sources/qcustomplot.h	/^  QPointF mCenter;$/;"	m	class:QCPPolarAxisAngular
mCenter	gui_sources/qcustomplot.h	/^  QPointF mCenter;$/;"	m	class:QCPPolarAxisRadial
mChannelFillGraph	gui_sources/qcustomplot.h	/^  QPointer<QCPGraph> mChannelFillGraph;$/;"	m	class:QCPGraph
mChartStyle	gui_sources/qcustomplot.h	/^  ChartStyle mChartStyle;$/;"	m	class:QCPFinancial
mChildren	gui_sources/qcustomplot.h	/^  QHash<QCP::MarginSide, QList<QCPLayoutElement*> > mChildren;$/;"	m	class:QCPMarginGroup
mChildren	gui_sources/qcustomplot.h	/^  QList<QCPLayerable*> mChildren;$/;"	m	class:QCPLayer
mChildrenX	gui_sources/qcustomplot.h	/^  QSet<QCPItemPosition*> mChildrenX, mChildrenY;$/;"	m	class:QCPItemAnchor
mChildrenY	gui_sources/qcustomplot.h	/^  QSet<QCPItemPosition*> mChildrenX, mChildrenY;$/;"	m	class:QCPItemAnchor
mClipAxisRect	gui_sources/qcustomplot.h	/^  QPointer<QCPAxisRect> mClipAxisRect;$/;"	m	class:QCPAbstractItem
mClipToAxisRect	gui_sources/qcustomplot.h	/^  bool mClipToAxisRect;$/;"	m	class:QCPAbstractItem
mColor	gui_sources/qcustomplot.h	/^  QColor mColor, mSelectedColor;$/;"	m	class:QCPItemText
mColor	gui_sources/qcustomplot.h	/^  QColor mColor;$/;"	m	class:QCPLabelPainterPrivate
mColorAxis	gui_sources/qcustomplot.h	/^  QPointer<QCPAxis> mColorAxis;$/;"	m	class:QCPColorScale
mColorBuffer	gui_sources/qcustomplot.h	/^  QVector<QRgb> mColorBuffer; \/\/ have colors premultiplied with alpha (for usage with QImage::Format_ARGB32_Premultiplied)$/;"	m	class:QCPColorGradient
mColorBufferInvalidated	gui_sources/qcustomplot.h	/^  bool mColorBufferInvalidated;$/;"	m	class:QCPColorGradient
mColorInterpolation	gui_sources/qcustomplot.h	/^  ColorInterpolation mColorInterpolation;$/;"	m	class:QCPColorGradient
mColorScale	gui_sources/qcustomplot.h	/^  QPointer<QCPColorScale> mColorScale;$/;"	m	class:QCPColorMap
mColorStops	gui_sources/qcustomplot.h	/^  QMap<double, QColor> mColorStops;$/;"	m	class:QCPColorGradient
mColumnSpacing	gui_sources/qcustomplot.h	/^  int mColumnSpacing, mRowSpacing;$/;"	m	class:QCPLayoutGrid
mColumnStretchFactors	gui_sources/qcustomplot.h	/^  QList<double> mColumnStretchFactors;$/;"	m	class:QCPLayoutGrid
mCurrentLayer	gui_sources/qcustomplot.h	/^  QCPLayer *mCurrentLayer;$/;"	m	class:QCustomPlot
mCustomPath	gui_sources/qcustomplot.h	/^  QPainterPath mCustomPath;$/;"	m	class:QCPScatterStyle
mData	gui_sources/qcustomplot.h	/^  QVector<DataType> mData;$/;"	m	class:QCPDataContainer
mData	gui_sources/qcustomplot.h	/^  double *mData;$/;"	m	class:QCPColorMapData
mDataBounds	gui_sources/qcustomplot.h	/^  QCPRange mDataBounds;$/;"	m	class:QCPColorMapData
mDataContainer	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPDataContainer<DataType> > mDataContainer;$/;"	m	class:QCPAbstractPlottable1D
mDataContainer	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPErrorBarsDataContainer> mDataContainer;$/;"	m	class:QCPErrorBars
mDataContainer	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPGraphDataContainer> mDataContainer;$/;"	m	class:QCPPolarGraph
mDataModified	gui_sources/qcustomplot.h	/^  bool mDataModified;$/;"	m	class:QCPColorMapData
mDataPlottable	gui_sources/qcustomplot.h	/^  QPointer<QCPAbstractPlottable> mDataPlottable;$/;"	m	class:QCPErrorBars
mDataRange	gui_sources/qcustomplot.h	/^  QCPRange mDataRange;$/;"	m	class:QCPColorMap
mDataRange	gui_sources/qcustomplot.h	/^  QCPRange mDataRange;$/;"	m	class:QCPColorScale
mDataRanges	gui_sources/qcustomplot.h	/^  QList<QCPDataRange> mDataRanges;$/;"	m	class:QCPDataSelection
mDataScaleType	gui_sources/qcustomplot.h	/^  QCPAxis::ScaleType mDataScaleType;$/;"	m	class:QCPColorMap
mDataScaleType	gui_sources/qcustomplot.h	/^  QCPAxis::ScaleType mDataScaleType;$/;"	m	class:QCPColorScale
mDateStrategy	gui_sources/qcustomplot.h	/^  enum DateStrategy {dsNone, dsUniformTimeInDay, dsUniformDayInMonth} mDateStrategy;$/;"	m	class:QCPAxisTickerDateTime	typeref:enum:QCPAxisTickerDateTime::DateStrategy
mDateTimeFormat	gui_sources/qcustomplot.h	/^  QString mDateTimeFormat;$/;"	m	class:QCPAxisTickerDateTime
mDateTimeSpec	gui_sources/qcustomplot.h	/^  Qt::TimeSpec mDateTimeSpec;$/;"	m	class:QCPAxisTickerDateTime
mDevicePixelRatio	gui_sources/qcustomplot.h	/^  double mDevicePixelRatio;$/;"	m	class:QCPAbstractPaintBuffer
mDragAngularStart	gui_sources/qcustomplot.h	/^  QCPRange mDragAngularStart;$/;"	m	class:QCPPolarAxisAngular
mDragRadialStart	gui_sources/qcustomplot.h	/^  QList<QCPRange> mDragRadialStart;$/;"	m	class:QCPPolarAxisAngular
mDragStartHorzRange	gui_sources/qcustomplot.h	/^  QList<QCPRange> mDragStartHorzRange, mDragStartVertRange;$/;"	m	class:QCPAxisRect
mDragStartRange	gui_sources/qcustomplot.h	/^  QCPRange mDragStartRange;$/;"	m	class:QCPAxis
mDragStartRange	gui_sources/qcustomplot.h	/^  QCPRange mDragStartRange;$/;"	m	class:QCPPolarAxisRadial
mDragStartVertRange	gui_sources/qcustomplot.h	/^  QList<QCPRange> mDragStartHorzRange, mDragStartVertRange;$/;"	m	class:QCPAxisRect
mDragging	gui_sources/qcustomplot.h	/^  bool mDragging;$/;"	m	class:QCPAxis
mDragging	gui_sources/qcustomplot.h	/^  bool mDragging;$/;"	m	class:QCPAxisRect
mDragging	gui_sources/qcustomplot.h	/^  bool mDragging;$/;"	m	class:QCPPolarAxisAngular
mDragging	gui_sources/qcustomplot.h	/^  bool mDragging;$/;"	m	class:QCPPolarAxisRadial
mElements	gui_sources/qcustomplot.h	/^  QList<QCPLayoutElement*> mElements;$/;"	m	class:QCPLayoutInset
mElements	gui_sources/qcustomplot.h	/^  QList<QList<QCPLayoutElement*> > mElements;$/;"	m	class:QCPLayoutGrid
mEnd	gui_sources/qcustomplot.h	/^  int mBegin, mEnd;$/;"	m	class:QCPDataRange
mErrorType	gui_sources/qcustomplot.h	/^  ErrorType mErrorType;$/;"	m	class:QCPErrorBars
mFieldWidth	gui_sources/qcustomplot.h	/^  QHash<TimeUnit, int> mFieldWidth;$/;"	m	class:QCPAxisTickerTime
mFillOrder	gui_sources/qcustomplot.h	/^  FillOrder mFillOrder;$/;"	m	class:QCPLayoutGrid
mFont	gui_sources/qcustomplot.h	/^  QFont mFont, mSelectedFont;$/;"	m	class:QCPItemText
mFont	gui_sources/qcustomplot.h	/^  QFont mFont;$/;"	m	class:QCPAbstractLegendItem
mFont	gui_sources/qcustomplot.h	/^  QFont mFont;$/;"	m	class:QCPLabelPainterPrivate
mFont	gui_sources/qcustomplot.h	/^  QFont mFont;$/;"	m	class:QCPLegend
mFont	gui_sources/qcustomplot.h	/^  QFont mFont;$/;"	m	class:QCPTextElement
mFormatPattern	gui_sources/qcustomplot.h	/^  QHash<TimeUnit, QString> mFormatPattern;$/;"	m	class:QCPAxisTickerTime
mFractionStyle	gui_sources/qcustomplot.h	/^  FractionStyle mFractionStyle;$/;"	m	class:QCPAxisTickerPi
mGlContext	gui_sources/qcustomplot.h	/^  QSharedPointer<QOpenGLContext> mGlContext;$/;"	m	class:QCustomPlot
mGlContext	gui_sources/qcustomplot.h	/^  QWeakPointer<QOpenGLContext> mGlContext;$/;"	m	class:QCPPaintBufferGlFbo
mGlFrameBuffer	gui_sources/qcustomplot.h	/^  QOpenGLFramebufferObject *mGlFrameBuffer;$/;"	m	class:QCPPaintBufferGlFbo
mGlPBuffer	gui_sources/qcustomplot.h	/^  QGLPixelBuffer *mGlPBuffer;$/;"	m	class:QCPPaintBufferGlPbuffer
mGlPaintDevice	gui_sources/qcustomplot.h	/^  QSharedPointer<QOpenGLPaintDevice> mGlPaintDevice;$/;"	m	class:QCustomPlot
mGlPaintDevice	gui_sources/qcustomplot.h	/^  QWeakPointer<QOpenGLPaintDevice> mGlPaintDevice;$/;"	m	class:QCPPaintBufferGlFbo
mGlSurface	gui_sources/qcustomplot.h	/^  QSharedPointer<QSurface> mGlSurface;$/;"	m	class:QCustomPlot
mGradient	gui_sources/qcustomplot.h	/^  QCPColorGradient mGradient;$/;"	m	class:QCPColorMap
mGradient	gui_sources/qcustomplot.h	/^  QCPColorGradient mGradient;$/;"	m	class:QCPColorScale
mGradientImage	gui_sources/qcustomplot.h	/^  QImage mGradientImage;$/;"	m	class:QCPColorScaleAxisRectPrivate
mGradientImageInvalidated	gui_sources/qcustomplot.h	/^  bool mGradientImageInvalidated;$/;"	m	class:QCPColorScaleAxisRectPrivate
mGraph	gui_sources/qcustomplot.h	/^  QCPGraph *mGraph;$/;"	m	class:QCPItemTracer
mGraphKey	gui_sources/qcustomplot.h	/^  double mGraphKey;$/;"	m	class:QCPItemTracer
mGraphs	gui_sources/qcustomplot.h	/^  QList<QCPGraph*> mGraphs; \/\/ extra list of plottables also in mPlottables that are of type QCPGraph$/;"	m	class:QCustomPlot
mGraphs	gui_sources/qcustomplot.h	/^  QList<QCPPolarGraph*> mGraphs;$/;"	m	class:QCPPolarAxisAngular
mGrid	gui_sources/qcustomplot.h	/^  QCPGrid *mGrid;$/;"	m	class:QCPAxis
mGrid	gui_sources/qcustomplot.h	/^  QCPPolarGrid *mGrid;$/;"	m	class:QCPPolarAxisAngular
mHead	gui_sources/qcustomplot.h	/^  QCPLineEnding mHead, mTail;$/;"	m	class:QCPItemCurve
mHead	gui_sources/qcustomplot.h	/^  QCPLineEnding mHead, mTail;$/;"	m	class:QCPItemLine
mIconBorderPen	gui_sources/qcustomplot.h	/^  QPen mBorderPen, mIconBorderPen;$/;"	m	class:QCPLegend
mIconSize	gui_sources/qcustomplot.h	/^  QSize mIconSize;$/;"	m	class:QCPLegend
mIconTextPadding	gui_sources/qcustomplot.h	/^  int mIconTextPadding;$/;"	m	class:QCPLegend
mIndex	gui_sources/qcustomplot.h	/^  int mIndex;$/;"	m	class:QCPLayer
mInsetAlignment	gui_sources/qcustomplot.h	/^  QList<Qt::Alignment> mInsetAlignment;$/;"	m	class:QCPLayoutInset
mInsetLayout	gui_sources/qcustomplot.h	/^  QCPLayoutInset *mInsetLayout;$/;"	m	class:QCPAxisRect
mInsetLayout	gui_sources/qcustomplot.h	/^  QCPLayoutInset *mInsetLayout;$/;"	m	class:QCPPolarAxisAngular
mInsetPlacement	gui_sources/qcustomplot.h	/^  QList<InsetPlacement> mInsetPlacement;$/;"	m	class:QCPLayoutInset
mInsetRect	gui_sources/qcustomplot.h	/^  QList<QRectF> mInsetRect;$/;"	m	class:QCPLayoutInset
mInteractions	gui_sources/qcustomplot.h	/^  QCP::Interactions mInteractions;$/;"	m	class:QCustomPlot
mInterpolate	gui_sources/qcustomplot.h	/^  bool mInterpolate;$/;"	m	class:QCPColorMap
mInterpolating	gui_sources/qcustomplot.h	/^  bool mInterpolating;$/;"	m	class:QCPItemTracer
mInvalidated	gui_sources/qcustomplot.h	/^  bool mInvalidated;$/;"	m	class:QCPAbstractPaintBuffer
mInverted	gui_sources/qcustomplot.h	/^  bool mInverted;$/;"	m	class:QCPLineEnding
mIsAntialiasing	gui_sources/qcustomplot.h	/^  bool mIsAntialiasing;$/;"	m	class:QCPPainter
mIsEmpty	gui_sources/qcustomplot.h	/^  bool mIsEmpty;$/;"	m	class:QCPColorMapData
mItems	gui_sources/qcustomplot.h	/^  QList<QCPAbstractItem*> mItems;$/;"	m	class:QCustomPlot
mKey	gui_sources/qcustomplot.h	/^  double mKey, mValue;$/;"	m	class:QCPItemPosition
mKeyAxis	gui_sources/qcustomplot.h	/^  QPointer<QCPAxis> mKeyAxis, mValueAxis;$/;"	m	class:QCPAbstractPlottable
mKeyAxis	gui_sources/qcustomplot.h	/^  QPointer<QCPAxis> mKeyAxis, mValueAxis;$/;"	m	class:QCPItemPosition
mKeyAxis	gui_sources/qcustomplot.h	/^  QPointer<QCPPolarAxisAngular> mKeyAxis;$/;"	m	class:QCPPolarGraph
mKeyRange	gui_sources/qcustomplot.h	/^  QCPRange mKeyRange, mValueRange;$/;"	m	class:QCPColorMapData
mKeySize	gui_sources/qcustomplot.h	/^  int mKeySize, mValueSize;$/;"	m	class:QCPColorMapData
mLabel	gui_sources/qcustomplot.h	/^  QString mLabel;$/;"	m	class:QCPAxis
mLabel	gui_sources/qcustomplot.h	/^  QString mLabel;$/;"	m	class:QCPPolarAxisAngular
mLabel	gui_sources/qcustomplot.h	/^  QString mLabel;$/;"	m	class:QCPPolarAxisRadial
mLabelCache	gui_sources/qcustomplot.h	/^  QCache<QString, CachedLabel> mLabelCache;$/;"	m	class:QCPAxisPainterPrivate
mLabelCache	gui_sources/qcustomplot.h	/^  QCache<QString, CachedLabel> mLabelCache;$/;"	m	class:QCPLabelPainterPrivate
mLabelColor	gui_sources/qcustomplot.h	/^  QColor mLabelColor, mSelectedLabelColor;$/;"	m	class:QCPAxis
mLabelColor	gui_sources/qcustomplot.h	/^  QColor mLabelColor, mSelectedLabelColor;$/;"	m	class:QCPPolarAxisAngular
mLabelColor	gui_sources/qcustomplot.h	/^  QColor mLabelColor, mSelectedLabelColor;$/;"	m	class:QCPPolarAxisRadial
mLabelFont	gui_sources/qcustomplot.h	/^  QFont mLabelFont, mSelectedLabelFont;$/;"	m	class:QCPAxis
mLabelFont	gui_sources/qcustomplot.h	/^  QFont mLabelFont, mSelectedLabelFont;$/;"	m	class:QCPPolarAxisAngular
mLabelFont	gui_sources/qcustomplot.h	/^  QFont mLabelFont, mSelectedLabelFont;$/;"	m	class:QCPPolarAxisRadial
mLabelPadding	gui_sources/qcustomplot.h	/^  int mLabelPadding;$/;"	m	class:QCPPolarAxisAngular
mLabelPadding	gui_sources/qcustomplot.h	/^  int mLabelPadding;$/;"	m	class:QCPPolarAxisRadial
mLabelPainter	gui_sources/qcustomplot.h	/^  QCPLabelPainterPrivate mLabelPainter;$/;"	m	class:QCPPolarAxisAngular
mLabelPainter	gui_sources/qcustomplot.h	/^  QCPLabelPainterPrivate mLabelPainter;$/;"	m	class:QCPPolarAxisRadial
mLabelParameterHash	gui_sources/qcustomplot.h	/^  QByteArray mLabelParameterHash; \/\/ to determine whether mLabelCache needs to be cleared due to changed parameters$/;"	m	class:QCPAxisPainterPrivate
mLabelParameterHash	gui_sources/qcustomplot.h	/^  QByteArray mLabelParameterHash; \/\/ to determine whether mLabelCache needs to be cleared due to changed parameters$/;"	m	class:QCPLabelPainterPrivate
mLabelSelectionBox	gui_sources/qcustomplot.h	/^  QRect mAxisSelectionBox, mTickLabelsSelectionBox, mLabelSelectionBox;$/;"	m	class:QCPAxisPainterPrivate
mLabelSelectionBox	gui_sources/qcustomplot.h	/^  QRect mAxisSelectionBox, mTickLabelsSelectionBox, mLabelSelectionBox;$/;"	m	class:QCPLabelPainterPrivate
mLayer	gui_sources/qcustomplot.h	/^  QCPLayer *mLayer;$/;"	m	class:QCPLayerable
mLayers	gui_sources/qcustomplot.h	/^  QList<QCPLayer*> mLayers;$/;"	m	class:QCustomPlot
mLegendIcon	gui_sources/qcustomplot.h	/^  QPixmap mLegendIcon;$/;"	m	class:QCPColorMap
mLength	gui_sources/qcustomplot.h	/^  double mLength;$/;"	m	class:QCPItemBracket
mLength	gui_sources/qcustomplot.h	/^  double mWidth, mLength;$/;"	m	class:QCPLineEnding
mLetterCapHeight	gui_sources/qcustomplot.h	/^  int mLetterCapHeight, mLetterDescent;$/;"	m	class:QCPLabelPainterPrivate
mLetterDescent	gui_sources/qcustomplot.h	/^  int mLetterCapHeight, mLetterDescent;$/;"	m	class:QCPLabelPainterPrivate
mLevelCount	gui_sources/qcustomplot.h	/^  int mLevelCount;$/;"	m	class:QCPColorGradient
mLineStyle	gui_sources/qcustomplot.h	/^  LineStyle mLineStyle;$/;"	m	class:QCPCurve
mLineStyle	gui_sources/qcustomplot.h	/^  LineStyle mLineStyle;$/;"	m	class:QCPGraph
mLineStyle	gui_sources/qcustomplot.h	/^  LineStyle mLineStyle;$/;"	m	class:QCPPolarGraph
mLogBase	gui_sources/qcustomplot.h	/^  double mLogBase;$/;"	m	class:QCPAxisTickerLog
mLogBaseLnInv	gui_sources/qcustomplot.h	/^  double mLogBaseLnInv;$/;"	m	class:QCPAxisTickerLog
mMapData	gui_sources/qcustomplot.h	/^  QCPColorMapData *mMapData;$/;"	m	class:QCPColorMap
mMapImage	gui_sources/qcustomplot.h	/^  QImage mMapImage, mUndersampledMapImage;$/;"	m	class:QCPColorMap
mMapImageInvalidated	gui_sources/qcustomplot.h	/^  bool mMapImageInvalidated;$/;"	m	class:QCPColorMap
mMarginGroups	gui_sources/qcustomplot.h	/^  QHash<QCP::MarginSide, QCPMarginGroup*> mMarginGroups;$/;"	m	class:QCPLayoutElement
mMargins	gui_sources/qcustomplot.h	/^  QMargins mMargins, mMinimumMargins;$/;"	m	class:QCPLayoutElement
mMaximumSize	gui_sources/qcustomplot.h	/^  QSize mMinimumSize, mMaximumSize;$/;"	m	class:QCPLayoutElement
mMedianPen	gui_sources/qcustomplot.h	/^  QPen mMedianPen;$/;"	m	class:QCPStatisticalBox
mMinimumMargins	gui_sources/qcustomplot.h	/^  QMargins mMargins, mMinimumMargins;$/;"	m	class:QCPLayoutElement
mMinimumSize	gui_sources/qcustomplot.h	/^  QSize mMinimumSize, mMaximumSize;$/;"	m	class:QCPLayoutElement
mMode	gui_sources/qcustomplot.h	/^  LayerMode mMode;$/;"	m	class:QCPLayer
mModes	gui_sources/qcustomplot.h	/^  PainterModes mModes;$/;"	m	class:QCPPainter
mMouseEventLayerable	gui_sources/qcustomplot.h	/^  QPointer<QCPLayerable> mMouseEventLayerable;$/;"	m	class:QCustomPlot
mMouseEventLayerableDetails	gui_sources/qcustomplot.h	/^  QVariant mMouseEventLayerableDetails;$/;"	m	class:QCustomPlot
mMouseHasMoved	gui_sources/qcustomplot.h	/^  bool mMouseHasMoved;$/;"	m	class:QCustomPlot
mMousePressPos	gui_sources/qcustomplot.h	/^  QPoint mMousePressPos;$/;"	m	class:QCustomPlot
mMouseSignalLayerable	gui_sources/qcustomplot.h	/^  QPointer<QCPLayerable> mMouseSignalLayerable;$/;"	m	class:QCustomPlot
mMouseSignalLayerableDetails	gui_sources/qcustomplot.h	/^  QVariant mMouseSignalLayerableDetails;$/;"	m	class:QCustomPlot
mMultiSelectModifier	gui_sources/qcustomplot.h	/^  Qt::KeyboardModifier mMultiSelectModifier;$/;"	m	class:QCustomPlot
mMultiplicationSymbol	gui_sources/qcustomplot.h	/^  QChar mMultiplicationSymbol;$/;"	m	class:QCPLabelPainterPrivate
mMultisamples	gui_sources/qcustomplot.h	/^  int mMultisamples;$/;"	m	class:QCPPaintBufferGlPbuffer
mName	gui_sources/qcustomplot.h	/^  QString mName;$/;"	m	class:QCPAbstractPlottable
mName	gui_sources/qcustomplot.h	/^  QString mName;$/;"	m	class:QCPItemAnchor
mName	gui_sources/qcustomplot.h	/^  QString mName;$/;"	m	class:QCPLayer
mName	gui_sources/qcustomplot.h	/^  QString mName;$/;"	m	class:QCPPolarGraph
mNanColor	gui_sources/qcustomplot.h	/^  QColor mNanColor;$/;"	m	class:QCPColorGradient
mNanHandling	gui_sources/qcustomplot.h	/^  NanHandling mNanHandling;$/;"	m	class:QCPColorGradient
mNoAntialiasingOnDrag	gui_sources/qcustomplot.h	/^  bool mNoAntialiasingOnDrag;$/;"	m	class:QCustomPlot
mNotAADragBackup	gui_sources/qcustomplot.h	/^  QCP::AntialiasedElements mAADragBackup, mNotAADragBackup;$/;"	m	class:QCPAxis
mNotAADragBackup	gui_sources/qcustomplot.h	/^  QCP::AntialiasedElements mAADragBackup, mNotAADragBackup;$/;"	m	class:QCPAxisRect
mNotAADragBackup	gui_sources/qcustomplot.h	/^  QCP::AntialiasedElements mAADragBackup, mNotAADragBackup;$/;"	m	class:QCPPolarAxisAngular
mNotAADragBackup	gui_sources/qcustomplot.h	/^  QCP::AntialiasedElements mAADragBackup, mNotAADragBackup;$/;"	m	class:QCPPolarAxisRadial
mNotAntialiasedElements	gui_sources/qcustomplot.h	/^  QCP::AntialiasedElements mAntialiasedElements, mNotAntialiasedElements;$/;"	m	class:QCustomPlot
mNumberBeautifulPowers	gui_sources/qcustomplot.h	/^  bool mNumberBeautifulPowers;$/;"	m	class:QCPAxis
mNumberBeautifulPowers	gui_sources/qcustomplot.h	/^  bool mNumberBeautifulPowers;$/;"	m	class:QCPPolarAxisAngular
mNumberBeautifulPowers	gui_sources/qcustomplot.h	/^  bool mNumberBeautifulPowers;$/;"	m	class:QCPPolarAxisRadial
mNumberFormatChar	gui_sources/qcustomplot.h	/^  QLatin1Char mNumberFormatChar;$/;"	m	class:QCPAxis
mNumberFormatChar	gui_sources/qcustomplot.h	/^  QLatin1Char mNumberFormatChar;$/;"	m	class:QCPPolarAxisAngular
mNumberFormatChar	gui_sources/qcustomplot.h	/^  QLatin1Char mNumberFormatChar;$/;"	m	class:QCPPolarAxisRadial
mNumberMultiplyCross	gui_sources/qcustomplot.h	/^  bool mNumberMultiplyCross;$/;"	m	class:QCPPolarAxisAngular
mNumberMultiplyCross	gui_sources/qcustomplot.h	/^  bool mNumberMultiplyCross;$/;"	m	class:QCPPolarAxisRadial
mNumberPrecision	gui_sources/qcustomplot.h	/^  int mNumberPrecision;$/;"	m	class:QCPAxis
mNumberPrecision	gui_sources/qcustomplot.h	/^  int mNumberPrecision;$/;"	m	class:QCPPolarAxisAngular
mNumberPrecision	gui_sources/qcustomplot.h	/^  int mNumberPrecision;$/;"	m	class:QCPPolarAxisRadial
mOpenGl	gui_sources/qcustomplot.h	/^  bool mOpenGl;$/;"	m	class:QCustomPlot
mOpenGlAntialiasedElementsBackup	gui_sources/qcustomplot.h	/^  QCP::AntialiasedElements mOpenGlAntialiasedElementsBackup;$/;"	m	class:QCustomPlot
mOpenGlCacheLabelsBackup	gui_sources/qcustomplot.h	/^  bool mOpenGlCacheLabelsBackup;$/;"	m	class:QCustomPlot
mOpenGlMultisamples	gui_sources/qcustomplot.h	/^  int mOpenGlMultisamples;$/;"	m	class:QCustomPlot
mOrientation	gui_sources/qcustomplot.h	/^  Qt::Orientation mOrientation;$/;"	m	class:QCPAxis
mOuterRect	gui_sources/qcustomplot.h	/^  QRect mRect, mOuterRect;$/;"	m	class:QCPLayoutElement
mOutlierStyle	gui_sources/qcustomplot.h	/^  QCPScatterStyle mOutlierStyle;$/;"	m	class:QCPStatisticalBox
mPadding	gui_sources/qcustomplot.h	/^  QMargins mPadding;$/;"	m	class:QCPItemText
mPadding	gui_sources/qcustomplot.h	/^  int mPadding;$/;"	m	class:QCPAxis
mPadding	gui_sources/qcustomplot.h	/^  int mPadding;$/;"	m	class:QCPLabelPainterPrivate
mPaintBuffer	gui_sources/qcustomplot.h	/^  QWeakPointer<QCPAbstractPaintBuffer> mPaintBuffer;$/;"	m	class:QCPLayer
mPaintBuffers	gui_sources/qcustomplot.h	/^  QList<QSharedPointer<QCPAbstractPaintBuffer> > mPaintBuffers;$/;"	m	class:QCustomPlot
mParentAnchorX	gui_sources/qcustomplot.h	/^  QCPItemAnchor *mParentAnchorX, *mParentAnchorY;$/;"	m	class:QCPItemPosition
mParentAnchorY	gui_sources/qcustomplot.h	/^  QCPItemAnchor *mParentAnchorX, *mParentAnchorY;$/;"	m	class:QCPItemPosition
mParentAxis	gui_sources/qcustomplot.cpp	/^  mParentAxis(parentAxis)$/;"	f
mParentAxis	gui_sources/qcustomplot.h	/^  QCPAxis *mParentAxis;$/;"	m	class:QCPGrid
mParentAxis	gui_sources/qcustomplot.h	/^  QCPPolarAxisAngular *mParentAxis;$/;"	m	class:QCPPolarGrid
mParentColorScale	gui_sources/qcustomplot.h	/^  QCPColorScale *mParentColorScale;$/;"	m	class:QCPColorScaleAxisRectPrivate
mParentItem	gui_sources/qcustomplot.h	/^  QCPAbstractItem *mParentItem;$/;"	m	class:QCPItemAnchor
mParentLayerable	gui_sources/qcustomplot.h	/^  QPointer<QCPLayerable> mParentLayerable;$/;"	m	class:QCPLayerable
mParentLayout	gui_sources/qcustomplot.h	/^  QCPLayout *mParentLayout;$/;"	m	class:QCPLayoutElement
mParentLegend	gui_sources/qcustomplot.h	/^  QCPLegend *mParentLegend;$/;"	m	class:QCPAbstractLegendItem
mParentPlot	gui_sources/qcustomplot.h	/^  QCustomPlot *mParentPlot;$/;"	m	class:QCPAxisPainterPrivate
mParentPlot	gui_sources/qcustomplot.h	/^  QCustomPlot *mParentPlot;$/;"	m	class:QCPBarsGroup
mParentPlot	gui_sources/qcustomplot.h	/^  QCustomPlot *mParentPlot;$/;"	m	class:QCPItemAnchor
mParentPlot	gui_sources/qcustomplot.h	/^  QCustomPlot *mParentPlot;$/;"	m	class:QCPLabelPainterPrivate
mParentPlot	gui_sources/qcustomplot.h	/^  QCustomPlot *mParentPlot;$/;"	m	class:QCPLayer
mParentPlot	gui_sources/qcustomplot.h	/^  QCustomPlot *mParentPlot;$/;"	m	class:QCPLayerable
mParentPlot	gui_sources/qcustomplot.h	/^  QCustomPlot *mParentPlot;$/;"	m	class:QCPMarginGroup
mPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemBracket
mPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemCurve
mPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemEllipse
mPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemLine
mPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemPixmap
mPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemRect
mPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemStraightLine
mPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemText
mPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemTracer
mPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSubGridPen, mZeroLinePen;$/;"	m	class:QCPGrid
mPen	gui_sources/qcustomplot.h	/^  QPen mPen;$/;"	m	class:QCPAbstractPlottable
mPen	gui_sources/qcustomplot.h	/^  QPen mPen;$/;"	m	class:QCPPolarGraph
mPen	gui_sources/qcustomplot.h	/^  QPen mPen;$/;"	m	class:QCPScatterStyle
mPen	gui_sources/qcustomplot.h	/^  QPen mPen;$/;"	m	class:QCPSelectionDecorator
mPen	gui_sources/qcustomplot.h	/^  QPen mPen;$/;"	m	class:QCPSelectionRect
mPenDefined	gui_sources/qcustomplot.h	/^  bool mPenDefined;$/;"	m	class:QCPScatterStyle
mPenNegative	gui_sources/qcustomplot.h	/^  QPen mPenPositive, mPenNegative;$/;"	m	class:QCPFinancial
mPenPositive	gui_sources/qcustomplot.h	/^  QPen mPenPositive, mPenNegative;$/;"	m	class:QCPFinancial
mPeriodic	gui_sources/qcustomplot.h	/^  bool mPeriodic;$/;"	m	class:QCPColorGradient
mPeriodic	gui_sources/qcustomplot.h	/^  bool mPeriodic;$/;"	m	class:QCPPolarGraph
mPeriodicity	gui_sources/qcustomplot.h	/^  int mPeriodicity;$/;"	m	class:QCPAxisTickerPi
mPiSymbol	gui_sources/qcustomplot.h	/^  QString mPiSymbol;$/;"	m	class:QCPAxisTickerPi
mPiTickStep	gui_sources/qcustomplot.h	/^  double mPiTickStep; \/\/ size of one tick step in units of mPiValue$/;"	m	class:QCPAxisTickerPi
mPiValue	gui_sources/qcustomplot.h	/^  double mPiValue;$/;"	m	class:QCPAxisTickerPi
mPixmap	gui_sources/qcustomplot.h	/^  QPixmap mPixmap;$/;"	m	class:QCPItemPixmap
mPixmap	gui_sources/qcustomplot.h	/^  QPixmap mPixmap;$/;"	m	class:QCPScatterStyle
mPlotLayout	gui_sources/qcustomplot.h	/^  QCPLayoutGrid *mPlotLayout;$/;"	m	class:QCustomPlot
mPlottable	gui_sources/qcustomplot.h	/^  QCPAbstractPlottable *mPlottable;$/;"	m	class:QCPPlottableLegendItem
mPlottable	gui_sources/qcustomplot.h	/^  QCPAbstractPlottable *mPlottable;$/;"	m	class:QCPSelectionDecorator
mPlottables	gui_sources/qcustomplot.h	/^  QList<QCPAbstractPlottable*> mPlottables;$/;"	m	class:QCustomPlot
mPlottingHints	gui_sources/qcustomplot.h	/^  QCP::PlottingHints mPlottingHints;$/;"	m	class:QCustomPlot
mPolarGraph	gui_sources/qcustomplot.h	/^  QCPPolarGraph *mPolarGraph;$/;"	m	class:QCPPolarLegendItem
mPositionAlignment	gui_sources/qcustomplot.h	/^  Qt::Alignment mPositionAlignment;$/;"	m	class:QCPItemText
mPositionTypeX	gui_sources/qcustomplot.h	/^  PositionType mPositionTypeX, mPositionTypeY;$/;"	m	class:QCPItemPosition
mPositionTypeY	gui_sources/qcustomplot.h	/^  PositionType mPositionTypeX, mPositionTypeY;$/;"	m	class:QCPItemPosition
mPositions	gui_sources/qcustomplot.h	/^  QList<QCPItemPosition*> mPositions;$/;"	m	class:QCPAbstractItem
mPreallocIteration	gui_sources/qcustomplot.h	/^  int mPreallocIteration;$/;"	m	class:QCPDataContainer
mPreallocSize	gui_sources/qcustomplot.h	/^  int mPreallocSize;$/;"	m	class:QCPDataContainer
mRadialAxes	gui_sources/qcustomplot.h	/^  QList<QCPPolarAxisRadial*> mRadialAxes;$/;"	m	class:QCPPolarAxisAngular
mRadialAxis	gui_sources/qcustomplot.h	/^  QPointer<QCPPolarAxisRadial> mRadialAxis;$/;"	m	class:QCPPolarGrid
mRadialPen	gui_sources/qcustomplot.h	/^  QPen mRadialPen, mRadialSubGridPen, mRadialZeroLinePen;$/;"	m	class:QCPPolarGrid
mRadialSubGridPen	gui_sources/qcustomplot.h	/^  QPen mRadialPen, mRadialSubGridPen, mRadialZeroLinePen;$/;"	m	class:QCPPolarGrid
mRadialZeroLinePen	gui_sources/qcustomplot.h	/^  QPen mRadialPen, mRadialSubGridPen, mRadialZeroLinePen;$/;"	m	class:QCPPolarGrid
mRadius	gui_sources/qcustomplot.h	/^  double mRadius;$/;"	m	class:QCPPolarAxisAngular
mRadius	gui_sources/qcustomplot.h	/^  double mRadius;$/;"	m	class:QCPPolarAxisRadial
mRange	gui_sources/qcustomplot.h	/^  QCPRange mRange;$/;"	m	class:QCPAxis
mRange	gui_sources/qcustomplot.h	/^  QCPRange mRange;$/;"	m	class:QCPPolarAxisAngular
mRange	gui_sources/qcustomplot.h	/^  QCPRange mRange;$/;"	m	class:QCPPolarAxisRadial
mRangeDrag	gui_sources/qcustomplot.h	/^  Qt::Orientations mRangeDrag, mRangeZoom;$/;"	m	class:QCPAxisRect
mRangeDrag	gui_sources/qcustomplot.h	/^  bool mRangeDrag;$/;"	m	class:QCPPolarAxisAngular
mRangeDrag	gui_sources/qcustomplot.h	/^  bool mRangeDrag;$/;"	m	class:QCPPolarAxisRadial
mRangeDragHorzAxis	gui_sources/qcustomplot.h	/^  QList<QPointer<QCPAxis> > mRangeDragHorzAxis, mRangeDragVertAxis;$/;"	m	class:QCPAxisRect
mRangeDragVertAxis	gui_sources/qcustomplot.h	/^  QList<QPointer<QCPAxis> > mRangeDragHorzAxis, mRangeDragVertAxis;$/;"	m	class:QCPAxisRect
mRangeReversed	gui_sources/qcustomplot.h	/^  bool mRangeReversed;$/;"	m	class:QCPAxis
mRangeReversed	gui_sources/qcustomplot.h	/^  bool mRangeReversed;$/;"	m	class:QCPPolarAxisAngular
mRangeReversed	gui_sources/qcustomplot.h	/^  bool mRangeReversed;$/;"	m	class:QCPPolarAxisRadial
mRangeZoom	gui_sources/qcustomplot.h	/^  Qt::Orientations mRangeDrag, mRangeZoom;$/;"	m	class:QCPAxisRect
mRangeZoom	gui_sources/qcustomplot.h	/^  bool mRangeZoom;$/;"	m	class:QCPPolarAxisAngular
mRangeZoom	gui_sources/qcustomplot.h	/^  bool mRangeZoom;$/;"	m	class:QCPPolarAxisRadial
mRangeZoomFactor	gui_sources/qcustomplot.h	/^  double mRangeZoomFactor;$/;"	m	class:QCPPolarAxisAngular
mRangeZoomFactor	gui_sources/qcustomplot.h	/^  double mRangeZoomFactor;$/;"	m	class:QCPPolarAxisRadial
mRangeZoomFactorHorz	gui_sources/qcustomplot.h	/^  double mRangeZoomFactorHorz, mRangeZoomFactorVert;$/;"	m	class:QCPAxisRect
mRangeZoomFactorVert	gui_sources/qcustomplot.h	/^  double mRangeZoomFactorHorz, mRangeZoomFactorVert;$/;"	m	class:QCPAxisRect
mRangeZoomHorzAxis	gui_sources/qcustomplot.h	/^  QList<QPointer<QCPAxis> > mRangeZoomHorzAxis, mRangeZoomVertAxis;$/;"	m	class:QCPAxisRect
mRangeZoomVertAxis	gui_sources/qcustomplot.h	/^  QList<QPointer<QCPAxis> > mRangeZoomHorzAxis, mRangeZoomVertAxis;$/;"	m	class:QCPAxisRect
mRect	gui_sources/qcustomplot.h	/^  QRect mRect, mOuterRect;$/;"	m	class:QCPLayoutElement
mRect	gui_sources/qcustomplot.h	/^  QRect mRect;$/;"	m	class:QCPSelectionRect
mReplotQueued	gui_sources/qcustomplot.h	/^  bool mReplotQueued;$/;"	m	class:QCustomPlot
mReplotTime	gui_sources/qcustomplot.h	/^  double mReplotTime, mReplotTimeAverage;$/;"	m	class:QCustomPlot
mReplotTimeAverage	gui_sources/qcustomplot.h	/^  double mReplotTime, mReplotTimeAverage;$/;"	m	class:QCustomPlot
mReplotting	gui_sources/qcustomplot.h	/^  bool mReplotting;$/;"	m	class:QCustomPlot
mRotation	gui_sources/qcustomplot.h	/^  double mRotation; \/\/ this is the rotation applied uniformly to all labels, not the heterogeneous rotation in amCircularRotated mode$/;"	m	class:QCPLabelPainterPrivate
mRotation	gui_sources/qcustomplot.h	/^  double mRotation;$/;"	m	class:QCPItemText
mRowSpacing	gui_sources/qcustomplot.h	/^  int mColumnSpacing, mRowSpacing;$/;"	m	class:QCPLayoutGrid
mRowStretchFactors	gui_sources/qcustomplot.h	/^  QList<double> mRowStretchFactors;$/;"	m	class:QCPLayoutGrid
mScaleStrategy	gui_sources/qcustomplot.h	/^  ScaleStrategy mScaleStrategy;$/;"	m	class:QCPAxisTickerFixed
mScaleType	gui_sources/qcustomplot.h	/^  ScaleType mScaleType;$/;"	m	class:QCPAxis
mScaleType	gui_sources/qcustomplot.h	/^  ScaleType mScaleType;$/;"	m	class:QCPPolarAxisRadial
mScaled	gui_sources/qcustomplot.h	/^  bool mScaled;$/;"	m	class:QCPItemPixmap
mScaledBackgroundPixmap	gui_sources/qcustomplot.h	/^  QPixmap mScaledBackgroundPixmap;$/;"	m	class:QCPAxisRect
mScaledBackgroundPixmap	gui_sources/qcustomplot.h	/^  QPixmap mScaledBackgroundPixmap;$/;"	m	class:QCPPolarAxisAngular
mScaledBackgroundPixmap	gui_sources/qcustomplot.h	/^  QPixmap mScaledBackgroundPixmap;$/;"	m	class:QCustomPlot
mScaledPixmap	gui_sources/qcustomplot.h	/^  QPixmap mScaledPixmap;$/;"	m	class:QCPItemPixmap
mScaledPixmapInvalidated	gui_sources/qcustomplot.h	/^  bool mScaledPixmapInvalidated;$/;"	m	class:QCPItemPixmap
mScatterSkip	gui_sources/qcustomplot.h	/^  int mScatterSkip;$/;"	m	class:QCPCurve
mScatterSkip	gui_sources/qcustomplot.h	/^  int mScatterSkip;$/;"	m	class:QCPGraph
mScatterStyle	gui_sources/qcustomplot.h	/^  QCPScatterStyle mScatterStyle;$/;"	m	class:QCPCurve
mScatterStyle	gui_sources/qcustomplot.h	/^  QCPScatterStyle mScatterStyle;$/;"	m	class:QCPGraph
mScatterStyle	gui_sources/qcustomplot.h	/^  QCPScatterStyle mScatterStyle;$/;"	m	class:QCPPolarGraph
mScatterStyle	gui_sources/qcustomplot.h	/^  QCPScatterStyle mScatterStyle;$/;"	m	class:QCPSelectionDecorator
mSelectable	gui_sources/qcustomplot.h	/^  QCP::SelectionType mSelectable;$/;"	m	class:QCPAbstractPlottable
mSelectable	gui_sources/qcustomplot.h	/^  QCP::SelectionType mSelectable;$/;"	m	class:QCPPolarGraph
mSelectable	gui_sources/qcustomplot.h	/^  bool mSelectable, mSelected;$/;"	m	class:QCPAbstractItem
mSelectable	gui_sources/qcustomplot.h	/^  bool mSelectable, mSelected;$/;"	m	class:QCPAbstractLegendItem
mSelectable	gui_sources/qcustomplot.h	/^  bool mSelectable, mSelected;$/;"	m	class:QCPTextElement
mSelectableParts	gui_sources/qcustomplot.h	/^  SelectableParts mSelectableParts, mSelectedParts;$/;"	m	class:QCPAxis
mSelectableParts	gui_sources/qcustomplot.h	/^  SelectableParts mSelectableParts, mSelectedParts;$/;"	m	class:QCPPolarAxisAngular
mSelectableParts	gui_sources/qcustomplot.h	/^  SelectableParts mSelectableParts, mSelectedParts;$/;"	m	class:QCPPolarAxisRadial
mSelectableParts	gui_sources/qcustomplot.h	/^  SelectableParts mSelectedParts, mSelectableParts;$/;"	m	class:QCPLegend
mSelected	gui_sources/qcustomplot.h	/^  bool mSelectable, mSelected;$/;"	m	class:QCPAbstractItem
mSelected	gui_sources/qcustomplot.h	/^  bool mSelectable, mSelected;$/;"	m	class:QCPAbstractLegendItem
mSelected	gui_sources/qcustomplot.h	/^  bool mSelectable, mSelected;$/;"	m	class:QCPTextElement
mSelectedBasePen	gui_sources/qcustomplot.h	/^  QPen mBasePen, mSelectedBasePen;$/;"	m	class:QCPAxis
mSelectedBasePen	gui_sources/qcustomplot.h	/^  QPen mBasePen, mSelectedBasePen;$/;"	m	class:QCPPolarAxisAngular
mSelectedBasePen	gui_sources/qcustomplot.h	/^  QPen mBasePen, mSelectedBasePen;$/;"	m	class:QCPPolarAxisRadial
mSelectedBorderPen	gui_sources/qcustomplot.h	/^  QPen mSelectedBorderPen, mSelectedIconBorderPen;$/;"	m	class:QCPLegend
mSelectedBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush, mSelectedBrush;$/;"	m	class:QCPItemEllipse
mSelectedBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush, mSelectedBrush;$/;"	m	class:QCPItemRect
mSelectedBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush, mSelectedBrush;$/;"	m	class:QCPItemText
mSelectedBrush	gui_sources/qcustomplot.h	/^  QBrush mBrush, mSelectedBrush;$/;"	m	class:QCPItemTracer
mSelectedBrush	gui_sources/qcustomplot.h	/^  QBrush mSelectedBrush;$/;"	m	class:QCPLegend
mSelectedColor	gui_sources/qcustomplot.h	/^  QColor mColor, mSelectedColor;$/;"	m	class:QCPItemText
mSelectedFont	gui_sources/qcustomplot.h	/^  QFont mFont, mSelectedFont;$/;"	m	class:QCPItemText
mSelectedFont	gui_sources/qcustomplot.h	/^  QFont mSelectedFont;$/;"	m	class:QCPAbstractLegendItem
mSelectedFont	gui_sources/qcustomplot.h	/^  QFont mSelectedFont;$/;"	m	class:QCPLegend
mSelectedFont	gui_sources/qcustomplot.h	/^  QFont mSelectedFont;$/;"	m	class:QCPTextElement
mSelectedIconBorderPen	gui_sources/qcustomplot.h	/^  QPen mSelectedBorderPen, mSelectedIconBorderPen;$/;"	m	class:QCPLegend
mSelectedLabelColor	gui_sources/qcustomplot.h	/^  QColor mLabelColor, mSelectedLabelColor;$/;"	m	class:QCPAxis
mSelectedLabelColor	gui_sources/qcustomplot.h	/^  QColor mLabelColor, mSelectedLabelColor;$/;"	m	class:QCPPolarAxisAngular
mSelectedLabelColor	gui_sources/qcustomplot.h	/^  QColor mLabelColor, mSelectedLabelColor;$/;"	m	class:QCPPolarAxisRadial
mSelectedLabelFont	gui_sources/qcustomplot.h	/^  QFont mLabelFont, mSelectedLabelFont;$/;"	m	class:QCPAxis
mSelectedLabelFont	gui_sources/qcustomplot.h	/^  QFont mLabelFont, mSelectedLabelFont;$/;"	m	class:QCPPolarAxisAngular
mSelectedLabelFont	gui_sources/qcustomplot.h	/^  QFont mLabelFont, mSelectedLabelFont;$/;"	m	class:QCPPolarAxisRadial
mSelectedParts	gui_sources/qcustomplot.h	/^  SelectableParts mSelectableParts, mSelectedParts;$/;"	m	class:QCPAxis
mSelectedParts	gui_sources/qcustomplot.h	/^  SelectableParts mSelectableParts, mSelectedParts;$/;"	m	class:QCPPolarAxisAngular
mSelectedParts	gui_sources/qcustomplot.h	/^  SelectableParts mSelectableParts, mSelectedParts;$/;"	m	class:QCPPolarAxisRadial
mSelectedParts	gui_sources/qcustomplot.h	/^  SelectableParts mSelectedParts, mSelectableParts;$/;"	m	class:QCPLegend
mSelectedPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemBracket
mSelectedPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemCurve
mSelectedPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemEllipse
mSelectedPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemLine
mSelectedPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemPixmap
mSelectedPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemRect
mSelectedPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemStraightLine
mSelectedPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemText
mSelectedPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSelectedPen;$/;"	m	class:QCPItemTracer
mSelectedSubTickPen	gui_sources/qcustomplot.h	/^  QPen mSubTickPen, mSelectedSubTickPen;$/;"	m	class:QCPAxis
mSelectedSubTickPen	gui_sources/qcustomplot.h	/^  QPen mSubTickPen, mSelectedSubTickPen;$/;"	m	class:QCPPolarAxisAngular
mSelectedSubTickPen	gui_sources/qcustomplot.h	/^  QPen mSubTickPen, mSelectedSubTickPen;$/;"	m	class:QCPPolarAxisRadial
mSelectedTextColor	gui_sources/qcustomplot.h	/^  QColor mSelectedTextColor;$/;"	m	class:QCPAbstractLegendItem
mSelectedTextColor	gui_sources/qcustomplot.h	/^  QColor mSelectedTextColor;$/;"	m	class:QCPLegend
mSelectedTextColor	gui_sources/qcustomplot.h	/^  QColor mSelectedTextColor;$/;"	m	class:QCPTextElement
mSelectedTickLabelColor	gui_sources/qcustomplot.h	/^  QColor mTickLabelColor, mSelectedTickLabelColor;$/;"	m	class:QCPAxis
mSelectedTickLabelColor	gui_sources/qcustomplot.h	/^  QColor mTickLabelColor, mSelectedTickLabelColor;$/;"	m	class:QCPPolarAxisAngular
mSelectedTickLabelColor	gui_sources/qcustomplot.h	/^  QColor mTickLabelColor, mSelectedTickLabelColor;$/;"	m	class:QCPPolarAxisRadial
mSelectedTickLabelFont	gui_sources/qcustomplot.h	/^  QFont mTickLabelFont, mSelectedTickLabelFont;$/;"	m	class:QCPAxis
mSelectedTickLabelFont	gui_sources/qcustomplot.h	/^  QFont mTickLabelFont, mSelectedTickLabelFont;$/;"	m	class:QCPPolarAxisAngular
mSelectedTickLabelFont	gui_sources/qcustomplot.h	/^  QFont mTickLabelFont, mSelectedTickLabelFont;$/;"	m	class:QCPPolarAxisRadial
mSelectedTickPen	gui_sources/qcustomplot.h	/^  QPen mTickPen, mSelectedTickPen;$/;"	m	class:QCPAxis
mSelectedTickPen	gui_sources/qcustomplot.h	/^  QPen mTickPen, mSelectedTickPen;$/;"	m	class:QCPPolarAxisAngular
mSelectedTickPen	gui_sources/qcustomplot.h	/^  QPen mTickPen, mSelectedTickPen;$/;"	m	class:QCPPolarAxisRadial
mSelection	gui_sources/qcustomplot.h	/^  QCPDataSelection mSelection;$/;"	m	class:QCPAbstractPlottable
mSelection	gui_sources/qcustomplot.h	/^  QCPDataSelection mSelection;$/;"	m	class:QCPPolarGraph
mSelectionDecorator	gui_sources/qcustomplot.h	/^  QCPSelectionDecorator *mSelectionDecorator;$/;"	m	class:QCPAbstractPlottable
mSelectionRect	gui_sources/qcustomplot.h	/^  QCPSelectionRect *mSelectionRect;$/;"	m	class:QCustomPlot
mSelectionRectMode	gui_sources/qcustomplot.h	/^  QCP::SelectionRectMode mSelectionRectMode;$/;"	m	class:QCustomPlot
mSelectionTolerance	gui_sources/qcustomplot.h	/^  int mSelectionTolerance;$/;"	m	class:QCustomPlot
mShape	gui_sources/qcustomplot.h	/^  ScatterShape mShape;$/;"	m	class:QCPScatterStyle
mSize	gui_sources/qcustomplot.h	/^  QSize mSize;$/;"	m	class:QCPAbstractPaintBuffer
mSize	gui_sources/qcustomplot.h	/^  double mSize;$/;"	m	class:QCPItemTracer
mSize	gui_sources/qcustomplot.h	/^  double mSize;$/;"	m	class:QCPScatterStyle
mSizeConstraintRect	gui_sources/qcustomplot.h	/^  SizeConstraintRect mSizeConstraintRect;$/;"	m	class:QCPLayoutElement
mSmallestUnit	gui_sources/qcustomplot.h	/^  TimeUnit mSmallestUnit, mBiggestUnit;$/;"	m	class:QCPAxisTickerTime
mSpacing	gui_sources/qcustomplot.h	/^  double mSpacing;$/;"	m	class:QCPBarsGroup
mSpacingType	gui_sources/qcustomplot.h	/^  SpacingType mSpacingType;$/;"	m	class:QCPBarsGroup
mStackingGap	gui_sources/qcustomplot.h	/^  double mStackingGap;$/;"	m	class:QCPBars
mStyle	gui_sources/qcustomplot.h	/^  BracketStyle mStyle;$/;"	m	class:QCPItemBracket
mStyle	gui_sources/qcustomplot.h	/^  EndingStyle mStyle;$/;"	m	class:QCPLineEnding
mStyle	gui_sources/qcustomplot.h	/^  TracerStyle mStyle;$/;"	m	class:QCPItemTracer
mSubGridPen	gui_sources/qcustomplot.h	/^  QPen mPen, mSubGridPen, mZeroLinePen;$/;"	m	class:QCPGrid
mSubGridType	gui_sources/qcustomplot.h	/^  GridTypes mSubGridType;$/;"	m	class:QCPPolarGrid
mSubGridVisible	gui_sources/qcustomplot.h	/^  bool mSubGridVisible;$/;"	m	class:QCPGrid
mSubTickCount	gui_sources/qcustomplot.h	/^  int mSubTickCount;$/;"	m	class:QCPAxisTickerLog
mSubTickCount	gui_sources/qcustomplot.h	/^  int mSubTickCount;$/;"	m	class:QCPAxisTickerText
mSubTickLengthIn	gui_sources/qcustomplot.h	/^  int mTickLengthIn, mTickLengthOut, mSubTickLengthIn, mSubTickLengthOut;$/;"	m	class:QCPPolarAxisAngular
mSubTickLengthIn	gui_sources/qcustomplot.h	/^  int mTickLengthIn, mTickLengthOut, mSubTickLengthIn, mSubTickLengthOut;$/;"	m	class:QCPPolarAxisRadial
mSubTickLengthOut	gui_sources/qcustomplot.h	/^  int mTickLengthIn, mTickLengthOut, mSubTickLengthIn, mSubTickLengthOut;$/;"	m	class:QCPPolarAxisAngular
mSubTickLengthOut	gui_sources/qcustomplot.h	/^  int mTickLengthIn, mTickLengthOut, mSubTickLengthIn, mSubTickLengthOut;$/;"	m	class:QCPPolarAxisRadial
mSubTickPen	gui_sources/qcustomplot.h	/^  QPen mSubTickPen, mSelectedSubTickPen;$/;"	m	class:QCPAxis
mSubTickPen	gui_sources/qcustomplot.h	/^  QPen mSubTickPen, mSelectedSubTickPen;$/;"	m	class:QCPPolarAxisAngular
mSubTickPen	gui_sources/qcustomplot.h	/^  QPen mSubTickPen, mSelectedSubTickPen;$/;"	m	class:QCPPolarAxisRadial
mSubTickVector	gui_sources/qcustomplot.h	/^  QVector<double> mSubTickVector;$/;"	m	class:QCPAxis
mSubTickVector	gui_sources/qcustomplot.h	/^  QVector<double> mSubTickVector;$/;"	m	class:QCPPolarAxisAngular
mSubTickVector	gui_sources/qcustomplot.h	/^  QVector<double> mSubTickVector;$/;"	m	class:QCPPolarAxisRadial
mSubTickVectorCosSin	gui_sources/qcustomplot.h	/^  QVector<QPointF> mSubTickVectorCosSin;$/;"	m	class:QCPPolarAxisAngular
mSubTicks	gui_sources/qcustomplot.h	/^  bool mSubTicks;$/;"	m	class:QCPAxis
mSubTicks	gui_sources/qcustomplot.h	/^  bool mSubTicks;$/;"	m	class:QCPPolarAxisAngular
mSubTicks	gui_sources/qcustomplot.h	/^  bool mSubTicks;$/;"	m	class:QCPPolarAxisRadial
mSubstituteExponent	gui_sources/qcustomplot.h	/^  bool mSubstituteExponent;$/;"	m	class:QCPLabelPainterPrivate
mSymbolGap	gui_sources/qcustomplot.h	/^  double mSymbolGap;$/;"	m	class:QCPErrorBars
mTail	gui_sources/qcustomplot.h	/^  QCPLineEnding mHead, mTail;$/;"	m	class:QCPItemCurve
mTail	gui_sources/qcustomplot.h	/^  QCPLineEnding mHead, mTail;$/;"	m	class:QCPItemLine
mTangentAverage	gui_sources/qcustomplot.h	/^  int mTangentAverage;$/;"	m	class:QCPSelectionDecoratorBracket
mTangentToData	gui_sources/qcustomplot.h	/^  bool mTangentToData;$/;"	m	class:QCPSelectionDecoratorBracket
mText	gui_sources/qcustomplot.h	/^  QString mText;$/;"	m	class:QCPItemText
mText	gui_sources/qcustomplot.h	/^  QString mText;$/;"	m	class:QCPTextElement
mTextAlignment	gui_sources/qcustomplot.h	/^  Qt::Alignment mTextAlignment;$/;"	m	class:QCPItemText
mTextBoundingRect	gui_sources/qcustomplot.h	/^  QRect mTextBoundingRect;$/;"	m	class:QCPTextElement
mTextColor	gui_sources/qcustomplot.h	/^  QColor mTextColor;$/;"	m	class:QCPAbstractLegendItem
mTextColor	gui_sources/qcustomplot.h	/^  QColor mTextColor;$/;"	m	class:QCPLegend
mTextColor	gui_sources/qcustomplot.h	/^  QColor mTextColor;$/;"	m	class:QCPTextElement
mTextFlags	gui_sources/qcustomplot.h	/^  int mTextFlags;$/;"	m	class:QCPTextElement
mTickCount	gui_sources/qcustomplot.h	/^  int mTickCount;$/;"	m	class:QCPAxisTicker
mTickLabelColor	gui_sources/qcustomplot.h	/^  QColor mTickLabelColor, mSelectedTickLabelColor;$/;"	m	class:QCPAxis
mTickLabelColor	gui_sources/qcustomplot.h	/^  QColor mTickLabelColor, mSelectedTickLabelColor;$/;"	m	class:QCPPolarAxisAngular
mTickLabelColor	gui_sources/qcustomplot.h	/^  QColor mTickLabelColor, mSelectedTickLabelColor;$/;"	m	class:QCPPolarAxisRadial
mTickLabelFont	gui_sources/qcustomplot.h	/^  QFont mTickLabelFont, mSelectedTickLabelFont;$/;"	m	class:QCPAxis
mTickLabelFont	gui_sources/qcustomplot.h	/^  QFont mTickLabelFont, mSelectedTickLabelFont;$/;"	m	class:QCPPolarAxisAngular
mTickLabelFont	gui_sources/qcustomplot.h	/^  QFont mTickLabelFont, mSelectedTickLabelFont;$/;"	m	class:QCPPolarAxisRadial
mTickLabels	gui_sources/qcustomplot.h	/^  bool mTickLabels;$/;"	m	class:QCPAxis
mTickLabels	gui_sources/qcustomplot.h	/^  bool mTickLabels;$/;"	m	class:QCPPolarAxisAngular
mTickLabels	gui_sources/qcustomplot.h	/^  bool mTickLabels;$/;"	m	class:QCPPolarAxisRadial
mTickLabelsSelectionBox	gui_sources/qcustomplot.h	/^  QRect mAxisSelectionBox, mTickLabelsSelectionBox, mLabelSelectionBox;$/;"	m	class:QCPAxisPainterPrivate
mTickLabelsSelectionBox	gui_sources/qcustomplot.h	/^  QRect mAxisSelectionBox, mTickLabelsSelectionBox, mLabelSelectionBox;$/;"	m	class:QCPLabelPainterPrivate
mTickLengthIn	gui_sources/qcustomplot.h	/^  int mTickLengthIn, mTickLengthOut, mSubTickLengthIn, mSubTickLengthOut;$/;"	m	class:QCPPolarAxisAngular
mTickLengthIn	gui_sources/qcustomplot.h	/^  int mTickLengthIn, mTickLengthOut, mSubTickLengthIn, mSubTickLengthOut;$/;"	m	class:QCPPolarAxisRadial
mTickLengthOut	gui_sources/qcustomplot.h	/^  int mTickLengthIn, mTickLengthOut, mSubTickLengthIn, mSubTickLengthOut;$/;"	m	class:QCPPolarAxisAngular
mTickLengthOut	gui_sources/qcustomplot.h	/^  int mTickLengthIn, mTickLengthOut, mSubTickLengthIn, mSubTickLengthOut;$/;"	m	class:QCPPolarAxisRadial
mTickOrigin	gui_sources/qcustomplot.h	/^  double mTickOrigin;$/;"	m	class:QCPAxisTicker
mTickPen	gui_sources/qcustomplot.h	/^  QPen mTickPen, mSelectedTickPen;$/;"	m	class:QCPAxis
mTickPen	gui_sources/qcustomplot.h	/^  QPen mTickPen, mSelectedTickPen;$/;"	m	class:QCPPolarAxisAngular
mTickPen	gui_sources/qcustomplot.h	/^  QPen mTickPen, mSelectedTickPen;$/;"	m	class:QCPPolarAxisRadial
mTickStep	gui_sources/qcustomplot.h	/^  double mTickStep;$/;"	m	class:QCPAxisTickerFixed
mTickStepStrategy	gui_sources/qcustomplot.h	/^  TickStepStrategy mTickStepStrategy;$/;"	m	class:QCPAxisTicker
mTickVector	gui_sources/qcustomplot.h	/^  QVector<double> mTickVector;$/;"	m	class:QCPAxis
mTickVector	gui_sources/qcustomplot.h	/^  QVector<double> mTickVector;$/;"	m	class:QCPPolarAxisAngular
mTickVector	gui_sources/qcustomplot.h	/^  QVector<double> mTickVector;$/;"	m	class:QCPPolarAxisRadial
mTickVectorCosSin	gui_sources/qcustomplot.h	/^  QVector<QPointF> mTickVectorCosSin;$/;"	m	class:QCPPolarAxisAngular
mTickVectorLabels	gui_sources/qcustomplot.h	/^  QVector<QString> mTickVectorLabels;$/;"	m	class:QCPAxis
mTickVectorLabels	gui_sources/qcustomplot.h	/^  QVector<QString> mTickVectorLabels;$/;"	m	class:QCPPolarAxisAngular
mTickVectorLabels	gui_sources/qcustomplot.h	/^  QVector<QString> mTickVectorLabels;$/;"	m	class:QCPPolarAxisRadial
mTicker	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPAxisTicker> mTicker;$/;"	m	class:QCPAxis
mTicker	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPAxisTicker> mTicker;$/;"	m	class:QCPPolarAxisAngular
mTicker	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPAxisTicker> mTicker;$/;"	m	class:QCPPolarAxisRadial
mTicks	gui_sources/qcustomplot.h	/^  QMap<double, QString> mTicks;$/;"	m	class:QCPAxisTickerText
mTicks	gui_sources/qcustomplot.h	/^  bool mTicks;$/;"	m	class:QCPAxis
mTicks	gui_sources/qcustomplot.h	/^  bool mTicks;$/;"	m	class:QCPPolarAxisAngular
mTicks	gui_sources/qcustomplot.h	/^  bool mTicks;$/;"	m	class:QCPPolarAxisRadial
mTightBoundary	gui_sources/qcustomplot.h	/^  bool mTightBoundary;$/;"	m	class:QCPColorMap
mTimeFormat	gui_sources/qcustomplot.h	/^  QString mTimeFormat;$/;"	m	class:QCPAxisTickerTime
mTimeZone	gui_sources/qcustomplot.h	/^  QTimeZone mTimeZone;$/;"	m	class:QCPAxisTickerDateTime
mTransformationMode	gui_sources/qcustomplot.h	/^  Qt::TransformationMode mTransformationMode;$/;"	m	class:QCPItemPixmap
mTwoColored	gui_sources/qcustomplot.h	/^  bool mTwoColored;$/;"	m	class:QCPFinancial
mType	gui_sources/qcustomplot.h	/^  GridTypes mType;$/;"	m	class:QCPPolarGrid
mType	gui_sources/qcustomplot.h	/^  QCPAxis::AxisType mType;$/;"	m	class:QCPColorScale
mUndersampledMapImage	gui_sources/qcustomplot.h	/^  QImage mMapImage, mUndersampledMapImage;$/;"	m	class:QCPColorMap
mUsedScatterProperties	gui_sources/qcustomplot.h	/^  QCPScatterStyle::ScatterProperties mUsedScatterProperties;$/;"	m	class:QCPSelectionDecorator
mValue	gui_sources/qcustomplot.h	/^  double mKey, mValue;$/;"	m	class:QCPItemPosition
mValueAxis	gui_sources/qcustomplot.h	/^  QPointer<QCPAxis> mKeyAxis, mValueAxis;$/;"	m	class:QCPAbstractPlottable
mValueAxis	gui_sources/qcustomplot.h	/^  QPointer<QCPAxis> mKeyAxis, mValueAxis;$/;"	m	class:QCPItemPosition
mValueAxis	gui_sources/qcustomplot.h	/^  QPointer<QCPPolarAxisRadial> mValueAxis;$/;"	m	class:QCPPolarGraph
mValueRange	gui_sources/qcustomplot.h	/^  QCPRange mKeyRange, mValueRange;$/;"	m	class:QCPColorMapData
mValueSize	gui_sources/qcustomplot.h	/^  int mKeySize, mValueSize;$/;"	m	class:QCPColorMapData
mViewport	gui_sources/qcustomplot.h	/^  QRect mViewport;$/;"	m	class:QCustomPlot
mVisible	gui_sources/qcustomplot.h	/^  bool mVisible;$/;"	m	class:QCPLayer
mVisible	gui_sources/qcustomplot.h	/^  bool mVisible;$/;"	m	class:QCPLayerable
mWhiskerAntialiased	gui_sources/qcustomplot.h	/^  bool mWhiskerAntialiased;$/;"	m	class:QCPStatisticalBox
mWhiskerBarPen	gui_sources/qcustomplot.h	/^  QPen mWhiskerPen, mWhiskerBarPen;$/;"	m	class:QCPStatisticalBox
mWhiskerPen	gui_sources/qcustomplot.h	/^  QPen mWhiskerPen, mWhiskerBarPen;$/;"	m	class:QCPStatisticalBox
mWhiskerWidth	gui_sources/qcustomplot.h	/^  double mWhiskerWidth;$/;"	m	class:QCPErrorBars
mWhiskerWidth	gui_sources/qcustomplot.h	/^  double mWhiskerWidth;$/;"	m	class:QCPStatisticalBox
mWidth	gui_sources/qcustomplot.h	/^  double mWidth, mLength;$/;"	m	class:QCPLineEnding
mWidth	gui_sources/qcustomplot.h	/^  double mWidth;$/;"	m	class:QCPBars
mWidth	gui_sources/qcustomplot.h	/^  double mWidth;$/;"	m	class:QCPFinancial
mWidth	gui_sources/qcustomplot.h	/^  double mWidth;$/;"	m	class:QCPStatisticalBox
mWidthType	gui_sources/qcustomplot.h	/^  WidthType mWidthType;$/;"	m	class:QCPBars
mWidthType	gui_sources/qcustomplot.h	/^  WidthType mWidthType;$/;"	m	class:QCPFinancial
mWrap	gui_sources/qcustomplot.h	/^  int mWrap;$/;"	m	class:QCPLayoutGrid
mX	gui_sources/qcustomplot.h	/^  double mX, mY;$/;"	m	class:QCPVector2D
mY	gui_sources/qcustomplot.h	/^  double mX, mY;$/;"	m	class:QCPVector2D
mZeroLinePen	gui_sources/qcustomplot.h	/^  QPen mPen, mSubGridPen, mZeroLinePen;$/;"	m	class:QCPGrid
m_old_buf	ROTATE_OPTIMIZATION/RotationContainerLib/DebugStream.h	/^	std::streambuf *m_old_buf;$/;"	m	class:QDebugStream
m_stream	ROTATE_OPTIMIZATION/RotationContainerLib/DebugStream.h	/^	std::ostream &m_stream;$/;"	m	class:QDebugStream
m_string	ROTATE_OPTIMIZATION/RotationContainerLib/DebugStream.h	/^	std::string m_string;$/;"	m	class:QDebugStream
main	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	main.cpp	/^int main(int argc, char* argv[])$/;"	f
mainBrush	gui_sources/qcustomplot.cpp	/^QBrush QCPItemEllipse::mainBrush() const$/;"	f	class:QCPItemEllipse
mainBrush	gui_sources/qcustomplot.cpp	/^QBrush QCPItemRect::mainBrush() const$/;"	f	class:QCPItemRect
mainBrush	gui_sources/qcustomplot.cpp	/^QBrush QCPItemText::mainBrush() const$/;"	f	class:QCPItemText
mainBrush	gui_sources/qcustomplot.cpp	/^QBrush QCPItemTracer::mainBrush() const$/;"	f	class:QCPItemTracer
mainColor	gui_sources/qcustomplot.cpp	/^QColor QCPItemText::mainColor() const$/;"	f	class:QCPItemText
mainFont	gui_sources/qcustomplot.cpp	/^QFont QCPItemText::mainFont() const$/;"	f	class:QCPItemText
mainFont	gui_sources/qcustomplot.cpp	/^QFont QCPTextElement::mainFont() const$/;"	f	class:QCPTextElement
mainKey	gui_sources/qcustomplot.h	/^  inline double mainKey() const { return key; }$/;"	f	class:QCPBarsData
mainKey	gui_sources/qcustomplot.h	/^  inline double mainKey() const { return key; }$/;"	f	class:QCPCurveData
mainKey	gui_sources/qcustomplot.h	/^  inline double mainKey() const { return key; }$/;"	f	class:QCPFinancialData
mainKey	gui_sources/qcustomplot.h	/^  inline double mainKey() const { return key; }$/;"	f	class:QCPGraphData
mainKey	gui_sources/qcustomplot.h	/^  inline double mainKey() const { return key; }$/;"	f	class:QCPStatisticalBoxData
mainPen	gui_sources/qcustomplot.cpp	/^QPen QCPItemBracket::mainPen() const$/;"	f	class:QCPItemBracket
mainPen	gui_sources/qcustomplot.cpp	/^QPen QCPItemCurve::mainPen() const$/;"	f	class:QCPItemCurve
mainPen	gui_sources/qcustomplot.cpp	/^QPen QCPItemEllipse::mainPen() const$/;"	f	class:QCPItemEllipse
mainPen	gui_sources/qcustomplot.cpp	/^QPen QCPItemLine::mainPen() const$/;"	f	class:QCPItemLine
mainPen	gui_sources/qcustomplot.cpp	/^QPen QCPItemPixmap::mainPen() const$/;"	f	class:QCPItemPixmap
mainPen	gui_sources/qcustomplot.cpp	/^QPen QCPItemRect::mainPen() const$/;"	f	class:QCPItemRect
mainPen	gui_sources/qcustomplot.cpp	/^QPen QCPItemStraightLine::mainPen() const$/;"	f	class:QCPItemStraightLine
mainPen	gui_sources/qcustomplot.cpp	/^QPen QCPItemText::mainPen() const$/;"	f	class:QCPItemText
mainPen	gui_sources/qcustomplot.cpp	/^QPen QCPItemTracer::mainPen() const$/;"	f	class:QCPItemTracer
mainTextColor	gui_sources/qcustomplot.cpp	/^QColor QCPTextElement::mainTextColor() const$/;"	f	class:QCPTextElement
mainValue	gui_sources/qcustomplot.h	/^  inline double mainValue() const { return median; }$/;"	f	class:QCPStatisticalBoxData
mainValue	gui_sources/qcustomplot.h	/^  inline double mainValue() const { return open; }$/;"	f	class:QCPFinancialData
mainValue	gui_sources/qcustomplot.h	/^  inline double mainValue() const { return value; }$/;"	f	class:QCPBarsData
mainValue	gui_sources/qcustomplot.h	/^  inline double mainValue() const { return value; }$/;"	f	class:QCPCurveData
mainValue	gui_sources/qcustomplot.h	/^  inline double mainValue() const { return value; }$/;"	f	class:QCPGraphData
makeNonCosmetic	gui_sources/qcustomplot.cpp	/^void QCPPainter::makeNonCosmetic()$/;"	f	class:QCPPainter
marginGroup	gui_sources/qcustomplot.h	/^  QCPMarginGroup *marginGroup(QCP::MarginSide side) const { return mMarginGroups.value(side, nullptr); }$/;"	f	class:QCPLayoutElement
marginGroups	gui_sources/qcustomplot.h	/^  QHash<QCP::MarginSide, QCPMarginGroup*> marginGroups() const { return mMarginGroups; }$/;"	f	class:QCPLayoutElement
marginSideToAxisType	gui_sources/qcustomplot.cpp	/^QCPAxis::AxisType QCPAxis::marginSideToAxisType(QCP::MarginSide side)$/;"	f	class:QCPAxis
margins	gui_sources/qcustomplot.h	/^  QMargins margins() const { return mMargins; }$/;"	f	class:QCPLayoutElement
maxRange	gui_sources/qcustomplot.cpp	/^const double QCPRange::maxRange = 1e250;$/;"	m	class:QCPRange	file:
maxRange	gui_sources/qcustomplot.h	/^  static const double maxRange;$/;"	m	class:QCPRange
max_patch_size	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW int max_patch_size;           \/\/!<  threshold for the ROI size$/;"	m	struct:cv::tracking::TrackerKCF::Params
maximum	gui_sources/qcustomplot.h	/^  double key, minimum, lowerQuartile, median, upperQuartile, maximum;$/;"	m	class:QCPStatisticalBoxData
maximumOuterSizeHint	gui_sources/qcustomplot.cpp	/^QSize QCPLayoutElement::maximumOuterSizeHint() const$/;"	f	class:QCPLayoutElement
maximumOuterSizeHint	gui_sources/qcustomplot.cpp	/^QSize QCPLayoutGrid::maximumOuterSizeHint() const$/;"	f	class:QCPLayoutGrid
maximumOuterSizeHint	gui_sources/qcustomplot.cpp	/^QSize QCPTextElement::maximumOuterSizeHint() const$/;"	f	class:QCPTextElement
maximumSize	gui_sources/qcustomplot.h	/^  QSize maximumSize() const { return mMaximumSize; }$/;"	f	class:QCPLayoutElement
mayTraverse	gui_sources/qcustomplot.cpp	/^bool QCPCurve::mayTraverse(int prevRegion, int currentRegion) const$/;"	f	class:QCPCurve
median	gui_sources/qcustomplot.h	/^  double key, minimum, lowerQuartile, median, upperQuartile, maximum;$/;"	m	class:QCPStatisticalBoxData
medianPen	gui_sources/qcustomplot.h	/^  QPen medianPen() const { return mMedianPen; }$/;"	f	class:QCPStatisticalBox
menu	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QMenu *menu;$/;"	m	class:Ui_WidgetMainWindow
menu_2	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QMenu *menu_2;$/;"	m	class:Ui_WidgetMainWindow
menubar	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    QMenuBar *menubar;$/;"	m	class:Ui_WidgetMainWindow
messageState	DEVICES/device_focus_ranger_interface.h	/^    T_MESSAGE messageState;$/;"	m	class:DeviceFocusRangerInterface
messageState	DEVICES/device_laser_interface.h	/^    T_MESSAGE messageState;$/;"	m	class:DeviceLaserInterface
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_labelimage.cpp	/^const QMetaObject *LabelImage::metaObject() const$/;"	f	class:LabelImage
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_link_line.cpp	/^const QMetaObject *LinkLine::metaObject() const$/;"	f	class:LinkLine
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPAbstractItem::metaObject() const$/;"	f	class:QCPAbstractItem
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPAbstractLegendItem::metaObject() const$/;"	f	class:QCPAbstractLegendItem
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPAbstractPlottable::metaObject() const$/;"	f	class:QCPAbstractPlottable
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPAxis::metaObject() const$/;"	f	class:QCPAxis
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPAxisRect::metaObject() const$/;"	f	class:QCPAxisRect
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPBars::metaObject() const$/;"	f	class:QCPBars
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPBarsGroup::metaObject() const$/;"	f	class:QCPBarsGroup
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPColorMap::metaObject() const$/;"	f	class:QCPColorMap
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPColorScale::metaObject() const$/;"	f	class:QCPColorScale
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPColorScaleAxisRectPrivate::metaObject() const$/;"	f	class:QCPColorScaleAxisRectPrivate
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPCurve::metaObject() const$/;"	f	class:QCPCurve
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPErrorBars::metaObject() const$/;"	f	class:QCPErrorBars
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPFinancial::metaObject() const$/;"	f	class:QCPFinancial
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPGraph::metaObject() const$/;"	f	class:QCPGraph
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPGrid::metaObject() const$/;"	f	class:QCPGrid
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPItemBracket::metaObject() const$/;"	f	class:QCPItemBracket
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPItemCurve::metaObject() const$/;"	f	class:QCPItemCurve
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPItemEllipse::metaObject() const$/;"	f	class:QCPItemEllipse
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPItemLine::metaObject() const$/;"	f	class:QCPItemLine
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPItemPixmap::metaObject() const$/;"	f	class:QCPItemPixmap
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPItemRect::metaObject() const$/;"	f	class:QCPItemRect
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPItemStraightLine::metaObject() const$/;"	f	class:QCPItemStraightLine
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPItemText::metaObject() const$/;"	f	class:QCPItemText
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPItemTracer::metaObject() const$/;"	f	class:QCPItemTracer
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPLayer::metaObject() const$/;"	f	class:QCPLayer
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPLayerable::metaObject() const$/;"	f	class:QCPLayerable
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPLayout::metaObject() const$/;"	f	class:QCPLayout
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPLayoutElement::metaObject() const$/;"	f	class:QCPLayoutElement
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPLayoutGrid::metaObject() const$/;"	f	class:QCPLayoutGrid
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPLayoutInset::metaObject() const$/;"	f	class:QCPLayoutInset
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPLegend::metaObject() const$/;"	f	class:QCPLegend
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPMarginGroup::metaObject() const$/;"	f	class:QCPMarginGroup
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPPlottableLegendItem::metaObject() const$/;"	f	class:QCPPlottableLegendItem
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPPolarAxisAngular::metaObject() const$/;"	f	class:QCPPolarAxisAngular
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPPolarAxisRadial::metaObject() const$/;"	f	class:QCPPolarAxisRadial
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPPolarGraph::metaObject() const$/;"	f	class:QCPPolarGraph
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPPolarGrid::metaObject() const$/;"	f	class:QCPPolarGrid
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPPolarLegendItem::metaObject() const$/;"	f	class:QCPPolarLegendItem
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPSelectionRect::metaObject() const$/;"	f	class:QCPSelectionRect
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPStatisticalBox::metaObject() const$/;"	f	class:QCPStatisticalBox
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCPTextElement::metaObject() const$/;"	f	class:QCPTextElement
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^const QMetaObject *QCustomPlot::metaObject() const$/;"	f	class:QCustomPlot
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^const QMetaObject *AdjustableLabel::metaObject() const$/;"	f	class:AdjustableLabel
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^const QMetaObject *WidgetAdjustable::metaObject() const$/;"	f	class:WidgetAdjustable
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_aiming_control.cpp	/^const QMetaObject *WidgetAimingControl::metaObject() const$/;"	f	class:WidgetAimingControl
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_camera_control.cpp	/^const QMetaObject *WidgetCameraControl::metaObject() const$/;"	f	class:WidgetCameraControl
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_container_group.cpp	/^const QMetaObject *WidgetContainerGroup::metaObject() const$/;"	f	class:WidgetContainerGroup
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_imitator_control.cpp	/^const QMetaObject *WidgetImageImitator::metaObject() const$/;"	f	class:WidgetImageImitator
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_main_window.cpp	/^const QMetaObject *WidgetMainWindow::metaObject() const$/;"	f	class:WidgetMainWindow
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_image_display.cpp	/^const QMetaObject *WidgetOutputImageDisplay::metaObject() const$/;"	f	class:WidgetOutputImageDisplay
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_text_display.cpp	/^const QMetaObject *WidgetOutputTextDisplay::metaObject() const$/;"	f	class:WidgetOutputTextDisplay
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_process_controller.cpp	/^const QMetaObject *WidgetProcessController::metaObject() const$/;"	f	class:WidgetProcessController
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_control.cpp	/^const QMetaObject *WidgetProcessingImageControl::metaObject() const$/;"	f	class:WidgetProcessingImageControl
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^const QMetaObject *WidgetMiniLabelsGroup::metaObject() const$/;"	f	class:WidgetMiniLabelsGroup
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^const QMetaObject *WidgetProcessingImage::metaObject() const$/;"	f	class:WidgetProcessingImage
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_scene_node_interface.cpp	/^const QMetaObject *WidgetSceneNodeInterface::metaObject() const$/;"	f	class:WidgetSceneNodeInterface
metaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_table_group.cpp	/^const QMetaObject *WidgetTableGroup::metaObject() const$/;"	f	class:WidgetTableGroup
metaObject	build/ImageProcProject_autogen/EWIEGA46WW/moc_controller_process_class.cpp	/^const QMetaObject *ProcessControllerClass::metaObject() const$/;"	f	class:ProcessControllerClass
metaObject	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_finder.cpp	/^const QMetaObject *ImageTemplateFinder::metaObject() const$/;"	f	class:ImageTemplateFinder
metaObject	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_processing_node.cpp	/^const QMetaObject *ModuleImageProcessing::metaObject() const$/;"	f	class:ModuleImageProcessing
metaObject	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^const QMetaObject *ImageTrackerCentroid::metaObject() const$/;"	f	class:ImageTrackerCentroid
metaObject	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^const QMetaObject *ImageTrackerCentroidGPU::metaObject() const$/;"	f	class:ImageTrackerCentroidGPU
metaObject	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_neural.cpp	/^const QMetaObject *NeuralTracker::metaObject() const$/;"	f	class:NeuralTracker
metaObject	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_template.cpp	/^const QMetaObject *ImageTrackerTemplate::metaObject() const$/;"	f	class:ImageTrackerTemplate
metaObject	build/ImageProcProject_autogen/IUOK47BH6O/moc_interface_camera_hik.cpp	/^const QMetaObject *CameraInterfaceHIK::metaObject() const$/;"	f	class:CameraInterfaceHIK
metaObject	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^const QMetaObject *AimControlInterface::metaObject() const$/;"	f	class:AimControlInterface
metaObject	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^const QMetaObject *AimImageImitatorClass::metaObject() const$/;"	f	class:AimImageImitatorClass
metaObject	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^const QMetaObject *DynamicAimControl::metaObject() const$/;"	f	class:DynamicAimControl
metaObject	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^const QMetaObject *ManualAimControl::metaObject() const$/;"	f	class:ManualAimControl
metaObject	build/ImageProcProject_autogen/SERQFGPBY3/moc_sinus_generator_class.cpp	/^const QMetaObject *SinusGeneratorClass::metaObject() const$/;"	f	class:SinusGeneratorClass
metaObject	build/ImageProcProject_autogen/SERQFGPBY3/moc_widget_sinus_source.cpp	/^const QMetaObject *WidgetSinusSource::metaObject() const$/;"	f	class:WidgetSinusSource
metaObject	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^const QMetaObject *CANConnectionEngine::metaObject() const$/;"	f	class:CANConnectionEngine
metaObject	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^const QMetaObject *CANDelayMeasure::metaObject() const$/;"	f	class:CANDelayMeasure
metaObject	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^const QMetaObject *CANTestMessage::metaObject() const$/;"	f	class:CANTestMessage
metaObject	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_tcp_interface.cpp	/^const QMetaObject *TCPConnectionEngine::metaObject() const$/;"	f	class:TCPConnectionEngine
metaObject	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_udp_interface.cpp	/^const QMetaObject *UDPEngineInterface::metaObject() const$/;"	f	class:UDPEngineInterface
metaObject	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^const QMetaObject *AimingWatcherClass::metaObject() const$/;"	f	class:AimingWatcherClass
metaObject	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^const QMetaObject *SignalPortAdapter::metaObject() const$/;"	f	class:SignalPortAdapter
metaObject	build/ImageProcProject_autogen/XJUVE5KTRL/moc_interface_image_source.cpp	/^const QMetaObject *ImageSourceInterface::metaObject() const$/;"	f	class:ImageSourceInterface
metaObject	build/ImageProcProject_autogen/XWFUSFUWCP/moc_device_rotary_interface.cpp	/^const QMetaObject *DynamicModule::metaObject() const$/;"	f	class:DynamicModule
minRange	gui_sources/qcustomplot.cpp	/^const double QCPRange::minRange = 1e-280;$/;"	m	class:QCPRange	file:
minRange	gui_sources/qcustomplot.h	/^  static const double minRange;$/;"	m	class:QCPRange
minimum	gui_sources/qcustomplot.h	/^  double key, minimum, lowerQuartile, median, upperQuartile, maximum;$/;"	m	class:QCPStatisticalBoxData
minimumMargins	gui_sources/qcustomplot.h	/^  QMargins minimumMargins() const { return mMinimumMargins; }$/;"	f	class:QCPLayoutElement
minimumOuterSizeHint	gui_sources/qcustomplot.cpp	/^QSize QCPLayoutElement::minimumOuterSizeHint() const$/;"	f	class:QCPLayoutElement
minimumOuterSizeHint	gui_sources/qcustomplot.cpp	/^QSize QCPLayoutGrid::minimumOuterSizeHint() const$/;"	f	class:QCPLayoutGrid
minimumOuterSizeHint	gui_sources/qcustomplot.cpp	/^QSize QCPPlottableLegendItem::minimumOuterSizeHint() const$/;"	f	class:QCPPlottableLegendItem
minimumOuterSizeHint	gui_sources/qcustomplot.cpp	/^QSize QCPPolarLegendItem::minimumOuterSizeHint() const$/;"	f	class:QCPPolarLegendItem
minimumOuterSizeHint	gui_sources/qcustomplot.cpp	/^QSize QCPTextElement::minimumOuterSizeHint() const$/;"	f	class:QCPTextElement
minimumSize	gui_sources/qcustomplot.h	/^  QSize minimumSize() const { return mMinimumSize; }$/;"	f	class:QCPLayoutElement
minimumSizeHint	gui_sources/qcustomplot.cpp	/^QSize QCustomPlot::minimumSizeHint() const$/;"	f	class:QCustomPlot
mode	gui_sources/qcustomplot.h	/^  LayerMode mode() const { return mMode; }$/;"	f	class:QCPLayer
modes	gui_sources/qcustomplot.h	/^  PainterModes modes() const { return mModes; }$/;"	f	class:QCPPainter
mounts	stream_video_rtsp.h	/^   GstRTSPMountPoints *mounts = nullptr;$/;"	m	class:VideoStreamRTSP
mouseDoubleClick	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::mouseDoubleClick(QMouseEvent * _t1)$/;"	f	class:QCustomPlot
mouseDoubleClickEvent	gui_sources/link_line.cpp	/^void LinkLine::mouseDoubleClickEvent(QGraphicsSceneMouseEvent* event)$/;"	f	class:LinkLine
mouseDoubleClickEvent	gui_sources/qcustomplot.cpp	/^void QCPLayerable::mouseDoubleClickEvent(QMouseEvent *event, const QVariant &details)$/;"	f	class:QCPLayerable
mouseDoubleClickEvent	gui_sources/qcustomplot.cpp	/^void QCPTextElement::mouseDoubleClickEvent(QMouseEvent *event, const QVariant &details)$/;"	f	class:QCPTextElement
mouseDoubleClickEvent	gui_sources/qcustomplot.cpp	/^void QCustomPlot::mouseDoubleClickEvent(QMouseEvent *event)$/;"	f	class:QCustomPlot
mouseDoubleClickEvent	gui_sources/widget_scene_node_interface.cpp	/^void WidgetSceneNodeInterface::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:WidgetSceneNodeInterface
mouseMove	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::mouseMove(QMouseEvent * _t1)$/;"	f	class:QCustomPlot
mouseMoveEvent	gui_sources/labelimage.cpp	/^void LabelImage::mouseMoveEvent(QMouseEvent * ev)$/;"	f	class:LabelImage
mouseMoveEvent	gui_sources/qcustomplot.cpp	/^void QCPAxis::mouseMoveEvent(QMouseEvent *event, const QPointF &startPos)$/;"	f	class:QCPAxis
mouseMoveEvent	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::mouseMoveEvent(QMouseEvent *event, const QPointF &startPos)$/;"	f	class:QCPAxisRect
mouseMoveEvent	gui_sources/qcustomplot.cpp	/^void QCPColorScale::mouseMoveEvent(QMouseEvent *event, const QPointF &startPos)$/;"	f	class:QCPColorScale
mouseMoveEvent	gui_sources/qcustomplot.cpp	/^void QCPLayerable::mouseMoveEvent(QMouseEvent *event, const QPointF &startPos)$/;"	f	class:QCPLayerable
mouseMoveEvent	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::mouseMoveEvent(QMouseEvent *event, const QPointF &startPos)$/;"	f	class:QCPPolarAxisAngular
mouseMoveEvent	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::mouseMoveEvent(QMouseEvent *event, const QPointF &startPos)$/;"	f	class:QCPPolarAxisRadial
mouseMoveEvent	gui_sources/qcustomplot.cpp	/^void QCustomPlot::mouseMoveEvent(QMouseEvent *event)$/;"	f	class:QCustomPlot
mousePress	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::mousePress(QMouseEvent * _t1)$/;"	f	class:QCustomPlot
mousePressEvent	gui_sources/labelimage.cpp	/^void LabelImage::mousePressEvent(QMouseEvent * ev)$/;"	f	class:LabelImage
mousePressEvent	gui_sources/qcustomplot.cpp	/^void QCPAxis::mousePressEvent(QMouseEvent *event, const QVariant &details)$/;"	f	class:QCPAxis
mousePressEvent	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::mousePressEvent(QMouseEvent *event, const QVariant &details)$/;"	f	class:QCPAxisRect
mousePressEvent	gui_sources/qcustomplot.cpp	/^void QCPColorScale::mousePressEvent(QMouseEvent *event, const QVariant &details)$/;"	f	class:QCPColorScale
mousePressEvent	gui_sources/qcustomplot.cpp	/^void QCPLayerable::mousePressEvent(QMouseEvent *event, const QVariant &details)$/;"	f	class:QCPLayerable
mousePressEvent	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::mousePressEvent(QMouseEvent *event, const QVariant &details)$/;"	f	class:QCPPolarAxisAngular
mousePressEvent	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::mousePressEvent(QMouseEvent *event, const QVariant &details)$/;"	f	class:QCPPolarAxisRadial
mousePressEvent	gui_sources/qcustomplot.cpp	/^void QCPTextElement::mousePressEvent(QMouseEvent *event, const QVariant &details)$/;"	f	class:QCPTextElement
mousePressEvent	gui_sources/qcustomplot.cpp	/^void QCustomPlot::mousePressEvent(QMouseEvent *event)$/;"	f	class:QCustomPlot
mouseRelease	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::mouseRelease(QMouseEvent * _t1)$/;"	f	class:QCustomPlot
mouseReleaseEvent	gui_sources/qcustomplot.cpp	/^void QCPAxis::mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos)$/;"	f	class:QCPAxis
mouseReleaseEvent	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos)$/;"	f	class:QCPAxisRect
mouseReleaseEvent	gui_sources/qcustomplot.cpp	/^void QCPColorScale::mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos)$/;"	f	class:QCPColorScale
mouseReleaseEvent	gui_sources/qcustomplot.cpp	/^void QCPLayerable::mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos)$/;"	f	class:QCPLayerable
mouseReleaseEvent	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos)$/;"	f	class:QCPPolarAxisAngular
mouseReleaseEvent	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos)$/;"	f	class:QCPPolarAxisRadial
mouseReleaseEvent	gui_sources/qcustomplot.cpp	/^void QCPTextElement::mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos)$/;"	f	class:QCPTextElement
mouseReleaseEvent	gui_sources/qcustomplot.cpp	/^void QCustomPlot::mouseReleaseEvent(QMouseEvent *event)$/;"	f	class:QCustomPlot
mouseWheel	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::mouseWheel(QWheelEvent * _t1)$/;"	f	class:QCustomPlot
moveAbove	gui_sources/qcustomplot.cpp	/^void QCPBars::moveAbove(QCPBars *bars)$/;"	f	class:QCPBars
moveBelow	gui_sources/qcustomplot.cpp	/^void QCPBars::moveBelow(QCPBars *bars)$/;"	f	class:QCPBars
moveEvent	gui_sources/widget_processing_image_generic.cpp	/^void WidgetProcessingImage::moveEvent(QMoveEvent* event)$/;"	f	class:WidgetProcessingImage
moveLayer	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::moveLayer(QCPLayer *layer, QCPLayer *otherLayer, QCustomPlot::LayerInsertMode insertMode)$/;"	f	class:QCustomPlot
moveOnStep	DEVICES/device_rotary_interface.h	/^void DeviceRotaryInterface<T_CONNECTION,T_COMMAND,T_MESSAGE>::moveOnStep(const QPair<int, int>& Step)$/;"	f	class:DeviceRotaryInterface
moveRange	gui_sources/qcustomplot.cpp	/^void QCPAxis::moveRange(double diff)$/;"	f	class:QCPAxis
moveRange	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::moveRange(double diff)$/;"	f	class:QCPPolarAxisAngular
moveRange	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::moveRange(double diff)$/;"	f	class:QCPPolarAxisRadial
moveSelection	gui_sources/qcustomplot.cpp	/^void QCPSelectionRect::moveSelection(QMouseEvent *event)$/;"	f	class:QCPSelectionRect
moveToLayer	gui_sources/qcustomplot.cpp	/^bool QCPLayerable::moveToLayer(QCPLayer *layer, bool prepend)$/;"	f	class:QCPLayerable
moveToPos	DEVICES/device_rotary_interface.h	/^void DeviceRotaryInterface<T_CONNECTION,T_COMMAND,T_MESSAGE>::moveToPos(const QPair<int, int>& Pos)$/;"	f	class:DeviceRotaryInterface
moveToPosRelative	DEVICES/device_rotary_interface.h	/^void DeviceRotaryInterface<T_CONNECTION,T_COMMAND,T_MESSAGE>::moveToPosRelative(const QPair<int, int>& PosRelative) $/;"	f	class:DeviceRotaryInterface
msAll	gui_sources/qcustomplot.h	/^                  ,msAll     = 0xFF \/\/\/< <tt>0xFF<\/tt> all margins$/;"	e	enum:QCP::MarginSide
msBottom	gui_sources/qcustomplot.h	/^                  ,msBottom  = 0x08 \/\/\/< <tt>0x08<\/tt> bottom margin$/;"	e	enum:QCP::MarginSide
msLeft	gui_sources/qcustomplot.h	/^enum MarginSide { msLeft     = 0x01 \/\/\/< <tt>0x01<\/tt> left margin$/;"	e	enum:QCP::MarginSide
msNone	gui_sources/qcustomplot.h	/^                  ,msNone    = 0x00 \/\/\/< <tt>0x00<\/tt> no margin$/;"	e	enum:QCP::MarginSide
msRight	gui_sources/qcustomplot.h	/^                  ,msRight   = 0x02 \/\/\/< <tt>0x02<\/tt> right margin$/;"	e	enum:QCP::MarginSide
msTop	gui_sources/qcustomplot.h	/^                  ,msTop     = 0x04 \/\/\/< <tt>0x04<\/tt> top margin$/;"	e	enum:QCP::MarginSide
multiSelectModifier	gui_sources/qcustomplot.h	/^  Qt::KeyboardModifier multiSelectModifier() const { return mMultiSelectModifier; }$/;"	f	class:QCustomPlot
multiplicationSymbol	gui_sources/qcustomplot.h	/^  QChar multiplicationSymbol() const { return mMultiplicationSymbol; }$/;"	f	class:QCPLabelPainterPrivate
name	gui_sources/qcustomplot.h	/^  QString name() const { return mName; }$/;"	f	class:QCPAbstractPlottable
name	gui_sources/qcustomplot.h	/^  QString name() const { return mName; }$/;"	f	class:QCPItemAnchor
name	gui_sources/qcustomplot.h	/^  QString name() const { return mName; }$/;"	f	class:QCPLayer
name	gui_sources/qcustomplot.h	/^  QString name() const { return mName; }$/;"	f	class:QCPPolarGraph
nanColor	gui_sources/qcustomplot.h	/^  QColor nanColor() const { return mNanColor; }$/;"	f	class:QCPColorGradient
nanHandling	gui_sources/qcustomplot.h	/^  NanHandling nanHandling() const { return mNanHandling; }$/;"	f	class:QCPColorGradient
newPos	gui_sources/node.h	/^    QPointF newPos;$/;"	m	class:Node
nhHighestColor	gui_sources/qcustomplot.h	/^                     ,nhHighestColor \/\/\/< NaN data points appear as the highest color defined in this QCPColorGradient$/;"	e	enum:QCPColorGradient::NanHandling
nhLowestColor	gui_sources/qcustomplot.h	/^                     ,nhLowestColor  \/\/\/< NaN data points appear as the lowest color defined in this QCPColorGradient$/;"	e	enum:QCPColorGradient::NanHandling
nhNanColor	gui_sources/qcustomplot.h	/^                     ,nhNanColor \/\/\/< NaN data points appear as the color defined with \\ref setNanColor$/;"	e	enum:QCPColorGradient::NanHandling
nhNone	gui_sources/qcustomplot.h	/^  enum NanHandling { nhNone \/\/\/< NaN data points are not explicitly handled and shouldn't occur in the data (this gives slight performance improvement)$/;"	e	enum:QCPColorGradient::NanHandling
nhTransparent	gui_sources/qcustomplot.h	/^                     ,nhTransparent \/\/\/< NaN data points appear transparent$/;"	e	enum:QCPColorGradient::NanHandling
noAntialiasingOnDrag	gui_sources/qcustomplot.h	/^  bool noAntialiasingOnDrag() const { return mNoAntialiasingOnDrag; }$/;"	f	class:QCustomPlot
normalize	gui_sources/qcustomplot.cpp	/^void QCPVector2D::normalize()$/;"	f	class:QCPVector2D
normalize	gui_sources/qcustomplot.h	/^  void normalize() { if (lower > upper) qSwap(lower, upper); }$/;"	f	class:QCPRange
normalized	gui_sources/qcustomplot.cpp	/^QCPVector2D QCPVector2D::normalized() const$/;"	f	class:QCPVector2D
notAntialiasedElements	gui_sources/qcustomplot.h	/^  QCP::AntialiasedElements notAntialiasedElements() const { return mNotAntialiasedElements; }$/;"	f	class:QCustomPlot
numPosX	gui_sources/widget_scanator_control.h	/^    QString numPosX;$/;"	m	class:WidgetScanatorControl
numPosXReal	gui_sources/widget_scanator_control.h	/^    QString numPosXReal;$/;"	m	class:WidgetScanatorControl
numPosY	gui_sources/widget_scanator_control.h	/^    QString numPosY;$/;"	m	class:WidgetScanatorControl
numPosYReal	gui_sources/widget_scanator_control.h	/^    QString numPosYReal;$/;"	m	class:WidgetScanatorControl
numVelX	gui_sources/widget_scanator_control.h	/^    QString numVelX;$/;"	m	class:WidgetScanatorControl
numVelY	gui_sources/widget_scanator_control.h	/^    QString numVelY;$/;"	m	class:WidgetScanatorControl
num_hog_channels_used	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW int num_hog_channels_used;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
numberFormat	gui_sources/qcustomplot.cpp	/^QString QCPAxis::numberFormat() const$/;"	f	class:QCPAxis
numberFormat	gui_sources/qcustomplot.cpp	/^QString QCPPolarAxisAngular::numberFormat() const$/;"	f	class:QCPPolarAxisAngular
numberFormat	gui_sources/qcustomplot.cpp	/^QString QCPPolarAxisRadial::numberFormat() const$/;"	f	class:QCPPolarAxisRadial
numberMultiplyCross	gui_sources/qcustomplot.h	/^  bool numberMultiplyCross; \/\/ directly accessed by QCPAxis setters\/getters$/;"	m	class:QCPAxisPainterPrivate
numberPrecision	gui_sources/qcustomplot.h	/^  int numberPrecision() const { return mNumberPrecision; }$/;"	f	class:QCPAxis
numberPrecision	gui_sources/qcustomplot.h	/^  int numberPrecision() const { return mNumberPrecision; }$/;"	f	class:QCPPolarAxisAngular
numberPrecision	gui_sources/qcustomplot.h	/^  int numberPrecision() const { return mNumberPrecision; }$/;"	f	class:QCPPolarAxisRadial
number_of_scales	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW int number_of_scales;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
offset	gui_sources/qcustomplot.cpp	/^int QCPAxis::offset() const$/;"	f	class:QCPAxis
offset	gui_sources/qcustomplot.h	/^    QPoint offset;$/;"	m	struct:QCPLabelPainterPrivate::CachedLabel
offset	gui_sources/qcustomplot.h	/^    QPointF offset;$/;"	m	struct:QCPAxisPainterPrivate::CachedLabel
offset	gui_sources/qcustomplot.h	/^  int offset; \/\/ directly accessed by QCPAxis setters\/getters$/;"	m	class:QCPAxisPainterPrivate
ohlcSelectTest	gui_sources/qcustomplot.cpp	/^double QCPFinancial::ohlcSelectTest(const QPointF &pos, const QCPFinancialDataContainer::const_iterator &begin, const QCPFinancialDataContainer::const_iterator &end, QCPFinancialDataContainer::const_iterator &closestDataPoint) const$/;"	f	class:QCPFinancial
on_butMoveDown_pressed	gui_sources/widget_imitator_control.cpp	/^void WidgetImageImitator::on_butMoveDown_pressed() {if(!ImitationModule) return; ImitationModule->ManualControl.SlotStartMoveAim( 1,1,2); }$/;"	f	class:WidgetImageImitator
on_butMoveDown_released	gui_sources/widget_imitator_control.cpp	/^void WidgetImageImitator::on_butMoveDown_released() {if(!ImitationModule) return; ImitationModule->ManualControl.StopMove(); }$/;"	f	class:WidgetImageImitator
on_butMoveLeft_pressed	gui_sources/widget_imitator_control.cpp	/^void WidgetImageImitator::on_butMoveLeft_pressed() {if(!ImitationModule) return; ImitationModule->ManualControl.SlotStartMoveAim( 1,0,2); }$/;"	f	class:WidgetImageImitator
on_butMoveLeft_released	gui_sources/widget_imitator_control.cpp	/^void WidgetImageImitator::on_butMoveLeft_released() {if(!ImitationModule) return; ImitationModule->ManualControl.StopMove(); }$/;"	f	class:WidgetImageImitator
on_butMoveRight_pressed	gui_sources/widget_imitator_control.cpp	/^void WidgetImageImitator::on_butMoveRight_pressed(){if(!ImitationModule) return; ImitationModule->ManualControl.SlotStartMoveAim(-1,0,2); }$/;"	f	class:WidgetImageImitator
on_butMoveRight_released	gui_sources/widget_imitator_control.cpp	/^void WidgetImageImitator::on_butMoveRight_released(){if(!ImitationModule) return; ImitationModule->ManualControl.StopMove(); }$/;"	f	class:WidgetImageImitator
on_butMoveUp_pressed	gui_sources/widget_imitator_control.cpp	/^void WidgetImageImitator::on_butMoveUp_pressed()   {if(!ImitationModule) return; ImitationModule->ManualControl.SlotStartMoveAim(-1,1,2); }$/;"	f	class:WidgetImageImitator
on_butMoveUp_released	gui_sources/widget_imitator_control.cpp	/^void WidgetImageImitator::on_butMoveUp_released()   {if(!ImitationModule) return; ImitationModule->ManualControl.StopMove(); }$/;"	f	class:WidgetImageImitator
on_butStartAimMoving_clicked	gui_sources/widget_imitator_control.cpp	/^void WidgetImageImitator::on_butStartAimMoving_clicked() {if(!ImitationModule) return; ImitationModule->DynamicControl.StartMove(); }$/;"	f	class:WidgetImageImitator
on_butStopAimMoving_clicked	gui_sources/widget_imitator_control.cpp	/^void WidgetImageImitator::on_butStopAimMoving_clicked()  {if(!ImitationModule) return; ImitationModule->DynamicControl.StopMove(); }/;"	f	class:WidgetImageImitator
ones_matrix	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor ones_matrix;$/;"	m	class:RotateOperationContainer
open	gui_sources/qcustomplot.h	/^  double key, open, high, low, close;$/;"	m	class:QCPFinancialData
openGl	gui_sources/qcustomplot.h	/^  bool openGl() const { return mOpenGl; }$/;"	f	class:QCustomPlot
operator !	UTILITES/thread_operation_nodes.h	/^  ValueDetector<T>& operator!(){FlagInversion = true; return *this;}$/;"	f	class:ValueDetector
operator !	UTILITES/thread_operation_nodes.h	/^  ValuePassShutter<T>& operator!() { FlagInversion = true; return *this;};$/;"	f	class:ValuePassShutter
operator !=	AIMING_MODULES/pid_param_struct.h	/^    bool operator!=(PIDParamStruct Param)$/;"	f	class:PIDParamStruct
operator !=	COMMON/utilite.cpp	/^bool operator!=(std::pair<int,int> pair, int value) { return pair.first != value && pair.second != value; };$/;"	f
operator !=	COMMON/utilite.cpp	/^bool operator!=(std::pair<int,int> pair, std::pair<int,int> pair2) { return pair.first != pair2.first && pair.second != pair2.second; };$/;"	f
operator !=	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^template<typename H> bool MessageIteratorDense<H>::operator!=(MessageIteratorDense<H>& Message) { return !(Message == *this); }$/;"	f	class:MessageIteratorDense
operator !=	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^template<typename H> bool MessageIteratorGenericBase<H>::operator!=(MessageIteratorGenericBase<H>& Message) { return !(Message == *this); }$/;"	f	class:IteratorMode::MessageIteratorGenericBase
operator !=	gui_sources/qcustomplot.h	/^  bool operator!=(const QCPColorGradient &other) const { return !(*this == other); }$/;"	f	class:QCPColorGradient
operator !=	gui_sources/qcustomplot.h	/^  bool operator!=(const QCPDataRange& other) const { return !(*this == other); }$/;"	f	class:QCPDataRange
operator !=	gui_sources/qcustomplot.h	/^  bool operator!=(const QCPDataSelection& other) const { return !(*this == other); }$/;"	f	class:QCPDataSelection
operator !=	gui_sources/qcustomplot.h	/^  bool operator!=(const QCPRange& other) const { return !(*this == other); }$/;"	f	class:QCPRange
operator &&	UTILITES/thread_operation_nodes.h	/^  ValueDetector<T>& operator&&(ValueDetector<T>& Detector) { LinkedDetector = &Detector; return *this; }$/;"	f	class:ValueDetector
operator ()	CV_IMAGE_PROCESSING/contour_processing.h	/^    void operator()(const cv::Mat& Image){ SetImage(Image);}$/;"	f	class:ContoursProcessorClass
operator ()	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  ValueSpongeShift<T>& operator()(double SpongeSpeed){ Speed = SpongeSpeed; return *this;};$/;"	f	class:ValueSpongeShift
operator ()	UTILITES/debug_output_filter.h	/^  	OutputFilter& operator()(int size) { peak = size; return *this; };$/;"	f	class:OutputFilter
operator ()	UTILITES/debug_output_filter.h	/^  BlockCounterClass& operator()(int NewPeak) {this->Peak = NewPeak; return *this;};$/;"	f	class:BlockCounterClass
operator ()	UTILITES/thread_operation_nodes.h	/^	 CoordPassWaitNode& operator()(QPair<T,T> Wait) {WaitCoord = Wait; return *this; }$/;"	f	class:CoordPassWaitNode
operator ()	UTILITES/thread_operation_nodes.h	/^	CoordAvarageGlidingNode & operator()(int size) { window_size = size; return *this;}$/;"	f	class:CoordAvarageGlidingNode
operator ()	UTILITES/thread_operation_nodes.h	/^	CoordAvaragePeriodicNode & operator()(int size) { window_size = size; return *this;}$/;"	f	class:CoordAvaragePeriodicNode
operator ()	UTILITES/thread_operation_nodes.h	/^	CoordDetector<T>& operator()(QPair<T,T> Wait) {WaitCoord = Wait; return *this;}$/;"	f	class:CoordDetector
operator ()	UTILITES/thread_operation_nodes.h	/^	CoordDetector<T>& operator()(double tolerance_distance, QPair<T,T> Wait) { tolerance = tolerance_distance; WaitCoord = Wait; return *this;}$/;"	f	class:CoordDetector
operator ()	UTILITES/thread_operation_nodes.h	/^	CoordInversionAxisNode<T>& operator()(double Axis) { SetInversion(Axis); return *this;}$/;"	f	class:CoordInversionAxisNode
operator ()	UTILITES/thread_operation_nodes.h	/^	CoordPassFilter<T>& operator()(double Limit) { CoordNormLimit =  Limit; return *this; }$/;"	f	class:CoordPassFilter
operator ()	UTILITES/thread_operation_nodes.h	/^	CoordPassRandomizer<T>& operator()(float Amplitude) { AmplitudeNoize = Amplitude; return *this; }$/;"	f	class:CoordPassRandomizer
operator ()	UTILITES/thread_operation_nodes.h	/^	CoordPassShutter<T>& operator()(bool Opened) { ShutterOpened =  Opened; return *this; }$/;"	f	class:CoordPassShutter
operator ()	UTILITES/thread_operation_nodes.h	/^	CoordPassShutter<T>& operator()(const CoordDetector<T>& Detector) { ShutterOpened =  Detector.isCoordDetected; return *this; }$/;"	f	class:CoordPassShutter
operator ()	UTILITES/thread_operation_nodes.h	/^	CoordPassThinning<T>& operator()(int value) { peak =  value; return *this; }$/;"	f	class:CoordPassThinning
operator ()	UTILITES/thread_operation_nodes.h	/^  	ThinningFilter& operator()(int size) {peak = size; return *this; };$/;"	f	class:ThinningFilter
operator ()	UTILITES/thread_operation_nodes.h	/^    TrackHoldDetectorNode& operator()(double Threshold, int Dispersion)$/;"	f	class:TrackHoldDetectorNode
operator ()	UTILITES/thread_operation_nodes.h	/^  PassCoordClass<T>& operator()(int size) { if(Coords.size() != size) SetSize(size); return *this; }$/;"	f	class:CoordStorage
operator ()	UTILITES/thread_operation_nodes.h	/^  PassValueClass<T>& operator()(int size) { if(Values.size() != size) SetSize(size); return *this; }$/;"	f	class:ValueStorage
operator ()	UTILITES/thread_operation_nodes.h	/^  ValueBreeder<T>& operator()(double Multiplier){ BreedMultiplier = Multiplier; return *this;};$/;"	f	class:ValueBreeder
operator ()	UTILITES/thread_operation_nodes.h	/^  ValueCategorizer<T>& operator()(double Limit, int Count) { SetCategoryLimit(Limit,Count); return *this; };$/;"	f	class:ValueCategorizer
operator ()	UTILITES/thread_operation_nodes.h	/^  ValueDebugOutput<T>& operator()(QString OUT_TAG, int ThinningParam){ TAG = OUT_TAG.toStdString(); Thinning = ThinningParam; return *this;};$/;"	f	class:ValueDebugOutput
operator ()	UTILITES/thread_operation_nodes.h	/^  ValueDebugOutput<T>& operator()(std::string OUT_TAG, int ThinningParam){ TAG = OUT_TAG; Thinning = ThinningParam; return *this;};$/;"	f	class:ValueDebugOutput
operator ()	UTILITES/thread_operation_nodes.h	/^  ValueDetector<T>& operator()(double ThresholdValue){ Threshold = ThresholdValue; return *this;};$/;"	f	class:ValueDetector
operator ()	UTILITES/thread_operation_nodes.h	/^  ValueInversion<T>& operator()(double NewThreshold){ Threshold = NewThreshold; return *this;};$/;"	f	class:ValueInversion
operator ()	UTILITES/thread_operation_nodes.h	/^  ValuePassShutter<T>& operator()(ValueDetector<T>& Detector) $/;"	f	class:ValuePassShutter
operator ()	UTILITES/thread_operation_nodes.h	/^  ValuePassShutter<T>& operator()(bool Flagopencved) { Shutteropencved = Flagopencved; return *this; };$/;"	f	class:ValuePassShutter
operator ()	UTILITES/thread_operation_nodes.h	/^  ValuePeriodMeasure<T>& operator()(std::string OUT_TAG){ TAG = OUT_TAG; return *this;};$/;"	f	class:ValuePeriodMeasure
operator ()	UTILITES/thread_operation_nodes.h	/^  ValueRandomization<T>& operator()(double NewAmplitude){ Amplitude = NewAmplitude; return *this;};$/;"	f	class:ValueRandomization
operator ()	UTILITES/thread_operation_nodes.h	/^  ValueSaturation<T>& operator()(double NewThreshold){ Threshold = NewThreshold; return *this;};$/;"	f	class:ValueSaturation
operator ()	UTILITES/transform_coord_class.h	/^	TransformCoordClass& operator()(double ScaleParam) {Scale = ScaleParam; return *this;}$/;"	f	class:TransformCoordClass
operator *	AIMING_MODULES/rotate_vector_class.h	/^RotateVectorClass<T> operator*(RotateVectorClass<T>  Rotate1,RotateVectorClass<T>  Rotate2)$/;"	f
operator *	COMMON/interface_pass_coord.h	/^QPair<T, T> operator*(QPair<T, T> x, const QPair<T, T>& y) { x.first *= y.first; x.second *= y.second; return x;}$/;"	f
operator *	COMMON/interface_pass_coord.h	/^QPair<V, V> operator*(QPair<V, V> x, const QPair<T, T>& y) { x.first *= y.first; x.second *= y.second; return x;}$/;"	f
operator *	COMMON/interface_pass_coord.h	/^template<typename T> QPair<T, T> operator*(QPair<T, T> x, const T& Scale)   { x.first *= Scale; x.second *= Scale ; return x; }$/;"	f
operator *	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^cv::Rect& operator*(cv::Rect& rect, float Scale)$/;"	f
operator *	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^cv::Rect& operator*(float Scale, cv::Rect& rect)$/;"	f
operator *	CV_IMAGE_PROCESSING/image_processing_node.h	/^cv::Rect& operator*(T Scale, cv::Rect& rect)$/;"	f
operator *	CV_IMAGE_PROCESSING/image_processing_node.h	/^cv::Rect& operator*(cv::Rect& rect, T Scale)$/;"	f
operator *	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^MessageStruct<void*,H>& MessageIteratorDense<H>::operator*() { return *reinterpret_cast<MessageStruct<void*,H>* >(PtrMessageBegin); }$/;"	f	class:MessageIteratorDense
operator *	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^MessageGeneric<void*,H>& MessageIteratorGenericBase<H>::operator*() $/;"	f	class:IteratorMode::MessageIteratorGenericBase
operator *	gui_sources/qcustomplot.h	/^inline const QCPRange operator*(const QCPRange& range, double value)$/;"	f
operator *	gui_sources/qcustomplot.h	/^inline const QCPRange operator*(double value, const QCPRange& range)$/;"	f
operator *	gui_sources/qcustomplot.h	/^inline const QCPVector2D operator*(const QCPVector2D &vec, double factor) { return QCPVector2D(vec.mX*factor, vec.mY*factor); }$/;"	f
operator *	gui_sources/qcustomplot.h	/^inline const QCPVector2D operator*(double factor, const QCPVector2D &vec) { return QCPVector2D(vec.mX*factor, vec.mY*factor); }$/;"	f
operator *=	gui_sources/qcustomplot.cpp	/^QCPVector2D &QCPVector2D::operator*=(double factor)$/;"	f	class:QCPVector2D
operator *=	gui_sources/qcustomplot.h	/^  QCPRange &operator*=(const double& value) { lower*=value; upper*=value; return *this; }$/;"	f	class:QCPRange
operator +	COMMON/interface_pass_coord.h	/^std::pair<T, T> operator+(std::pair<T, T> x, const std::pair<T, T>& y) { x.first += y.first; x.second += y.second; return x; }$/;"	f
operator +	COMMON/interface_pass_coord.h	/^std::pair<double, double> operator+(const std::pair<T, T>& x, std::pair<double, double> y) { y.first += x.first; y.second += x.second; return y; }$/;"	f
operator +	COMMON/interface_pass_coord.h	/^std::pair<double, double> operator+(std::pair<double, double> x, const std::pair<T, T>& y) { x.first += y.first; x.second += y.second; return x; }$/;"	f
operator +	COMMON/interface_pass_coord.h	/^template<typename T> QPair<T, T> operator+(QPair<T, T> x, const T& addition){ x.first += addition; x.second += addition;  return x; }$/;"	f
operator +	gui_sources/qcustomplot.h	/^inline const QCPDataSelection operator+(const QCPDataRange& a, const QCPDataRange& b)$/;"	f
operator +	gui_sources/qcustomplot.h	/^inline const QCPDataSelection operator+(const QCPDataRange& a, const QCPDataSelection& b)$/;"	f
operator +	gui_sources/qcustomplot.h	/^inline const QCPDataSelection operator+(const QCPDataSelection& a, const QCPDataRange& b)$/;"	f
operator +	gui_sources/qcustomplot.h	/^inline const QCPDataSelection operator+(const QCPDataSelection& a, const QCPDataSelection& b)$/;"	f
operator +	gui_sources/qcustomplot.h	/^inline const QCPRange operator+(const QCPRange& range, double value)$/;"	f
operator +	gui_sources/qcustomplot.h	/^inline const QCPRange operator+(double value, const QCPRange& range)$/;"	f
operator +	gui_sources/qcustomplot.h	/^inline const QCPVector2D operator+(const QCPVector2D &vec1, const QCPVector2D &vec2) { return QCPVector2D(vec1.mX+vec2.mX, vec1.mY+vec2.mY); }$/;"	f
operator ++	COMMON/interface_image_source.h	/^    void operator++(int) { PushTick();}$/;"	f	class:FramePeriodMeasure
operator ++	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^MessageIteratorDense<H> MessageIteratorDense<H>::operator++(int) $/;"	f	class:MessageIteratorDense
operator ++	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^    MessageIteratorGeneric<H,IteratorMode::Chunked> operator++(int) { this->SwitchToNext(); return* this; };$/;"	f	class:IteratorMode::MessageIteratorGeneric
operator ++	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^    MessageIteratorGeneric<H,IteratorMode::ChunkedContinous> operator++(int) { this->SwitchToNext(); return* this; };$/;"	f	class:IteratorMode::MessageIteratorGeneric
operator ++	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^    MessageIteratorGeneric<H,IteratorMode::Continous> MessageIteratorGeneric<H, IteratorMode::Continous>::operator++(int) $/;"	f	class:IteratorMode::MessageIteratorGeneric
operator ++	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^    MessageIteratorGeneric<H,Mode> operator++(int) { this->SwitchToNext(); return* this; };$/;"	f	class:IteratorMode::MessageIteratorGeneric
operator ++	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^MessageIteratorGenericBase<H> MessageIteratorGenericBase<H>::operator++(int) { SwitchToNext(); return* this; }$/;"	f	class:IteratorMode::MessageIteratorGenericBase
operator ++	UTILITES/debug_output_filter.h	/^  virtual void operator++(int) {if(Counter < Peak) Counter++;}$/;"	f	class:BlockCounterClass
operator ++	UTILITES/thread_operation_nodes.h	/^    virtual void operator++(int) { counter++; if(counter > peak) counter = 0; }$/;"	f	class:ThinningFilter
operator ++	UTILITES/thread_operation_nodes.h	/^  void operator++(int) {if(ThinningFilter<V>::counter >= ThinningFilter<V>::peak) return ; ThinningFilter<V>::counter++; }$/;"	f	class:ValueBlockCounter
operator +=	gui_sources/qcustomplot.cpp	/^QCPDataSelection &QCPDataSelection::operator+=(const QCPDataRange &other)$/;"	f	class:QCPDataSelection
operator +=	gui_sources/qcustomplot.cpp	/^QCPDataSelection &QCPDataSelection::operator+=(const QCPDataSelection &other)$/;"	f	class:QCPDataSelection
operator +=	gui_sources/qcustomplot.cpp	/^QCPVector2D &QCPVector2D::operator+=(const QCPVector2D &vector)$/;"	f	class:QCPVector2D
operator +=	gui_sources/qcustomplot.h	/^  QCPRange &operator+=(const double& value) { lower+=value; upper+=value; return *this; }$/;"	f	class:QCPRange
operator -	COMMON/interface_pass_coord.h	/^std::pair<T, T> operator-(std::pair<T, T> x, const std::pair<T, T>& y) { x.first -= y.first; x.second -= y.second; return x; }$/;"	f
operator -	COMMON/interface_pass_coord.h	/^std::pair<T, T> operator-(std::pair<T, T> x, const std::pair<V, V>& y) { x.first -= y.first; x.second -= y.second; return x; }$/;"	f
operator -	gui_sources/qcustomplot.h	/^inline const QCPDataSelection operator-(const QCPDataRange& a, const QCPDataRange& b)$/;"	f
operator -	gui_sources/qcustomplot.h	/^inline const QCPDataSelection operator-(const QCPDataRange& a, const QCPDataSelection& b)$/;"	f
operator -	gui_sources/qcustomplot.h	/^inline const QCPDataSelection operator-(const QCPDataSelection& a, const QCPDataRange& b)$/;"	f
operator -	gui_sources/qcustomplot.h	/^inline const QCPDataSelection operator-(const QCPDataSelection& a, const QCPDataSelection& b)$/;"	f
operator -	gui_sources/qcustomplot.h	/^inline const QCPRange operator-(const QCPRange& range, double value)$/;"	f
operator -	gui_sources/qcustomplot.h	/^inline const QCPVector2D operator-(const QCPVector2D &vec) { return QCPVector2D(-vec.mX, -vec.mY); }$/;"	f
operator -	gui_sources/qcustomplot.h	/^inline const QCPVector2D operator-(const QCPVector2D &vec1, const QCPVector2D &vec2) { return QCPVector2D(vec1.mX-vec2.mX, vec1.mY-vec2.mY); }$/;"	f
operator -=	gui_sources/qcustomplot.cpp	/^QCPDataSelection &QCPDataSelection::operator-=(const QCPDataRange &other)$/;"	f	class:QCPDataSelection
operator -=	gui_sources/qcustomplot.cpp	/^QCPDataSelection &QCPDataSelection::operator-=(const QCPDataSelection &other)$/;"	f	class:QCPDataSelection
operator -=	gui_sources/qcustomplot.cpp	/^QCPVector2D &QCPVector2D::operator-=(const QCPVector2D &vector)$/;"	f	class:QCPVector2D
operator -=	gui_sources/qcustomplot.h	/^  QCPRange &operator-=(const double& value) { lower-=value; upper-=value; return *this; }$/;"	f	class:QCPRange
operator /	COMMON/interface_pass_coord.h	/^QPair<T, T> operator\/(QPair<T, T> x, const QPair<T, T>& y) { x.first \/= y.first; x.second \/= y.second; return x;}$/;"	f
operator /	COMMON/interface_pass_coord.h	/^QPair<V, V> operator\/(QPair<V, V> x, const QPair<T, T>& y) { x.first \/= y.first; x.second \/= y.second; return x;}$/;"	f
operator /	COMMON/interface_pass_coord.h	/^template<typename T> QPair<T, T> operator\/(QPair<T, T> x, const T& Scale)   { x.first \/= Scale; x.second \/= Scale ; return x; }$/;"	f
operator /	gui_sources/qcustomplot.h	/^inline const QCPRange operator\/(const QCPRange& range, double value)$/;"	f
operator /	gui_sources/qcustomplot.h	/^inline const QCPVector2D operator\/(const QCPVector2D &vec, double divisor) { return QCPVector2D(vec.mX\/divisor, vec.mY\/divisor); }$/;"	f
operator /=	gui_sources/qcustomplot.cpp	/^QCPVector2D &QCPVector2D::operator\/=(double divisor)$/;"	f	class:QCPVector2D
operator /=	gui_sources/qcustomplot.h	/^  QCPRange &operator\/=(const double& value) { lower\/=value; upper\/=value; return *this; }$/;"	f	class:QCPRange
operator <<	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    friend QDataStream& operator<<(QDataStream& stream , ControlCommandLaser& laserCommand)$/;"	f	struct:ControlCommandLaser
operator <<	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    friend QDataStream& operator<<(QDataStream& stream, HEADERStruct& HEADER) { stream << HEADER.HEADER1 << HEADER.HEADER2 << HEADER.DataSize; return stream;};$/;"	f	struct:HEADERStruct
operator <<	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	/^	friend SummVec<Type>& operator<<( SummVec<Type>& SubObj,PassCoordClass<float>& Sender)$/;"	f	class:SummVec
operator <<	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	/^	friend SummVec<Type>& operator<<(SummVec<Type>& SubObj,QPair<Type, Type> Coord)$/;"	f	class:SummVec
operator <<	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^template<typename H> void MessageIteratorDense<H>::operator<<(DataSourceClass& DataSource) { }$/;"	f	class:MessageIteratorDense
operator <<	TRANSMISSION/GENERIC_MESSAGES/message_header_generic_ext.h	/^    friend QDataStream& operator<<(QDataStream& stream, MESSAGE_HEADER_EXT& Head)$/;"	f	class:MESSAGE_HEADER_EXT
operator <<	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	/^template<typename M, typename H> void operator<<(QDataStream& stream, MessageGenericExt<M,H>& Message)$/;"	f
operator <<	UTILITES/debug_output_filter.cpp	/^OutputFilter& operator<<(QDebug out, OutputFilter& filter) $/;"	f
operator <<	UTILITES/debug_output_filter.cpp	/^template<> OutputFilter& operator<<(OutputFilter& filter, QTextStream& (*control)(QTextStream &))$/;"	f
operator <<	UTILITES/debug_output_filter.cpp	/^template<> OutputFilter& operator<<(OutputFilter& filter, const char* str)$/;"	f
operator <<	UTILITES/debug_output_filter.h	/^    OutputFilter& operator<<(QPair<T,T> Coord) {if(counter == peak)  out_message << Coord.first << Coord.second; return *this; };$/;"	f	class:OutputFilter
operator <<	UTILITES/debug_output_filter.h	/^    OutputFilter& operator<<(QString output) {if(counter == peak)  out_message << output; return *this; };$/;"	f	class:OutputFilter
operator <<	UTILITES/debug_output_filter.h	/^    OutputFilter& operator<<(const char* output) {if(counter == peak)  out_message << output; return *this; };$/;"	f	class:OutputFilter
operator <<	UTILITES/debug_output_filter.h	/^template<typename T> OutputFilter& operator<<(OutputFilter& filter, T value)$/;"	f
operator <<	gui_sources/qcustomplot.h	/^inline QDebug operator<< (QDebug d, const QCPDataRange &dataRange)$/;"	f
operator <<	gui_sources/qcustomplot.h	/^inline QDebug operator<< (QDebug d, const QCPDataSelection &selection)$/;"	f
operator <<	gui_sources/qcustomplot.h	/^inline QDebug operator<< (QDebug d, const QCPRange &range)$/;"	f
operator <<	gui_sources/qcustomplot.h	/^inline QDebug operator<< (QDebug d, const QCPVector2D &vec)$/;"	f
operator =	AIMING_MODULES/aiming_class.cpp	/^void AimingParamOptimizator::operator=(const AimingParamOptimizator& Optimizator)$/;"	f	class:AimingParamOptimizator
operator =	AIMING_MODULES/pid_param_struct.h	/^	void operator=(PIDParamStruct Param)$/;"	f	class:PIDParamStruct
operator =	AIMING_MODULES/rotate_vector_class.h	/^void RotateVectorClass<T>::operator=(RotateVectorClass<T> & Matrix)$/;"	f	class:RotateVectorClass
operator =	AIMING_MODULES/rotate_vector_class.h	/^void RotateVectorClass<T>::operator=(RotateVectorClass<T> && Matrix)$/;"	f	class:RotateVectorClass
operator =	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateOperationContainer::operator=(const RotateOperationContainer& CopyContainer)$/;"	f	class:RotateOperationContainer
operator =	TRANSMISSION/DATA_STRUCTURES/message_command_structures.h	/^   void operator=(const QPair<T,T>& Pos) { Param1 = Pos.first; Param2 = Pos.second; };$/;"	f	struct:CommandSetPos
operator =	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^void MessageIteratorDense<H>::operator=(const MessageIteratorDense<H>& Message)$/;"	f	class:MessageIteratorDense
operator =	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^void MessageIteratorGenericBase<H>::operator=(const MessageIteratorGenericBase<H>& Message)$/;"	f	class:IteratorMode::MessageIteratorGenericBase
operator =	UTILITES/debug_output_filter.h	/^  void operator=(const BlockCounterClass& Node) {this->Counter = Node.Counter; this->Peak = Node.Peak; this->FlagInverse = Node.FlagInverse;};$/;"	f	class:BlockCounterClass
operator =	UTILITES/engine_statistics.h	/^    void operator=(const StatisticGroup& Group) {};$/;"	f	class:StatisticGroup
operator =	UTILITES/thread_operation_nodes.h	/^  void operator=(ValueSaturation<T>& Node) { this->Threshold = Node.Threshold;}$/;"	f	class:ValueSaturation
operator =	UTILITES/thread_operation_nodes.h	/^void ValueDetector<T>::operator=(ValueDetector<T>& Detector)$/;"	f	class:ValueDetector
operator =	gui_sources/qcustomplot.cpp	/^QCPColorMapData &QCPColorMapData::operator=(const QCPColorMapData &other)$/;"	f	class:QCPColorMapData
operator ==	AIMING_MODULES/pid_param_struct.h	/^    bool operator==(PIDParamStruct Param)$/;"	f	class:PIDParamStruct
operator ==	COMMON/utilite.cpp	/^bool operator==(std::pair<int,int> pair, int value) { return pair.first == value && pair.second == value; };$/;"	f
operator ==	COMMON/utilite.cpp	/^bool operator==(std::pair<int,int> pair, std::pair<int,int> pair2) { return pair.first == pair2.first && pair.second == pair2.second; };$/;"	f
operator ==	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^template<typename H> bool MessageIteratorDense<H>::operator==(MessageIteratorDense<H>& Message) { return PtrMessageBegin == Message.PtrMessageBegin; }$/;"	f	class:MessageIteratorDense
operator ==	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^template<typename H> bool MessageIteratorGenericBase<H>::operator==(MessageIteratorGenericBase<H>& Message) { return PtrMessageBegin == Message.PtrMessageBegin; }$/;"	f	class:IteratorMode::MessageIteratorGenericBase
operator ==	gui_sources/qcustomplot.cpp	/^bool QCPColorGradient::operator==(const QCPColorGradient &other) const$/;"	f	class:QCPColorGradient
operator ==	gui_sources/qcustomplot.cpp	/^bool QCPDataSelection::operator==(const QCPDataSelection &other) const$/;"	f	class:QCPDataSelection
operator ==	gui_sources/qcustomplot.h	/^  bool operator==(const QCPDataRange& other) const { return mBegin == other.mBegin && mEnd == other.mEnd; }$/;"	f	class:QCPDataRange
operator ==	gui_sources/qcustomplot.h	/^  bool operator==(const QCPRange& other) const { return lower == other.lower && upper == other.upper; }$/;"	f	class:QCPRange
operator >>	COMMON/interface_pass_coord.h	/^	friend PassCoordClass& operator >>(const     QPair<V,V>&  Coord, PassCoordClass& Reciever)$/;"	f	class:PassCoordClass
operator >>	COMMON/interface_pass_coord.h	/^	virtual QPair<V,V>& operator >>(QPair<V, V>& Coord) { Coord = getOutput(); return Coord;}$/;"	f	class:PassCoordClass
operator >>	COMMON/interface_pass_coord.h	/^    virtual PassCoordClass& operator >>(PassCoordClass& Reciever)$/;"	f	class:PassCoordClass
operator >>	COMMON/interface_pass_image.h	/^	friend PassImageClass& operator >>(PassImageClass& Sender,    cv::Mat& Image)$/;"	f	class:PassImageClass
operator >>	COMMON/interface_pass_image.h	/^	friend PassImageClass& operator >>(const     cv::Mat&  Image, PassImageClass& Reciever)$/;"	f	class:PassImageClass
operator >>	COMMON/interface_pass_image.h	/^    friend PassImageClass& operator >>(PassImageClass& Sender, PassImageClass& Reciever)$/;"	f	class:PassImageClass
operator >>	COMMON/interface_pass_value.h	/^	friend PassValueClass& operator >>(               V Value, PassValueClass& Reciever)$/;"	f	class:PassValueClass
operator >>	COMMON/interface_pass_value.h	/^	friend PassValueClass& operator >>(               int Value, PassValueClass& Reciever)$/;"	f	class:PassValueClass
operator >>	COMMON/interface_pass_value.h	/^	friend PassValueClass& operator >>(               uint32_t Value, PassValueClass& Reciever)$/;"	f	class:PassValueClass
operator >>	COMMON/interface_pass_value.h	/^	friend PassValueClass& operator >>(PassValueClass& Sender,  V& Value)$/;"	f	class:PassValueClass
operator >>	COMMON/interface_pass_value.h	/^	friend PassValueClass& operator >>(PassValueClass& Sender,  int& Value)$/;"	f	class:PassValueClass
operator >>	COMMON/interface_pass_value.h	/^	friend PassValueClass& operator >>(PassValueClass& Sender,  uint32_t& Value)$/;"	f	class:PassValueClass
operator >>	COMMON/interface_pass_value.h	/^    friend PassValueClass& operator >>(PassValueClass& Sender, PassValueClass& Reciever)$/;"	f	class:PassValueClass
operator >>	CV_IMAGE_PROCESSING/optimization_threshold.h	/^	friend OptimizationThreshold& operator>>(const cv::Mat& Image, OptimizationThreshold& Node) $/;"	f	class:OptimizationThreshold
operator >>	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    friend QDataStream& operator>>(QDataStream& Stream, HEADERStruct& HEADER)$/;"	f	struct:HEADERStruct
operator >>	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    friend QDataStream& operator>>(QDataStream& stream , ControlCommandLaser& laserCommand)$/;"	f	struct:ControlCommandLaser
operator >>	DEVICES/LaserPointerControlLib/LaserCommandStructures.h	/^    friend void operator>>(QDataStream& Stream, LaserStateStruct& LaserState)$/;"	f	struct:LaserStateStruct
operator >>	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^AccumulateDataFilter& operator>>(QPair<float,float> coord, AccumulateDataFilter& Filter)$/;"	f
operator >>	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^RotateDataMeasureEngine& operator>>(std::pair<double,double> coord, RotateDataMeasureEngine& MeasureEngine)$/;"	f
operator >>	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void operator>>(AccumulateDataFilter& Filter, RotateOperationContainer& RotateContainer)$/;"	f
operator >>	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void operator>>(RotateDataMeasureEngine& MeasureEngine, RotateOperationContainer& RotateContainer)$/;"	f
operator >>	TRANSMISSION/GENERIC_MESSAGES/message_header_generic_ext.h	/^    friend QDataStream& operator>>(QDataStream& stream, MESSAGE_HEADER_EXT& Head)$/;"	f	class:MESSAGE_HEADER_EXT
operator >>	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	/^void operator>>(QDataStream& stream, MessageGenericExt<T,H>& Message)$/;"	f
operator >>	UTILITES/engine_statistics.h	/^    friend void operator>>(QPair<float,float> NewValue, StatisticGroup& StatObj) {};$/;"	f	class:StatisticGroup
operator >>	UTILITES/engine_statistics.h	/^    friend void operator>>(double NewValue, StatisticGroup& StatObj) {};$/;"	f	class:StatisticGroup
operator >>	UTILITES/thread_operation_nodes.h	/^    PassValueClass<T>& operator>>(PassValueClass<T>& Receiver) { return *this; };$/;"	f	class:PassValueNop
operator >>	UTILITES/thread_operation_nodes.h	/^    PassValueClass<V>& operator>>(PassValueClass<V>& Receiver) $/;"	f	class:ThinningFilter
operator >>	UTILITES/thread_operation_nodes.h	/^    void operator >>(int& OutputValue) {}$/;"	f	class:PassValueNop
operator >>	UTILITES/thread_operation_nodes.h	/^    void operator >>(uint32_t& OutputValue) {}$/;"	f	class:PassValueNop
operator >>	UTILITES/thread_operation_nodes.h	/^    void operator>>(T& Receiver) { };$/;"	f	class:PassValueNop
operator >>	UTILITES/thread_operation_nodes.h	/^    void operator>>(V& Receiver) { if(isOpen())  { Receiver = PassValueClass<V>::Value; } };$/;"	f	class:ThinningFilter
operator >>	UTILITES/thread_operation_nodes.h	/^  friend void operator>>(const QVector<T>& Storage, ValueStorage& Receiver)     { std::copy_n(Storage.begin(), Receiver.Values.size(), Receiver.Values.begin()); }$/;"	f	class:ValueStorage
operator >>	UTILITES/thread_operation_nodes.h	/^  friend void operator>>(const std::vector<T>& Storage, ValueStorage& Receiver) { std::copy_n(Storage.begin(), Receiver.Values.size(), Receiver.Values.begin()); }$/;"	f	class:ValueStorage
operator >>	UTILITES/thread_operation_nodes.h	/^  void operator>>(OutputStore Storage) $/;"	f	class:ValueStorage
operator >>	UTILITES/thread_operation_nodes.h	/^  void operator>>(std::vector<QPair<T,T>>& Storage) { Storage = Coords; }$/;"	f	class:CoordStorage
operator >>	UTILITES/thread_operation_nodes.h	/^PassValueClass<T>& ValueBreeder<T>::operator>>(PassValueClass<T>& Receiver) $/;"	f	class:ValueBreeder
operator >>	UTILITES/thread_operation_nodes.h	/^void operator>>(const QPair<T,T>& Coord, QQueue<QPair<T,T>>& queue_stor) { queue_stor.enqueue(Coord);};$/;"	f
operator >>	UTILITES/thread_operation_nodes.h	/^void operator>>(const T& Coord, QQueue<T>& queue_stor) { queue_stor.enqueue(Coord);};$/;"	f
operator >>	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.cpp	/^void operator>>(QPair<float,float> Point, PlotGraphicsInterface& Graph) $/;"	f
operator bool	UTILITES/debug_output_filter.h	/^  operator bool () {return isOpen();};$/;"	f	class:BlockCounterClass
operator |	COMMON/interface_pass_coord.h	/^    friend PassCoordClass& operator | (PassCoordClass& Sender, PassCoordClass& Reciever)$/;"	f	class:PassCoordClass
operator |	COMMON/interface_pass_coord.h	/^    friend PassCoordClass& operator | (std::shared_ptr<PassCoordClass> Sender, PassCoordClass& Reciever)$/;"	f	class:PassCoordClass
operator |	COMMON/interface_pass_coord.h	/^    friend std::shared_ptr<PassCoordClass>  operator | (std::shared_ptr<PassCoordClass> Sender, $/;"	f	class:PassCoordClass
operator |	COMMON/interface_pass_image.h	/^    friend PassImageClass& operator | (PassImageClass& Sender, PassImageClass& Reciever)$/;"	f	class:PassImageClass
operator |	COMMON/interface_pass_image.h	/^    friend PassImageClass& operator | (std::shared_ptr<PassImageClass> Sender, PassImageClass& Reciever)$/;"	f	class:PassImageClass
operator |	COMMON/interface_pass_image.h	/^    friend std::shared_ptr<PassImageClass>  operator | ( std::shared_ptr<PassImageClass> Sender, $/;"	f	class:PassImageClass
operator |	COMMON/interface_pass_value.h	/^    friend PassValueClass& operator | (PassValueClass& Sender, PassValueClass& Reciever)$/;"	f	class:PassValueClass
operator |	COMMON/interface_pass_value.h	/^    friend PassValueClass& operator | (std::shared_ptr<PassValueClass> Sender, PassValueClass& Reciever)$/;"	f	class:PassValueClass
operator |	COMMON/interface_pass_value.h	/^    friend std::shared_ptr<PassValueClass>  operator | (std::shared_ptr<PassValueClass> Sender, $/;"	f	class:PassValueClass
operator |	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^std::shared_ptr<ModuleImageProcessing> operator|(std::shared_ptr<ImageSourceInterface> Source, std::shared_ptr<ModuleImageProcessing> Rec)$/;"	f
operator |	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_app.h	/^    friend void operator|(RingBufferType& RingBuffer, MessageDispatcherClass& Processor) { Processor.DispatchNextMessage(RingBuffer); }$/;"	f	class:MessageDispatcherClass
operator |	TRANSMISSION/RING_BUFFER_ADAPTERS/message_dispatcher_generic.h	/^    friend void operator|(RingBufferType& RingBuffer, MessageDispatcher& Processor) $/;"	f	class:MessageDispatcher
opposite	gui_sources/qcustomplot.cpp	/^QCPAxis::AxisType QCPAxis::opposite(QCPAxis::AxisType type)$/;"	f	class:QCPAxis
orientation	gui_sources/qcustomplot.h	/^  Qt::Orientation orientation() const { return mOrientation; }$/;"	f	class:QCPAxis
orientation	gui_sources/qcustomplot.h	/^  static Qt::Orientation orientation(AxisType type) { return type==atBottom || type==atTop ? Qt::Horizontal : Qt::Vertical; }$/;"	f	class:QCPAxis
out_message	UTILITES/debug_output_filter.h	/^    QDebug out_message = QDebug(QtDebugMsg);$/;"	m	class:OutputFilter
outerRect	gui_sources/qcustomplot.h	/^  QRect outerRect() const { return mOuterRect; }$/;"	f	class:QCPLayoutElement
outlierStyle	gui_sources/qcustomplot.h	/^  QCPScatterStyle outlierStyle() const { return mOutlierStyle; }$/;"	f	class:QCPStatisticalBox
outliers	gui_sources/qcustomplot.h	/^  QVector<double> outliers;$/;"	m	class:QCPStatisticalBoxData
output_sigma_factor	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float output_sigma_factor;   \/\/!<  spatial bandwidth (proportional to target)$/;"	m	struct:cv::tracking::TrackerKCF::Params
output_to_optimize_rotation	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	vector<pair<double,double>> output_to_optimize_rotation;$/;"	m	class:RotateOperationContainer
overflow	ROTATE_OPTIMIZATION/RotationContainerLib/DebugStream.h	/^	virtual int_type overflow(int_type v)$/;"	f	class:QDebugStream
override	AIMING_MODULES/rotate_vector_class.h	/^	const QPair<T,T>& getOutput() override;$/;"	m	class:RotateVectorClass
override	AIMING_MODULES/rotate_vector_class.h	/^	void setInput(const QPair<T,T>& Coord) override;$/;"	m	class:RotateVectorClass
override	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    void SlotMoveAim() override; $/;"	m	class:DynamicAimControl
override	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    void SlotMoveAim() override; $/;"	m	class:ManualAimControl
override	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^QString&                     getInfo()  override ;  $/;"	m	class:AimImageImitatorClass
override	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^std::vector<QPair<int,int>>& getPoints()override ;  $/;"	m	class:AimImageImitatorClass
override	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^std::vector<QRect>&          getRects() override ;  $/;"	m	class:AimImageImitatorClass
override	CAMERA_INTERFACE/camera_interface_class.h	/^     QImage& getImageToDisplay() override ;$/;"	m	class:CameraInterfaceAravis
override	CAMERA_INTERFACE/camera_interface_class.h	/^    QString& getInfo() override;  $/;"	m	class:CameraInterfaceAravis
override	CAMERA_INTERFACE/camera_interface_class.h	/^    bool switchToNextFrame() override;$/;"	m	class:CameraInterfaceAravis
override	CAMERA_INTERFACE/camera_interface_class.h	/^    cv::Mat& getImageToProcess() override ;$/;"	m	class:CameraInterfaceAravis
override	CAMERA_INTERFACE/camera_interface_class.h	/^    std::vector<QPair<int,int>>& getPoints() override;  $/;"	m	class:CameraInterfaceAravis
override	CAMERA_INTERFACE/camera_interface_class.h	/^    std::vector<QRect>& getRects() override;  $/;"	m	class:CameraInterfaceAravis
override	CAMERA_INTERFACE/camera_interface_class.h	/^    void SetCameraRegion(int x, int y, int width, int height ) override;$/;"	m	class:CameraInterfaceAravis
override	CAMERA_INTERFACE/camera_interface_class.h	/^    void SetZoom(int Number) override;$/;"	m	class:CameraInterfaceAravis
override	CAMERA_INTERFACE/camera_interface_class.h	/^    void StartCameraStream(bool OnOff) override;$/;"	m	class:CameraInterfaceAravis
override	CAMERA_INTERFACE/camera_interface_class.h	/^    void getImageToProcess(cv::Mat& ImageDst)override ;$/;"	m	class:CameraInterfaceAravis
override	CAMERA_INTERFACE/camera_interface_class.h	/^    void skipFrames() override;$/;"	m	class:CameraInterfaceAravis
override	CAMERA_INTERFACE/interface_camera_hik.h	/^           std::pair<float,float> getFramePeriod() override ;$/;"	m	class:CameraInterfaceHIK
override	CAMERA_INTERFACE/interface_camera_hik.h	/^      void getImageToDisplay(QImage& ImageDst) override ;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
override	CAMERA_INTERFACE/interface_camera_hik.h	/^      void getImageToProcess(cv::Mat& ImageDst)override ;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
override	CAMERA_INTERFACE/interface_camera_hik.h	/^    bool switchToNextFrame() override;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
override	CAMERA_INTERFACE/interface_camera_hik.h	/^    void skipFrames() override;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
override	CAMERA_INTERFACE/interface_camera_hik.h	/^   QImage& getImageToDisplay() override ;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
override	CAMERA_INTERFACE/interface_camera_hik.h	/^  cv::Mat& getImageToProcess() override ;$/;"	m	class:CameraInterfaceHIK::CameraImageStorage
override	CAMERA_INTERFACE/interface_camera_hik.h	/^  std::shared_ptr<ImageSourceInterface> getImageSourceChannel() override;$/;"	m	class:CameraInterfaceHIK
override	CAMERA_INTERFACE/interface_camera_hik.h	/^  void SetZoom(int Number) override;$/;"	m	class:CameraInterfaceHIK
override	CV_IMAGE_PROCESSING/image_finder.h	/^   void SlotProcessImage() override;$/;"	m	class:ImageTemplateFinder
override	CV_IMAGE_PROCESSING/image_finder.h	/^   void SlotProcessImage(const cv::Mat& Image) override;$/;"	m	class:ImageTemplateFinder
override	CV_IMAGE_PROCESSING/image_processing_node.h	/^    QImage&  getImageToDisplay()              override;$/;"	m	class:ModuleImageProcessing
override	CV_IMAGE_PROCESSING/image_processing_node.h	/^    QString&                     getInfo()    override;  $/;"	m	class:ModuleImageProcessing
override	CV_IMAGE_PROCESSING/image_processing_node.h	/^    cv::Mat& getImageToProcess()              override;$/;"	m	class:ModuleImageProcessing
override	CV_IMAGE_PROCESSING/image_processing_node.h	/^    std::pair<float,float> getFramePeriod() override ;$/;"	m	class:ModuleImageProcessing
override	CV_IMAGE_PROCESSING/image_processing_node.h	/^    std::vector<QPair<int,int>>& getPoints()  override;  $/;"	m	class:ModuleImageProcessing
override	CV_IMAGE_PROCESSING/image_processing_node.h	/^    std::vector<QRect>&          getRects()   override;  $/;"	m	class:ModuleImageProcessing
override	CV_IMAGE_PROCESSING/image_processing_node.h	/^    void getImageToDisplay(QImage& ImageDst)  override;$/;"	m	class:ModuleImageProcessing
override	CV_IMAGE_PROCESSING/image_processing_node.h	/^    void getImageToProcess(cv::Mat& ImageDst) override;$/;"	m	class:ModuleImageProcessing
override	CV_IMAGE_PROCESSING/image_processing_node.h	/^    void setInput (const QPair<float,float>& Coord) override;$/;"	m	class:ModuleImageProcessing
override	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  void CalcThreshold(const cv::Mat& Image) override;$/;"	m	class:ThresholdAdjustionDispersion
override	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  void CalcThreshold(const cv::Mat& Image) override;$/;"	m	class:ThresholdCalculationLumen
override	CV_IMAGE_PROCESSING/optimization_threshold.h	/^  void CalcThreshold(const cv::Mat& Image) override;$/;"	m	class:ThresholdFindingParallelDispersion
override	CV_IMAGE_PROCESSING/tracker_centroid.h	/^    void CalcThreshold() override;$/;"	m	class:ImageTrackerCentroid
override	CV_IMAGE_PROCESSING/tracker_centroid.h	/^   void SlotProcessImage() override;$/;"	m	class:ImageTrackerCentroid
override	CV_IMAGE_PROCESSING/tracker_centroid.h	/^   void SlotProcessImage() override;$/;"	m	class:ImageTrackerCentroidGPU
override	CV_IMAGE_PROCESSING/tracker_centroid.h	/^   void SlotResetProcessing() override;$/;"	m	class:ImageTrackerCentroid
override	CV_IMAGE_PROCESSING/tracker_template.h	/^   void SlotProcessImage() override;$/;"	m	class:ImageTrackerTemplate
override	CV_IMAGE_PROCESSING/tracker_template.h	/^   void SlotProcessImage(const cv::Mat& Image) override;$/;"	m	class:ImageTrackerTemplate
override	CV_IMAGE_PROCESSING/tracker_template.h	/^   void SlotResetProcessing() override;$/;"	m	class:ImageTrackerTemplate
override	DEVICES/device_laser_interface.h	/^	void setParam(uint8_t ID, uint16_t Value) override;$/;"	m	class:DeviceLaserInterface
override	DEVICES/device_laser_interface.h	/^    void putMessage(T_MESSAGE Message) override; $/;"	m	class:DeviceLaserInterface
override	DEVICES/device_rotary_interface.h	/^	          bool checkRangeOffset(QPair<int,int> Pos) override;$/;"	m	class:DeviceRotaryInterface
override	DEVICES/device_rotary_interface.h	/^	QPair<int,int> getLimits(int axis) override;$/;"	m	class:DeviceRotaryInterface
override	DEVICES/device_rotary_interface.h	/^	void moveOnStep(const QPair<int, int>& Pos) override;$/;"	m	class:DeviceRotaryInterface
override	DEVICES/device_rotary_interface.h	/^	void moveToPos(const QPair<int, int>& Pos) override;$/;"	m	class:DeviceRotaryInterface
override	DEVICES/device_rotary_interface.h	/^	void moveToPosRelative(const QPair<int, int>& Pos) override;$/;"	m	class:DeviceRotaryInterface
override	DEVICES/device_rotary_interface.h	/^	void setParam(uint8_t ID, uint16_t Value) override;$/;"	m	class:DeviceRotaryInterface
override	DEVICES/device_rotary_interface.h	/^	void setParams(uint16_t Value1, uint16_t Value2) override;$/;"	m	class:DeviceRotaryInterface
override	DEVICES/device_rotary_interface.h	/^	void setParams(uint16_t Value1, uint16_t Value2, uint16_t Value3, uint16_t Value4) override; $/;"	m	class:DeviceRotaryInterface
override	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	const QPair<float,float>& getOutput() override;$/;"	m	class:AccumulateDataFilter
override	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	const QPair<float,float>& getOutput() override;$/;"	m	class:RotateOperationContainer
override	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	void setInput(const QPair<float,float>& Coord) override;$/;"	m	class:AccumulateDataFilter
override	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	void setInput(const QPair<float,float>& Coord) override;$/;"	m	class:RotateOperationContainer
override	TRANSMISSION/EMBEDED_RING_BUFFER/message_iterator_generic.h	/^	void LoadData(uint8_t* DataSourceBuffer, uint16_t BytesCountReceived) override;$/;"	m	class:IteratorMode::MessageIteratorGeneric
override	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^  bool isConnected() override;$/;"	m	class:TCPConnectionEngine
override	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^  bool isMessageAvailable() override;$/;"	m	class:TCPConnectionEngine
override	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^  void  listenTo(QHostAddress::SpecialAddress IPDevice, int Port) override;$/;"	m	class:TCPConnectionEngine
override	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^  void  listenTo(QString IPDevice, int Port) override;$/;"	m	class:TCPConnectionEngine
override	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^  void connectTo(QString IPDevice, int Port) override;$/;"	m	class:TCPConnectionEngine
override	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^  void slotCheckConnection() override;$/;"	m	class:TCPConnectionEngine
override	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^  void slotCloseConnection() override;$/;"	m	class:TCPConnectionEngine
override	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^  void slotSendMessage(const QByteArray& Command, uint8_t Param = 0) override;$/;"	m	class:TCPConnectionEngine
override	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^  void slotSendMessage(const char* DataCommand, int size, uint8_t Param = 0) override;$/;"	m	class:TCPConnectionEngine
override	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.h	/^  void tryConnectConstantly(QString Address, int Port) override;$/;"	m	class:TCPConnectionEngine
override	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^    bool isConnected() override;$/;"	m	class:UDPEngineInterface
override	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^    bool isMessageAvailable() override;$/;"	m	class:UDPEngineInterface
override	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^    void  listenTo(QHostAddress::SpecialAddress IPHost, int Port) override;$/;"	m	class:UDPEngineInterface
override	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^    void  listenTo(QString IPHost, int Port) override;$/;"	m	class:UDPEngineInterface
override	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^    void connectTo(QString IPDevice, int Port) override;$/;"	m	class:UDPEngineInterface
override	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^    void tryConnectConstantly(QString Address, int Port) override;$/;"	m	class:UDPEngineInterface
override	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^  void slotCheckConnection() override;$/;"	m	class:UDPEngineInterface
override	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^  void slotCloseConnection() override;$/;"	m	class:UDPEngineInterface
override	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^  void slotSendMessage(const QByteArray& ArrayCommand, uint8_t Param = 0) override;$/;"	m	class:UDPEngineInterface
override	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^  void slotSendMessage(const char* DataCommand, int size, uint8_t Param = 0) override;$/;"	m	class:UDPEngineInterface
override	UTILITES/engine_statistics.h	/^	void SetValue(T Input) override;$/;"	m	class:StatisticValue
override	UTILITES/thread_operation_nodes.h	/^      void SetValue(T InputValue) override;$/;"	m	class:ValueCategorizer
override	UTILITES/thread_operation_nodes.h	/^    void SetValue(T NewValue) override;$/;"	m	class:EndReceiver
override	UTILITES/thread_operation_nodes.h	/^  PassValueClass<T>& operator>>(PassValueClass<T>& Receiver) override; $/;"	m	class:ValueBreeder
override	UTILITES/thread_operation_nodes.h	/^  void SetValue(T NewValue) override;$/;"	m	class:ValueDifference
override	UTILITES/thread_operation_nodes.h	/^  void SetValue(T NewValue) override;$/;"	m	class:ValueInversion
override	UTILITES/thread_operation_nodes.h	/^  void SetValue(T NewValue) override;$/;"	m	class:ValueRandomization
override	UTILITES/thread_operation_nodes.h	/^  void SetValue(T NewValue) override;$/;"	m	class:ValueSaturation
override	gui_sources/link_line.h	/^    QRectF boundingRect() const override;$/;"	m	class:LinkLine
override	gui_sources/link_line.h	/^    void mouseDoubleClickEvent(QGraphicsSceneMouseEvent* event) override;$/;"	m	class:LinkLine
override	gui_sources/link_line.h	/^    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) override;$/;"	m	class:LinkLine
override	gui_sources/node.h	/^    QPainterPath shape() const override;$/;"	m	class:Node
override	gui_sources/node.h	/^    QRectF boundingRect() const override;$/;"	m	class:Node
override	gui_sources/node.h	/^    QVariant itemChange(GraphicsItemChange change, const QVariant &value) override;$/;"	m	class:Node
override	gui_sources/node.h	/^    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) override;$/;"	m	class:Node
override	gui_sources/widget_main_window.h	/^    void closeEvent(QCloseEvent *event) override;$/;"	m	class:WidgetMainWindow
padding	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float padding;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
padding	gui_sources/qcustomplot.h	/^  QMargins padding() const { return mPadding; }$/;"	f	class:QCPItemText
padding	gui_sources/qcustomplot.h	/^  int padding() const { return mPadding; }$/;"	f	class:QCPAxis
padding	gui_sources/qcustomplot.h	/^  int padding() const { return mPadding; }$/;"	f	class:QCPLabelPainterPrivate
page	build/ImageProcProject_autogen/include/ui_widget_container_group.h	/^    QWidget *page;$/;"	m	class:Ui_WidgetContainerGroup
page_2	build/ImageProcProject_autogen/include/ui_widget_container_group.h	/^    QWidget *page_2;$/;"	m	class:Ui_WidgetContainerGroup
paint	gui_sources/link_line.cpp	/^void LinkLine::paint(QPainter *painter, const QStyleOptionGraphicsItem *, QWidget *)$/;"	f	class:LinkLine
paint	gui_sources/node.cpp	/^void Node::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *)$/;"	f	class:Node
paintEvent	gui_sources/qcustomplot.cpp	/^void QCustomPlot::paintEvent(QPaintEvent *event)$/;"	f	class:QCustomPlot
parentAnchor	gui_sources/qcustomplot.h	/^  QCPItemAnchor *parentAnchor() const { return parentAnchorX(); }$/;"	f	class:QCPItemPosition
parentAnchorX	gui_sources/qcustomplot.h	/^  QCPItemAnchor *parentAnchorX() const { return mParentAnchorX; }$/;"	f	class:QCPItemPosition
parentAnchorY	gui_sources/qcustomplot.h	/^  QCPItemAnchor *parentAnchorY() const { return mParentAnchorY; }$/;"	f	class:QCPItemPosition
parentLayerable	gui_sources/qcustomplot.h	/^  QCPLayerable *parentLayerable() const { return mParentLayerable.data(); }$/;"	f	class:QCPLayerable
parentLegend	gui_sources/qcustomplot.h	/^  QCPLegend *parentLegend() const { return mParentLegend; }$/;"	f	class:QCPAbstractLegendItem
parentPlot	gui_sources/qcustomplot.h	/^  QCustomPlot *parentPlot() const { return mParentPlot; }$/;"	f	class:QCPLayer
parentPlot	gui_sources/qcustomplot.h	/^  QCustomPlot *parentPlot() const { return mParentPlot; }$/;"	f	class:QCPLayerable
parentPlotInitialized	gui_sources/qcustomplot.cpp	/^void QCPLayerable::parentPlotInitialized(QCustomPlot *parentPlot)$/;"	f	class:QCPLayerable
parentPlotInitialized	gui_sources/qcustomplot.cpp	/^void QCPLayoutElement::parentPlotInitialized(QCustomPlot *parentPlot)$/;"	f	class:QCPLayoutElement
parentPlotInitialized	gui_sources/qcustomplot.cpp	/^void QCPLegend::parentPlotInitialized(QCustomPlot *parentPlot)$/;"	f	class:QCPLegend
passCoord	COMMON/interface_pass_coord.h	/^	void passCoord() { if(!isLinked() || PassBlocked) return; for(auto& link: NodesLinked) {*this >> *link;} }$/;"	f	class:PassCoordClass
passCoord	COMMON/interface_pass_value.h	/^	void passCoord() { if(!isLinked()) return; for(auto& Link: NodesLinked) *this >> *Link; }$/;"	f	class:PassValueClass
pass_counter	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	int pass_counter = 0;$/;"	m	class:AccumulateDataFilter
payload	CAMERA_INTERFACE/camera_interface_class.h	/^    size_t payload;$/;"	m	class:CameraInterfaceAravis
pca_learning_rate	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float pca_learning_rate;     \/\/!<  compression learning rate$/;"	m	struct:cv::tracking::TrackerKCF::Params
peak	UTILITES/debug_output_filter.h	/^    int peak;$/;"	m	class:OutputFilter
peak	UTILITES/thread_operation_nodes.h	/^    int peak;$/;"	m	class:ThinningFilter
peak	UTILITES/thread_operation_nodes.h	/^  int peak = 10;$/;"	m	class:CoordPassThinning
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPAbstractPlottable
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPGrid
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPItemBracket
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPItemCurve
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPItemEllipse
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPItemLine
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPItemPixmap
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPItemRect
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPItemStraightLine
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPItemText
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPItemTracer
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPPolarGraph
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPScatterStyle
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPSelectionDecorator
pen	gui_sources/qcustomplot.h	/^  QPen pen() const { return mPen; }$/;"	f	class:QCPSelectionRect
penNegative	gui_sources/qcustomplot.h	/^  QPen penNegative() const { return mPenNegative; }$/;"	f	class:QCPFinancial
penPositive	gui_sources/qcustomplot.h	/^  QPen penPositive() const { return mPenPositive; }$/;"	f	class:QCPFinancial
performAutoSqueeze	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::performAutoSqueeze()$/;"	f	class:QCPDataContainer
periodic	gui_sources/qcustomplot.h	/^  bool periodic() const { return mPeriodic; }$/;"	f	class:QCPColorGradient
periodic	gui_sources/qcustomplot.h	/^  bool periodic() const { return mPeriodic; }$/;"	f	class:QCPPolarGraph
periodicity	gui_sources/qcustomplot.h	/^  bool periodicity() const { return mPeriodicity; }$/;"	f	class:QCPAxisTickerPi
perpendicular	gui_sources/qcustomplot.h	/^  QCPVector2D perpendicular() const { return QCPVector2D(-mY, mX); }$/;"	f	class:QCPVector2D
phCacheLabels	gui_sources/qcustomplot.h	/^                    ,phCacheLabels      = 0x004 \/\/\/< <tt>0x004<\/tt> axis (tick) labels will be cached as pixmaps, increasing replot performance.$/;"	e	enum:QCP::PlottingHint
phFastPolylines	gui_sources/qcustomplot.h	/^                    ,phFastPolylines    = 0x001 \/\/\/< <tt>0x001<\/tt> Graph\/Curve lines are drawn with a faster method. This reduces the quality especially of the line segment$/;"	e	enum:QCP::PlottingHint
phImmediateRefresh	gui_sources/qcustomplot.h	/^                    ,phImmediateRefresh = 0x002 \/\/\/< <tt>0x002<\/tt> causes an immediate repaint() instead of a soft update() when QCustomPlot::replot() is called with parameter \\ref QCustomPlot::rpRefreshHint.$/;"	e	enum:QCP::PlottingHint
phNone	gui_sources/qcustomplot.h	/^enum PlottingHint { phNone              = 0x000 \/\/\/< <tt>0x000<\/tt> No hints are set$/;"	e	enum:QCP::PlottingHint
piSymbol	gui_sources/qcustomplot.h	/^  QString piSymbol() const { return mPiSymbol; }$/;"	f	class:QCPAxisTickerPi
piValue	gui_sources/qcustomplot.h	/^  double piValue() const { return mPiValue; }$/;"	f	class:QCPAxisTickerPi
pickClosest	gui_sources/qcustomplot.cpp	/^double QCPAxisTicker::pickClosest(double target, const QVector<double> &candidates) const$/;"	f	class:QCPAxisTicker
pixelOrientation	gui_sources/qcustomplot.h	/^  int pixelOrientation() const { return rangeReversed() != (orientation()==Qt::Vertical) ? -1 : 1; }$/;"	f	class:QCPAxis
pixelPosition	gui_sources/qcustomplot.cpp	/^QPointF QCPItemAnchor::pixelPosition() const$/;"	f	class:QCPItemAnchor
pixelPosition	gui_sources/qcustomplot.cpp	/^QPointF QCPItemPosition::pixelPosition() const$/;"	f	class:QCPItemPosition
pixelToCoord	gui_sources/qcustomplot.cpp	/^double QCPAxis::pixelToCoord(double value) const$/;"	f	class:QCPAxis
pixelToCoord	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::pixelToCoord(QPointF pixelPos, double &angleCoord, double &radiusCoord) const$/;"	f	class:QCPPolarAxisAngular
pixelToCoord	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::pixelToCoord(QPointF pixelPos, double &angleCoord, double &radiusCoord) const$/;"	f	class:QCPPolarAxisRadial
pixel_scale_remote_to_local	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	double pixel_scale_remote_to_local = 0; \/\/ remote it is output coord$/;"	m	class:RotateOperationContainer
pixelsToCoords	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::pixelsToCoords(const QPointF &pixelPos, double &key, double &value) const$/;"	f	class:QCPAbstractPlottable
pixelsToCoords	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::pixelsToCoords(double x, double y, double &key, double &value) const$/;"	f	class:QCPAbstractPlottable
pixelsToCoords	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::pixelsToCoords(const QPointF &pixelPos, double &key, double &value) const$/;"	f	class:QCPPolarGraph
pixelsToCoords	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::pixelsToCoords(double x, double y, double &key, double &value) const$/;"	f	class:QCPPolarGraph
pixmap	gui_sources/qcustomplot.h	/^    QPixmap pixmap;$/;"	m	struct:QCPAxisPainterPrivate::CachedLabel
pixmap	gui_sources/qcustomplot.h	/^    QPixmap pixmap;$/;"	m	struct:QCPLabelPainterPrivate::CachedLabel
pixmap	gui_sources/qcustomplot.h	/^  QPixmap pixmap() const { return mPixmap; }$/;"	f	class:QCPItemPixmap
pixmap	gui_sources/qcustomplot.h	/^  QPixmap pixmap() const { return mPixmap; }$/;"	f	class:QCPScatterStyle
placeTickLabel	gui_sources/qcustomplot.cpp	/^void QCPAxisPainterPrivate::placeTickLabel(QCPPainter *painter, double position, int distanceToAxis, const QString &text, QSize *tickLabelsSize)$/;"	f	class:QCPAxisPainterPrivate
plotLayout	gui_sources/qcustomplot.h	/^  QCPLayoutGrid *plotLayout() const { return mPlotLayout; }$/;"	f	class:QCustomPlot
plottable	gui_sources/qcustomplot.cpp	/^QCPAbstractPlottable *QCustomPlot::plottable()$/;"	f	class:QCustomPlot
plottable	gui_sources/qcustomplot.cpp	/^QCPAbstractPlottable *QCustomPlot::plottable(int index)$/;"	f	class:QCustomPlot
plottable	gui_sources/qcustomplot.h	/^  QCPAbstractPlottable *plottable() { return mPlottable; }$/;"	f	class:QCPPlottableLegendItem
plottableAt	gui_sources/qcustomplot.cpp	/^QCPAbstractPlottable *QCustomPlot::plottableAt(const QPointF &pos, bool onlySelectable, int *dataIndex) const$/;"	f	class:QCustomPlot
plottableAt	gui_sources/qcustomplot.h	/^PlottableType *QCustomPlot::plottableAt(const QPointF &pos, bool onlySelectable, int *dataIndex) const$/;"	f	class:QCustomPlot
plottableClick	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::plottableClick(QCPAbstractPlottable * _t1, int _t2, QMouseEvent * _t3)$/;"	f	class:QCustomPlot
plottableCount	gui_sources/qcustomplot.cpp	/^int QCustomPlot::plottableCount() const$/;"	f	class:QCustomPlot
plottableDoubleClick	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::plottableDoubleClick(QCPAbstractPlottable * _t1, int _t2, QMouseEvent * _t3)$/;"	f	class:QCustomPlot
plottables	gui_sources/qcustomplot.cpp	/^QList<QCPAbstractPlottable*> QCPAxis::plottables() const$/;"	f	class:QCPAxis
plottables	gui_sources/qcustomplot.cpp	/^QList<QCPAbstractPlottable*> QCPAxisRect::plottables() const$/;"	f	class:QCPAxisRect
plottingHints	gui_sources/qcustomplot.h	/^  QCP::PlottingHints plottingHints() const { return mPlottingHints; }$/;"	f	class:QCustomPlot
pmDefault	gui_sources/qcustomplot.h	/^  enum PainterMode { pmDefault       = 0x00   \/\/\/< <tt>0x00<\/tt> Default mode for painting on screen devices$/;"	e	enum:QCPPainter::PainterMode
pmNoCaching	gui_sources/qcustomplot.h	/^                     ,pmNoCaching    = 0x02   \/\/\/< <tt>0x02<\/tt> Mode for all sorts of exports (e.g. PNG, PDF,...). For example, this prevents using cached pixmap labels$/;"	e	enum:QCPPainter::PainterMode
pmNonCosmetic	gui_sources/qcustomplot.h	/^                     ,pmNonCosmetic  = 0x04   \/\/\/< <tt>0x04<\/tt> Turns pen widths 0 to 1, i.e. disables cosmetic pens. (A cosmetic pen is always drawn with width 1 pixel in the vector image\/pdf viewer, independent of zoom.)$/;"	e	enum:QCPPainter::PainterMode
pmVectorized	gui_sources/qcustomplot.h	/^                     ,pmVectorized   = 0x01   \/\/\/< <tt>0x01<\/tt> Mode for vectorized painting (e.g. PDF export). For example, this prevents some antialiasing fixes.$/;"	e	enum:QCPPainter::PainterMode
point1	gui_sources/qcustomplot.h	/^  QCPItemPosition * const point1;$/;"	m	class:QCPItemStraightLine
point2	gui_sources/qcustomplot.h	/^  QCPItemPosition * const point2;$/;"	m	class:QCPItemStraightLine
pointDistance	gui_sources/qcustomplot.cpp	/^double QCPCurve::pointDistance(const QPointF &pixelPoint, QCPCurveDataContainer::const_iterator &closestData) const$/;"	f	class:QCPCurve
pointDistance	gui_sources/qcustomplot.cpp	/^double QCPErrorBars::pointDistance(const QPointF &pixelPoint, QCPErrorBarsDataContainer::const_iterator &closestData) const$/;"	f	class:QCPErrorBars
pointDistance	gui_sources/qcustomplot.cpp	/^double QCPGraph::pointDistance(const QPointF &pixelPoint, QCPGraphDataContainer::const_iterator &closestData) const$/;"	f	class:QCPGraph
pointDistance	gui_sources/qcustomplot.cpp	/^double QCPPolarGraph::pointDistance(const QPointF &pixelPoint, QCPGraphDataContainer::const_iterator &closestData) const$/;"	f	class:QCPPolarGraph
polarGraph	gui_sources/qcustomplot.h	/^  QCPPolarGraph *polarGraph() { return mPolarGraph; }$/;"	f	class:QCPPolarLegendItem
position	gui_sources/qcustomplot.cpp	/^QCPItemPosition *QCPAbstractItem::position(const QString &name) const$/;"	f	class:QCPAbstractItem
position	gui_sources/qcustomplot.h	/^  QCPItemPosition * const position;$/;"	m	class:QCPItemText
position	gui_sources/qcustomplot.h	/^  QCPItemPosition * const position;$/;"	m	class:QCPItemTracer
positionAlignment	gui_sources/qcustomplot.h	/^  Qt::Alignment positionAlignment() const { return mPositionAlignment; }$/;"	f	class:QCPItemText
positions	gui_sources/qcustomplot.h	/^  QList<QCPItemPosition*> positions() const { return mPositions; }$/;"	f	class:QCPAbstractItem
preallocateGrow	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::preallocateGrow(int minimumPreallocSize)$/;"	f	class:QCPDataContainer
predict	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.cpp	/^void TrackerFirst::predict()$/;"	f	class:TrackerFirst
predicted_coords	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^	cv::Point predicted_coords;$/;"	m	class:TrackerFirst
printAvailableDevices	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.cpp	/^void CANConnectionEngine::printAvailableDevices()$/;"	f	class:CANConnectionEngine
printPeriod	COMMON/interface_image_source.h	/^    QString printPeriod()$/;"	f	class:FramePeriodMeasure
printRegisteredTypes	main.cpp	/^void printRegisteredTypes()$/;"	f
processPointSelection	gui_sources/qcustomplot.cpp	/^void QCustomPlot::processPointSelection(QMouseEvent *event)$/;"	f	class:QCustomPlot
processRectSelection	gui_sources/qcustomplot.cpp	/^void QCustomPlot::processRectSelection(QRect rect, QMouseEvent *event)$/;"	f	class:QCustomPlot
processRectZoom	gui_sources/qcustomplot.cpp	/^void QCustomPlot::processRectZoom(QRect rect, QMouseEvent *event)$/;"	f	class:QCustomPlot
processServerRTSP	stream_video_rtsp.h	/^  GMainLoop* processServerRTSP; $/;"	m	class:VideoStreamRTSP
psr_threshold	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float psr_threshold; \/\/!< we lost the target, if the psr is lower than this.$/;"	m	struct:cv::tracking::TrackerCSRT::Params
ptAbsolute	gui_sources/qcustomplot.h	/^  enum PositionType { ptAbsolute        \/\/\/< Static positioning in pixels, starting from the top left corner of the viewport\/widget.$/;"	e	enum:QCPItemPosition::PositionType
ptAxisRectRatio	gui_sources/qcustomplot.h	/^                      ,ptAxisRectRatio  \/\/\/< Static positioning given by a fraction of the axis rect size (see \\ref setAxisRect). For example, if you call setCoords(0, 0), the position will be at the top$/;"	e	enum:QCPItemPosition::PositionType
ptPlotCoords	gui_sources/qcustomplot.h	/^                      ,ptPlotCoords     \/\/\/< Dynamic positioning at a plot coordinate defined by two axes (see \\ref setAxes).$/;"	e	enum:QCPItemPosition::PositionType
ptViewportRatio	gui_sources/qcustomplot.h	/^                      ,ptViewportRatio  \/\/\/< Static positioning given by a fraction of the viewport size. For example, if you call setCoords(0, 0), the position will be at the top$/;"	e	enum:QCPItemPosition::PositionType
pushButton	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^    QPushButton *pushButton;$/;"	m	class:Ui_WidgetProcessingImageControl
putMessage	DEVICES/device_focus_ranger_interface.h	/^        void putMessage(T_MESSAGE Message) { messageState = Message;};$/;"	f	class:DeviceFocusRangerInterface
putMessage	DEVICES/device_laser_interface.h	/^void DeviceLaserInterface<T_CONNECTION,T_COMMAND,T_MESSAGE>::putMessage(T_MESSAGE message)$/;"	f	class:DeviceLaserInterface
qCleanupResources_pictures	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	/^int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_pictures)()$/;"	f
qInitResources_pictures	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	/^int QT_RCC_MANGLE_NAMESPACE(qInitResources_pictures)()$/;"	f
qcpLessThanSortKey	gui_sources/qcustomplot.h	/^inline bool qcpLessThanSortKey(const DataType &a, const DataType &b) { return a.sortKey() < b.sortKey(); }$/;"	f
qnxnto	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qt_meta_data_ZN10LabelImageE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_labelimage.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN10LabelImageE[] = {$/;"	v	file:
qt_meta_data_ZN10QCPPainterE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN10QCPPainterE[] = {$/;"	v	file:
qt_meta_data_ZN11QCPAxisRectE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN11QCPAxisRectE[] = {$/;"	v	file:
qt_meta_data_ZN11QCPColorMapE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN11QCPColorMapE[] = {$/;"	v	file:
qt_meta_data_ZN11QCPItemLineE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN11QCPItemLineE[] = {$/;"	v	file:
qt_meta_data_ZN11QCPItemRectE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN11QCPItemRectE[] = {$/;"	v	file:
qt_meta_data_ZN11QCPItemTextE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN11QCPItemTextE[] = {$/;"	v	file:
qt_meta_data_ZN11QCustomPlotE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN11QCustomPlotE[] = {$/;"	v	file:
qt_meta_data_ZN12QCPBarsGroupE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN12QCPBarsGroupE[] = {$/;"	v	file:
qt_meta_data_ZN12QCPErrorBarsE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN12QCPErrorBarsE[] = {$/;"	v	file:
qt_meta_data_ZN12QCPFinancialE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN12QCPFinancialE[] = {$/;"	v	file:
qt_meta_data_ZN12QCPItemCurveE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN12QCPItemCurveE[] = {$/;"	v	file:
qt_meta_data_ZN12QCPLayerableE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN12QCPLayerableE[] = {$/;"	v	file:
qt_meta_data_ZN12QCPPolarGridE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN12QCPPolarGridE[] = {$/;"	v	file:
qt_meta_data_ZN13DynamicModuleE	build/ImageProcProject_autogen/XWFUSFUWCP/moc_device_rotary_interface.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN13DynamicModuleE[] = {$/;"	v	file:
qt_meta_data_ZN13NeuralTrackerE	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_neural.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN13NeuralTrackerE[] = {$/;"	v	file:
qt_meta_data_ZN13QCPAxisTickerE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN13QCPAxisTickerE[] = {$/;"	v	file:
qt_meta_data_ZN13QCPColorScaleE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN13QCPColorScaleE[] = {$/;"	v	file:
qt_meta_data_ZN13QCPItemAnchorE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN13QCPItemAnchorE[] = {$/;"	v	file:
qt_meta_data_ZN13QCPItemPixmapE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN13QCPItemPixmapE[] = {$/;"	v	file:
qt_meta_data_ZN13QCPItemTracerE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN13QCPItemTracerE[] = {$/;"	v	file:
qt_meta_data_ZN13QCPLayoutGridE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN13QCPLayoutGridE[] = {$/;"	v	file:
qt_meta_data_ZN13QCPLineEndingE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN13QCPLineEndingE[] = {$/;"	v	file:
qt_meta_data_ZN13QCPPolarGraphE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN13QCPPolarGraphE[] = {$/;"	v	file:
qt_meta_data_ZN14CANTestMessageE	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN14CANTestMessageE[] = {$/;"	v	file:
qt_meta_data_ZN14QCPItemBracketE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN14QCPItemBracketE[] = {$/;"	v	file:
qt_meta_data_ZN14QCPItemEllipseE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN14QCPItemEllipseE[] = {$/;"	v	file:
qt_meta_data_ZN14QCPLayoutInsetE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN14QCPLayoutInsetE[] = {$/;"	v	file:
qt_meta_data_ZN14QCPMarginGroupE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN14QCPMarginGroupE[] = {$/;"	v	file:
qt_meta_data_ZN14QCPTextElementE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN14QCPTextElementE[] = {$/;"	v	file:
qt_meta_data_ZN15AdjustableLabelE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN15AdjustableLabelE[] = {$/;"	v	file:
qt_meta_data_ZN15CANDelayMeasureE	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN15CANDelayMeasureE[] = {$/;"	v	file:
qt_meta_data_ZN15QCPAbstractItemE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN15QCPAbstractItemE[] = {$/;"	v	file:
qt_meta_data_ZN15QCPAxisTickerPiE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN15QCPAxisTickerPiE[] = {$/;"	v	file:
qt_meta_data_ZN15QCPItemPositionE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN15QCPItemPositionE[] = {$/;"	v	file:
qt_meta_data_ZN15QCPScatterStyleE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN15QCPScatterStyleE[] = {$/;"	v	file:
qt_meta_data_ZN16ManualAimControlE	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN16ManualAimControlE[] = {$/;"	v	file:
qt_meta_data_ZN16QCPColorGradientE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN16QCPColorGradientE[] = {$/;"	v	file:
qt_meta_data_ZN16QCPLayoutElementE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN16QCPLayoutElementE[] = {$/;"	v	file:
qt_meta_data_ZN16QCPSelectionRectE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN16QCPSelectionRectE[] = {$/;"	v	file:
qt_meta_data_ZN16WidgetAdjustableE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN16WidgetAdjustableE[] = {$/;"	v	file:
qt_meta_data_ZN16WidgetMainWindowE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_main_window.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN16WidgetMainWindowE[] = {$/;"	v	file:
qt_meta_data_ZN16WidgetTableGroupE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_table_group.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN16WidgetTableGroupE[] = {$/;"	v	file:
qt_meta_data_ZN17DynamicAimControlE	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN17DynamicAimControlE[] = {$/;"	v	file:
qt_meta_data_ZN17QCPAxisTickerTimeE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN17QCPAxisTickerTimeE[] = {$/;"	v	file:
qt_meta_data_ZN17QCPStatisticalBoxE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN17QCPStatisticalBoxE[] = {$/;"	v	file:
qt_meta_data_ZN17SignalPortAdapterE	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN17SignalPortAdapterE[] = {$/;"	v	file:
qt_meta_data_ZN17WidgetSinusSourceE	build/ImageProcProject_autogen/SERQFGPBY3/moc_widget_sinus_source.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN17WidgetSinusSourceE[] = {$/;"	v	file:
qt_meta_data_ZN18AimingWatcherClassE	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN18AimingWatcherClassE[] = {$/;"	v	file:
qt_meta_data_ZN18CameraInterfaceHIKE	build/ImageProcProject_autogen/IUOK47BH6O/moc_interface_camera_hik.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN18CameraInterfaceHIKE[] = {$/;"	v	file:
qt_meta_data_ZN18QCPAxisTickerFixedE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN18QCPAxisTickerFixedE[] = {$/;"	v	file:
qt_meta_data_ZN18QCPPolarAxisRadialE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN18QCPPolarAxisRadialE[] = {$/;"	v	file:
qt_meta_data_ZN18QCPPolarLegendItemE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN18QCPPolarLegendItemE[] = {$/;"	v	file:
qt_meta_data_ZN18UDPEngineInterfaceE	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_udp_interface.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN18UDPEngineInterfaceE[] = {$/;"	v	file:
qt_meta_data_ZN19AimControlInterfaceE	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN19AimControlInterfaceE[] = {$/;"	v	file:
qt_meta_data_ZN19CANConnectionEngineE	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN19CANConnectionEngineE[] = {$/;"	v	file:
qt_meta_data_ZN19ImageTemplateFinderE	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_finder.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN19ImageTemplateFinderE[] = {$/;"	v	file:
qt_meta_data_ZN19QCPItemStraightLineE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN19QCPItemStraightLineE[] = {$/;"	v	file:
qt_meta_data_ZN19QCPPolarAxisAngularE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN19QCPPolarAxisAngularE[] = {$/;"	v	file:
qt_meta_data_ZN19SinusGeneratorClassE	build/ImageProcProject_autogen/SERQFGPBY3/moc_sinus_generator_class.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN19SinusGeneratorClassE[] = {$/;"	v	file:
qt_meta_data_ZN19TCPConnectionEngineE	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_tcp_interface.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN19TCPConnectionEngineE[] = {$/;"	v	file:
qt_meta_data_ZN19WidgetAimingControlE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_aiming_control.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN19WidgetAimingControlE[] = {$/;"	v	file:
qt_meta_data_ZN19WidgetCameraControlE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_camera_control.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN19WidgetCameraControlE[] = {$/;"	v	file:
qt_meta_data_ZN19WidgetImageImitatorE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_imitator_control.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN19WidgetImageImitatorE[] = {$/;"	v	file:
qt_meta_data_ZN20ImageSourceInterfaceE	build/ImageProcProject_autogen/XJUVE5KTRL/moc_interface_image_source.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN20ImageSourceInterfaceE[] = {$/;"	v	file:
qt_meta_data_ZN20ImageTrackerCentroidE	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN20ImageTrackerCentroidE[] = {$/;"	v	file:
qt_meta_data_ZN20ImageTrackerTemplateE	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_template.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN20ImageTrackerTemplateE[] = {$/;"	v	file:
qt_meta_data_ZN20QCPAbstractPlottableE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN20QCPAbstractPlottableE[] = {$/;"	v	file:
qt_meta_data_ZN20WidgetContainerGroupE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_container_group.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN20WidgetContainerGroupE[] = {$/;"	v	file:
qt_meta_data_ZN21AimImageImitatorClassE	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN21AimImageImitatorClassE[] = {$/;"	v	file:
qt_meta_data_ZN21ModuleImageProcessingE	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_processing_node.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN21ModuleImageProcessingE[] = {$/;"	v	file:
qt_meta_data_ZN21QCPAbstractLegendItemE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN21QCPAbstractLegendItemE[] = {$/;"	v	file:
qt_meta_data_ZN21QCPSelectionDecoratorE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN21QCPSelectionDecoratorE[] = {$/;"	v	file:
qt_meta_data_ZN21WidgetMiniLabelsGroupE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN21WidgetMiniLabelsGroupE[] = {$/;"	v	file:
qt_meta_data_ZN21WidgetProcessingImageE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN21WidgetProcessingImageE[] = {$/;"	v	file:
qt_meta_data_ZN22ProcessControllerClassE	build/ImageProcProject_autogen/EWIEGA46WW/moc_controller_process_class.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN22ProcessControllerClassE[] = {$/;"	v	file:
qt_meta_data_ZN22QCPLabelPainterPrivateE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN22QCPLabelPainterPrivateE[] = {$/;"	v	file:
qt_meta_data_ZN22QCPPlottableLegendItemE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN22QCPPlottableLegendItemE[] = {$/;"	v	file:
qt_meta_data_ZN23ImageTrackerCentroidGPUE	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN23ImageTrackerCentroidGPUE[] = {$/;"	v	file:
qt_meta_data_ZN23WidgetOutputTextDisplayE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_text_display.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN23WidgetOutputTextDisplayE[] = {$/;"	v	file:
qt_meta_data_ZN23WidgetProcessControllerE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_process_controller.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN23WidgetProcessControllerE[] = {$/;"	v	file:
qt_meta_data_ZN24WidgetOutputImageDisplayE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_image_display.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN24WidgetOutputImageDisplayE[] = {$/;"	v	file:
qt_meta_data_ZN24WidgetSceneNodeInterfaceE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_scene_node_interface.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN24WidgetSceneNodeInterfaceE[] = {$/;"	v	file:
qt_meta_data_ZN28QCPColorScaleAxisRectPrivateE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN28QCPColorScaleAxisRectPrivateE[] = {$/;"	v	file:
qt_meta_data_ZN28QCPSelectionDecoratorBracketE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN28QCPSelectionDecoratorBracketE[] = {$/;"	v	file:
qt_meta_data_ZN28WidgetProcessingImageControlE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_control.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN28WidgetProcessingImageControlE[] = {$/;"	v	file:
qt_meta_data_ZN3QCPE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN3QCPE[] = {$/;"	v	file:
qt_meta_data_ZN7QCPAxisE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN7QCPAxisE[] = {$/;"	v	file:
qt_meta_data_ZN7QCPBarsE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN7QCPBarsE[] = {$/;"	v	file:
qt_meta_data_ZN7QCPGridE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN7QCPGridE[] = {$/;"	v	file:
qt_meta_data_ZN8LinkLineE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_link_line.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN8LinkLineE[] = {$/;"	v	file:
qt_meta_data_ZN8QCPCurveE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN8QCPCurveE[] = {$/;"	v	file:
qt_meta_data_ZN8QCPGraphE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN8QCPGraphE[] = {$/;"	v	file:
qt_meta_data_ZN8QCPLayerE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN8QCPLayerE[] = {$/;"	v	file:
qt_meta_data_ZN9QCPLayoutE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN9QCPLayoutE[] = {$/;"	v	file:
qt_meta_data_ZN9QCPLegendE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const uint qt_meta_data_ZN9QCPLegendE[] = {$/;"	v	file:
qt_meta_extradata_ZN11QCPColorMapE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const QMetaObject::SuperData qt_meta_extradata_ZN11QCPColorMapE[] = {$/;"	v	file:
qt_meta_extradata_ZN13QCPColorScaleE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const QMetaObject::SuperData qt_meta_extradata_ZN13QCPColorScaleE[] = {$/;"	v	file:
qt_meta_extradata_ZN20QCPAbstractPlottableE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT static const QMetaObject::SuperData qt_meta_extradata_ZN20QCPAbstractPlottableE[] = {$/;"	v	file:
qt_meta_stringdata_ZN10LabelImageE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_labelimage.cpp	/^static constexpr auto qt_meta_stringdata_ZN10LabelImageE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN10QCPPainterE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN10QCPPainterE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN11QCPAxisRectE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN11QCPAxisRectE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN11QCPColorMapE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN11QCPColorMapE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN11QCPItemLineE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN11QCPItemLineE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN11QCPItemRectE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN11QCPItemRectE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN11QCPItemTextE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN11QCPItemTextE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN11QCustomPlotE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN11QCustomPlotE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN12QCPBarsGroupE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN12QCPBarsGroupE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN12QCPErrorBarsE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN12QCPErrorBarsE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN12QCPFinancialE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN12QCPFinancialE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN12QCPItemCurveE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN12QCPItemCurveE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN12QCPLayerableE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN12QCPLayerableE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN12QCPPolarGridE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN12QCPPolarGridE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN13DynamicModuleE	build/ImageProcProject_autogen/XWFUSFUWCP/moc_device_rotary_interface.cpp	/^static constexpr auto qt_meta_stringdata_ZN13DynamicModuleE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN13NeuralTrackerE	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_neural.cpp	/^static constexpr auto qt_meta_stringdata_ZN13NeuralTrackerE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN13QCPAxisTickerE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN13QCPAxisTickerE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN13QCPColorScaleE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN13QCPColorScaleE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN13QCPItemAnchorE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN13QCPItemAnchorE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN13QCPItemPixmapE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN13QCPItemPixmapE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN13QCPItemTracerE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN13QCPItemTracerE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN13QCPLayoutGridE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN13QCPLayoutGridE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN13QCPLineEndingE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN13QCPLineEndingE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN13QCPPolarGraphE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN13QCPPolarGraphE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN14CANTestMessageE	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^static constexpr auto qt_meta_stringdata_ZN14CANTestMessageE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN14QCPItemBracketE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN14QCPItemBracketE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN14QCPItemEllipseE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN14QCPItemEllipseE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN14QCPLayoutInsetE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN14QCPLayoutInsetE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN14QCPMarginGroupE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN14QCPMarginGroupE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN14QCPTextElementE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN14QCPTextElementE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN15AdjustableLabelE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^static constexpr auto qt_meta_stringdata_ZN15AdjustableLabelE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN15CANDelayMeasureE	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^static constexpr auto qt_meta_stringdata_ZN15CANDelayMeasureE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN15QCPAbstractItemE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN15QCPAbstractItemE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN15QCPAxisTickerPiE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN15QCPAxisTickerPiE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN15QCPItemPositionE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN15QCPItemPositionE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN15QCPScatterStyleE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN15QCPScatterStyleE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN16ManualAimControlE	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^static constexpr auto qt_meta_stringdata_ZN16ManualAimControlE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN16QCPColorGradientE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN16QCPColorGradientE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN16QCPLayoutElementE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN16QCPLayoutElementE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN16QCPSelectionRectE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN16QCPSelectionRectE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN16WidgetAdjustableE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^static constexpr auto qt_meta_stringdata_ZN16WidgetAdjustableE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN16WidgetMainWindowE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_main_window.cpp	/^static constexpr auto qt_meta_stringdata_ZN16WidgetMainWindowE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN16WidgetTableGroupE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_table_group.cpp	/^static constexpr auto qt_meta_stringdata_ZN16WidgetTableGroupE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN17DynamicAimControlE	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^static constexpr auto qt_meta_stringdata_ZN17DynamicAimControlE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN17QCPAxisTickerTimeE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN17QCPAxisTickerTimeE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN17QCPStatisticalBoxE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN17QCPStatisticalBoxE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN17SignalPortAdapterE	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^static constexpr auto qt_meta_stringdata_ZN17SignalPortAdapterE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN17WidgetSinusSourceE	build/ImageProcProject_autogen/SERQFGPBY3/moc_widget_sinus_source.cpp	/^static constexpr auto qt_meta_stringdata_ZN17WidgetSinusSourceE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN18AimingWatcherClassE	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^static constexpr auto qt_meta_stringdata_ZN18AimingWatcherClassE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN18CameraInterfaceHIKE	build/ImageProcProject_autogen/IUOK47BH6O/moc_interface_camera_hik.cpp	/^static constexpr auto qt_meta_stringdata_ZN18CameraInterfaceHIKE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN18QCPAxisTickerFixedE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN18QCPAxisTickerFixedE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN18QCPPolarAxisRadialE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN18QCPPolarAxisRadialE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN18QCPPolarLegendItemE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN18QCPPolarLegendItemE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN18UDPEngineInterfaceE	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_udp_interface.cpp	/^static constexpr auto qt_meta_stringdata_ZN18UDPEngineInterfaceE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN19AimControlInterfaceE	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^static constexpr auto qt_meta_stringdata_ZN19AimControlInterfaceE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN19CANConnectionEngineE	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^static constexpr auto qt_meta_stringdata_ZN19CANConnectionEngineE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN19ImageTemplateFinderE	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_finder.cpp	/^static constexpr auto qt_meta_stringdata_ZN19ImageTemplateFinderE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN19QCPItemStraightLineE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN19QCPItemStraightLineE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN19QCPPolarAxisAngularE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN19QCPPolarAxisAngularE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN19SinusGeneratorClassE	build/ImageProcProject_autogen/SERQFGPBY3/moc_sinus_generator_class.cpp	/^static constexpr auto qt_meta_stringdata_ZN19SinusGeneratorClassE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN19TCPConnectionEngineE	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_tcp_interface.cpp	/^static constexpr auto qt_meta_stringdata_ZN19TCPConnectionEngineE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN19WidgetAimingControlE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_aiming_control.cpp	/^static constexpr auto qt_meta_stringdata_ZN19WidgetAimingControlE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN19WidgetCameraControlE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_camera_control.cpp	/^static constexpr auto qt_meta_stringdata_ZN19WidgetCameraControlE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN19WidgetImageImitatorE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_imitator_control.cpp	/^static constexpr auto qt_meta_stringdata_ZN19WidgetImageImitatorE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN20ImageSourceInterfaceE	build/ImageProcProject_autogen/XJUVE5KTRL/moc_interface_image_source.cpp	/^static constexpr auto qt_meta_stringdata_ZN20ImageSourceInterfaceE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN20ImageTrackerCentroidE	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^static constexpr auto qt_meta_stringdata_ZN20ImageTrackerCentroidE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN20ImageTrackerTemplateE	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_template.cpp	/^static constexpr auto qt_meta_stringdata_ZN20ImageTrackerTemplateE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN20QCPAbstractPlottableE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN20QCPAbstractPlottableE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN20WidgetContainerGroupE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_container_group.cpp	/^static constexpr auto qt_meta_stringdata_ZN20WidgetContainerGroupE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN21AimImageImitatorClassE	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^static constexpr auto qt_meta_stringdata_ZN21AimImageImitatorClassE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN21ModuleImageProcessingE	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_processing_node.cpp	/^static constexpr auto qt_meta_stringdata_ZN21ModuleImageProcessingE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN21QCPAbstractLegendItemE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN21QCPAbstractLegendItemE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN21QCPSelectionDecoratorE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN21QCPSelectionDecoratorE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN21WidgetMiniLabelsGroupE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^static constexpr auto qt_meta_stringdata_ZN21WidgetMiniLabelsGroupE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN21WidgetProcessingImageE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^static constexpr auto qt_meta_stringdata_ZN21WidgetProcessingImageE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN22ProcessControllerClassE	build/ImageProcProject_autogen/EWIEGA46WW/moc_controller_process_class.cpp	/^static constexpr auto qt_meta_stringdata_ZN22ProcessControllerClassE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN22QCPLabelPainterPrivateE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN22QCPLabelPainterPrivateE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN22QCPPlottableLegendItemE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN22QCPPlottableLegendItemE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN23ImageTrackerCentroidGPUE	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^static constexpr auto qt_meta_stringdata_ZN23ImageTrackerCentroidGPUE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN23WidgetOutputTextDisplayE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_text_display.cpp	/^static constexpr auto qt_meta_stringdata_ZN23WidgetOutputTextDisplayE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN23WidgetProcessControllerE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_process_controller.cpp	/^static constexpr auto qt_meta_stringdata_ZN23WidgetProcessControllerE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN24WidgetOutputImageDisplayE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_image_display.cpp	/^static constexpr auto qt_meta_stringdata_ZN24WidgetOutputImageDisplayE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN24WidgetSceneNodeInterfaceE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_scene_node_interface.cpp	/^static constexpr auto qt_meta_stringdata_ZN24WidgetSceneNodeInterfaceE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN28QCPColorScaleAxisRectPrivateE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN28QCPColorScaleAxisRectPrivateE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN28QCPSelectionDecoratorBracketE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN28QCPSelectionDecoratorBracketE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN28WidgetProcessingImageControlE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_control.cpp	/^static constexpr auto qt_meta_stringdata_ZN28WidgetProcessingImageControlE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN3QCPE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN3QCPE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN7QCPAxisE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN7QCPAxisE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN7QCPBarsE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN7QCPBarsE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN7QCPGridE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN7QCPGridE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN8LinkLineE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_link_line.cpp	/^static constexpr auto qt_meta_stringdata_ZN8LinkLineE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN8QCPCurveE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN8QCPCurveE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN8QCPGraphE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN8QCPGraphE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN8QCPLayerE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN8QCPLayerE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN9QCPLayoutE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN9QCPLayoutE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_stringdata_ZN9QCPLegendE	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^static constexpr auto qt_meta_stringdata_ZN9QCPLegendE = QtMocHelpers::stringData($/;"	v	file:
qt_meta_tag_ZN10LabelImageE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_labelimage.cpp	/^struct qt_meta_tag_ZN10LabelImageE_t {};$/;"	s	namespace:__anon19	file:
qt_meta_tag_ZN10QCPPainterE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN10QCPPainterE_t {};$/;"	s	namespace:__anon26	file:
qt_meta_tag_ZN11QCPAxisRectE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN11QCPAxisRectE_t {};$/;"	s	namespace:__anon52	file:
qt_meta_tag_ZN11QCPColorMapE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN11QCPColorMapE_t {};$/;"	s	namespace:__anon64	file:
qt_meta_tag_ZN11QCPItemLineE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN11QCPItemLineE_t {};$/;"	s	namespace:__anon68	file:
qt_meta_tag_ZN11QCPItemRectE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN11QCPItemRectE_t {};$/;"	s	namespace:__anon70	file:
qt_meta_tag_ZN11QCPItemTextE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN11QCPItemTextE_t {};$/;"	s	namespace:__anon71	file:
qt_meta_tag_ZN11QCustomPlotE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN11QCustomPlotE_t {};$/;"	s	namespace:__anon49	file:
qt_meta_tag_ZN12QCPBarsGroupE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN12QCPBarsGroupE_t {};$/;"	s	namespace:__anon61	file:
qt_meta_tag_ZN12QCPErrorBarsE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN12QCPErrorBarsE_t {};$/;"	s	namespace:__anon66	file:
qt_meta_tag_ZN12QCPFinancialE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN12QCPFinancialE_t {};$/;"	s	namespace:__anon65	file:
qt_meta_tag_ZN12QCPItemCurveE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN12QCPItemCurveE_t {};$/;"	s	namespace:__anon69	file:
qt_meta_tag_ZN12QCPLayerableE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN12QCPLayerableE_t {};$/;"	s	namespace:__anon28	file:
qt_meta_tag_ZN12QCPPolarGridE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN12QCPPolarGridE_t {};$/;"	s	namespace:__anon78	file:
qt_meta_tag_ZN13DynamicModuleE_t	build/ImageProcProject_autogen/XWFUSFUWCP/moc_device_rotary_interface.cpp	/^struct qt_meta_tag_ZN13DynamicModuleE_t {};$/;"	s	namespace:__anon18	file:
qt_meta_tag_ZN13NeuralTrackerE_t	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_neural.cpp	/^struct qt_meta_tag_ZN13NeuralTrackerE_t {};$/;"	s	namespace:__anon14	file:
qt_meta_tag_ZN13QCPAxisTickerE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN13QCPAxisTickerE_t {};$/;"	s	namespace:__anon37	file:
qt_meta_tag_ZN13QCPColorScaleE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN13QCPColorScaleE_t {};$/;"	s	namespace:__anon58	file:
qt_meta_tag_ZN13QCPItemAnchorE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN13QCPItemAnchorE_t {};$/;"	s	namespace:__anon46	file:
qt_meta_tag_ZN13QCPItemPixmapE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN13QCPItemPixmapE_t {};$/;"	s	namespace:__anon73	file:
qt_meta_tag_ZN13QCPItemTracerE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN13QCPItemTracerE_t {};$/;"	s	namespace:__anon74	file:
qt_meta_tag_ZN13QCPLayoutGridE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN13QCPLayoutGridE_t {};$/;"	s	namespace:__anon33	file:
qt_meta_tag_ZN13QCPLineEndingE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN13QCPLineEndingE_t {};$/;"	s	namespace:__anon35	file:
qt_meta_tag_ZN13QCPPolarGraphE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN13QCPPolarGraphE_t {};$/;"	s	namespace:__anon80	file:
qt_meta_tag_ZN14CANTestMessageE_t	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^struct qt_meta_tag_ZN14CANTestMessageE_t {};$/;"	s	namespace:__anon8	file:
qt_meta_tag_ZN14QCPItemBracketE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN14QCPItemBracketE_t {};$/;"	s	namespace:__anon75	file:
qt_meta_tag_ZN14QCPItemEllipseE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN14QCPItemEllipseE_t {};$/;"	s	namespace:__anon72	file:
qt_meta_tag_ZN14QCPLayoutInsetE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN14QCPLayoutInsetE_t {};$/;"	s	namespace:__anon34	file:
qt_meta_tag_ZN14QCPMarginGroupE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN14QCPMarginGroupE_t {};$/;"	s	namespace:__anon30	file:
qt_meta_tag_ZN14QCPTextElementE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN14QCPTextElementE_t {};$/;"	s	namespace:__anon56	file:
qt_meta_tag_ZN15AdjustableLabelE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^struct qt_meta_tag_ZN15AdjustableLabelE_t {};$/;"	s	namespace:__anon87	file:
qt_meta_tag_ZN15CANDelayMeasureE_t	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^struct qt_meta_tag_ZN15CANDelayMeasureE_t {};$/;"	s	namespace:__anon9	file:
qt_meta_tag_ZN15QCPAbstractItemE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN15QCPAbstractItemE_t {};$/;"	s	namespace:__anon48	file:
qt_meta_tag_ZN15QCPAxisTickerPiE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN15QCPAxisTickerPiE_t {};$/;"	s	namespace:__anon40	file:
qt_meta_tag_ZN15QCPItemPositionE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN15QCPItemPositionE_t {};$/;"	s	namespace:__anon47	file:
qt_meta_tag_ZN15QCPScatterStyleE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN15QCPScatterStyleE_t {};$/;"	s	namespace:__anon43	file:
qt_meta_tag_ZN16ManualAimControlE_t	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^struct qt_meta_tag_ZN16ManualAimControlE_t {};$/;"	s	namespace:__anon95	file:
qt_meta_tag_ZN16QCPColorGradientE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN16QCPColorGradientE_t {};$/;"	s	namespace:__anon50	file:
qt_meta_tag_ZN16QCPLayoutElementE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN16QCPLayoutElementE_t {};$/;"	s	namespace:__anon31	file:
qt_meta_tag_ZN16QCPSelectionRectE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN16QCPSelectionRectE_t {};$/;"	s	namespace:__anon29	file:
qt_meta_tag_ZN16WidgetAdjustableE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^struct qt_meta_tag_ZN16WidgetAdjustableE_t {};$/;"	s	namespace:__anon86	file:
qt_meta_tag_ZN16WidgetMainWindowE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_main_window.cpp	/^struct qt_meta_tag_ZN16WidgetMainWindowE_t {};$/;"	s	namespace:__anon88	file:
qt_meta_tag_ZN16WidgetTableGroupE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_table_group.cpp	/^struct qt_meta_tag_ZN16WidgetTableGroupE_t {};$/;"	s	namespace:__anon22	file:
qt_meta_tag_ZN17DynamicAimControlE_t	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^struct qt_meta_tag_ZN17DynamicAimControlE_t {};$/;"	s	namespace:__anon96	file:
qt_meta_tag_ZN17QCPAxisTickerTimeE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN17QCPAxisTickerTimeE_t {};$/;"	s	namespace:__anon38	file:
qt_meta_tag_ZN17QCPStatisticalBoxE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN17QCPStatisticalBoxE_t {};$/;"	s	namespace:__anon63	file:
qt_meta_tag_ZN17SignalPortAdapterE_t	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^struct qt_meta_tag_ZN17SignalPortAdapterE_t {};$/;"	s	namespace:__anon16	file:
qt_meta_tag_ZN17WidgetSinusSourceE_t	build/ImageProcProject_autogen/SERQFGPBY3/moc_widget_sinus_source.cpp	/^struct qt_meta_tag_ZN17WidgetSinusSourceE_t {};$/;"	s	namespace:__anon92	file:
qt_meta_tag_ZN18AimingWatcherClassE_t	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^struct qt_meta_tag_ZN18AimingWatcherClassE_t {};$/;"	s	namespace:__anon17	file:
qt_meta_tag_ZN18CameraInterfaceHIKE_t	build/ImageProcProject_autogen/IUOK47BH6O/moc_interface_camera_hik.cpp	/^struct qt_meta_tag_ZN18CameraInterfaceHIKE_t {};$/;"	s	namespace:__anon1	file:
qt_meta_tag_ZN18QCPAxisTickerFixedE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN18QCPAxisTickerFixedE_t {};$/;"	s	namespace:__anon39	file:
qt_meta_tag_ZN18QCPPolarAxisRadialE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN18QCPPolarAxisRadialE_t {};$/;"	s	namespace:__anon76	file:
qt_meta_tag_ZN18QCPPolarLegendItemE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN18QCPPolarLegendItemE_t {};$/;"	s	namespace:__anon79	file:
qt_meta_tag_ZN18UDPEngineInterfaceE_t	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_udp_interface.cpp	/^struct qt_meta_tag_ZN18UDPEngineInterfaceE_t {};$/;"	s	namespace:__anon6	file:
qt_meta_tag_ZN19AimControlInterfaceE_t	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^struct qt_meta_tag_ZN19AimControlInterfaceE_t {};$/;"	s	namespace:__anon94	file:
qt_meta_tag_ZN19CANConnectionEngineE_t	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^struct qt_meta_tag_ZN19CANConnectionEngineE_t {};$/;"	s	namespace:__anon7	file:
qt_meta_tag_ZN19ImageTemplateFinderE_t	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_finder.cpp	/^struct qt_meta_tag_ZN19ImageTemplateFinderE_t {};$/;"	s	namespace:__anon15	file:
qt_meta_tag_ZN19QCPItemStraightLineE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN19QCPItemStraightLineE_t {};$/;"	s	namespace:__anon67	file:
qt_meta_tag_ZN19QCPPolarAxisAngularE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN19QCPPolarAxisAngularE_t {};$/;"	s	namespace:__anon77	file:
qt_meta_tag_ZN19SinusGeneratorClassE_t	build/ImageProcProject_autogen/SERQFGPBY3/moc_sinus_generator_class.cpp	/^struct qt_meta_tag_ZN19SinusGeneratorClassE_t {};$/;"	s	namespace:__anon93	file:
qt_meta_tag_ZN19TCPConnectionEngineE_t	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_tcp_interface.cpp	/^struct qt_meta_tag_ZN19TCPConnectionEngineE_t {};$/;"	s	namespace:__anon5	file:
qt_meta_tag_ZN19WidgetAimingControlE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_aiming_control.cpp	/^struct qt_meta_tag_ZN19WidgetAimingControlE_t {};$/;"	s	namespace:__anon85	file:
qt_meta_tag_ZN19WidgetCameraControlE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_camera_control.cpp	/^struct qt_meta_tag_ZN19WidgetCameraControlE_t {};$/;"	s	namespace:__anon23	file:
qt_meta_tag_ZN19WidgetImageImitatorE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_imitator_control.cpp	/^struct qt_meta_tag_ZN19WidgetImageImitatorE_t {};$/;"	s	namespace:__anon24	file:
qt_meta_tag_ZN20ImageSourceInterfaceE_t	build/ImageProcProject_autogen/XJUVE5KTRL/moc_interface_image_source.cpp	/^struct qt_meta_tag_ZN20ImageSourceInterfaceE_t {};$/;"	s	namespace:__anon3	file:
qt_meta_tag_ZN20ImageTrackerCentroidE_t	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^struct qt_meta_tag_ZN20ImageTrackerCentroidE_t {};$/;"	s	namespace:__anon12	file:
qt_meta_tag_ZN20ImageTrackerTemplateE_t	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_template.cpp	/^struct qt_meta_tag_ZN20ImageTrackerTemplateE_t {};$/;"	s	namespace:__anon10	file:
qt_meta_tag_ZN20QCPAbstractPlottableE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN20QCPAbstractPlottableE_t {};$/;"	s	namespace:__anon45	file:
qt_meta_tag_ZN20WidgetContainerGroupE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_container_group.cpp	/^struct qt_meta_tag_ZN20WidgetContainerGroupE_t {};$/;"	s	namespace:__anon82	file:
qt_meta_tag_ZN21AimImageImitatorClassE_t	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^struct qt_meta_tag_ZN21AimImageImitatorClassE_t {};$/;"	s	namespace:__anon97	file:
qt_meta_tag_ZN21ModuleImageProcessingE_t	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_processing_node.cpp	/^struct qt_meta_tag_ZN21ModuleImageProcessingE_t {};$/;"	s	namespace:__anon11	file:
qt_meta_tag_ZN21QCPAbstractLegendItemE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN21QCPAbstractLegendItemE_t {};$/;"	s	namespace:__anon53	file:
qt_meta_tag_ZN21QCPSelectionDecoratorE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN21QCPSelectionDecoratorE_t {};$/;"	s	namespace:__anon44	file:
qt_meta_tag_ZN21WidgetMiniLabelsGroupE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^struct qt_meta_tag_ZN21WidgetMiniLabelsGroupE_t {};$/;"	s	namespace:__anon20	file:
qt_meta_tag_ZN21WidgetProcessingImageE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^struct qt_meta_tag_ZN21WidgetProcessingImageE_t {};$/;"	s	namespace:__anon21	file:
qt_meta_tag_ZN22ProcessControllerClassE_t	build/ImageProcProject_autogen/EWIEGA46WW/moc_controller_process_class.cpp	/^struct qt_meta_tag_ZN22ProcessControllerClassE_t {};$/;"	s	namespace:__anon2	file:
qt_meta_tag_ZN22QCPLabelPainterPrivateE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN22QCPLabelPainterPrivateE_t {};$/;"	s	namespace:__anon36	file:
qt_meta_tag_ZN22QCPPlottableLegendItemE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN22QCPPlottableLegendItemE_t {};$/;"	s	namespace:__anon54	file:
qt_meta_tag_ZN23ImageTrackerCentroidGPUE_t	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^struct qt_meta_tag_ZN23ImageTrackerCentroidGPUE_t {};$/;"	s	namespace:__anon13	file:
qt_meta_tag_ZN23WidgetOutputTextDisplayE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_text_display.cpp	/^struct qt_meta_tag_ZN23WidgetOutputTextDisplayE_t {};$/;"	s	namespace:__anon91	file:
qt_meta_tag_ZN23WidgetProcessControllerE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_process_controller.cpp	/^struct qt_meta_tag_ZN23WidgetProcessControllerE_t {};$/;"	s	namespace:__anon90	file:
qt_meta_tag_ZN24WidgetOutputImageDisplayE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_image_display.cpp	/^struct qt_meta_tag_ZN24WidgetOutputImageDisplayE_t {};$/;"	s	namespace:__anon84	file:
qt_meta_tag_ZN24WidgetSceneNodeInterfaceE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_scene_node_interface.cpp	/^struct qt_meta_tag_ZN24WidgetSceneNodeInterfaceE_t {};$/;"	s	namespace:__anon89	file:
qt_meta_tag_ZN28QCPColorScaleAxisRectPrivateE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN28QCPColorScaleAxisRectPrivateE_t {};$/;"	s	namespace:__anon57	file:
qt_meta_tag_ZN28QCPSelectionDecoratorBracketE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN28QCPSelectionDecoratorBracketE_t {};$/;"	s	namespace:__anon51	file:
qt_meta_tag_ZN28WidgetProcessingImageControlE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_control.cpp	/^struct qt_meta_tag_ZN28WidgetProcessingImageControlE_t {};$/;"	s	namespace:__anon25	file:
qt_meta_tag_ZN3QCPE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN3QCPE_t {};$/;"	s	namespace:__anon81	file:
qt_meta_tag_ZN7QCPAxisE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN7QCPAxisE_t {};$/;"	s	namespace:__anon42	file:
qt_meta_tag_ZN7QCPBarsE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN7QCPBarsE_t {};$/;"	s	namespace:__anon62	file:
qt_meta_tag_ZN7QCPGridE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN7QCPGridE_t {};$/;"	s	namespace:__anon41	file:
qt_meta_tag_ZN8LinkLineE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_link_line.cpp	/^struct qt_meta_tag_ZN8LinkLineE_t {};$/;"	s	namespace:__anon83	file:
qt_meta_tag_ZN8QCPCurveE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN8QCPCurveE_t {};$/;"	s	namespace:__anon60	file:
qt_meta_tag_ZN8QCPGraphE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN8QCPGraphE_t {};$/;"	s	namespace:__anon59	file:
qt_meta_tag_ZN8QCPLayerE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN8QCPLayerE_t {};$/;"	s	namespace:__anon27	file:
qt_meta_tag_ZN9QCPLayoutE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN9QCPLayoutE_t {};$/;"	s	namespace:__anon32	file:
qt_meta_tag_ZN9QCPLegendE_t	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^struct qt_meta_tag_ZN9QCPLegendE_t {};$/;"	s	namespace:__anon55	file:
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_labelimage.cpp	/^int LabelImage::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LabelImage
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_link_line.cpp	/^int LinkLine::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LinkLine
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPAbstractItem::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPAbstractItem
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPAbstractLegendItem::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPAbstractLegendItem
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPAbstractPlottable::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPAbstractPlottable
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPAxis::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPAxis
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPAxisRect::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPAxisRect
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPBars::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPBars
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPBarsGroup::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPBarsGroup
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPColorMap::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPColorMap
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPColorScale::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPColorScale
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPColorScaleAxisRectPrivate::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPColorScaleAxisRectPrivate
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPCurve::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPCurve
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPErrorBars::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPErrorBars
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPFinancial::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPFinancial
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPGraph::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPGraph
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPGrid::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPGrid
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPItemBracket::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemBracket
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPItemCurve::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemCurve
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPItemEllipse::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemEllipse
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPItemLine::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemLine
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPItemPixmap::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemPixmap
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPItemRect::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemRect
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPItemStraightLine::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemStraightLine
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPItemText::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemText
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPItemTracer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemTracer
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPLayer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLayer
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPLayerable::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLayerable
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPLayout::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLayout
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPLayoutElement::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLayoutElement
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPLayoutGrid::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLayoutGrid
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPLayoutInset::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLayoutInset
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPLegend::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLegend
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPMarginGroup::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPMarginGroup
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPPlottableLegendItem::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPPlottableLegendItem
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPPolarAxisAngular::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPPolarAxisAngular
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPPolarAxisRadial::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPPolarAxisRadial
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPPolarGraph::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPPolarGraph
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPPolarGrid::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPPolarGrid
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPPolarLegendItem::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPPolarLegendItem
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPSelectionRect::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPSelectionRect
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPStatisticalBox::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPStatisticalBox
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCPTextElement::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPTextElement
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^int QCustomPlot::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCustomPlot
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^int AdjustableLabel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AdjustableLabel
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^int WidgetAdjustable::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetAdjustable
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_aiming_control.cpp	/^int WidgetAimingControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetAimingControl
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_camera_control.cpp	/^int WidgetCameraControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetCameraControl
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_container_group.cpp	/^int WidgetContainerGroup::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetContainerGroup
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_imitator_control.cpp	/^int WidgetImageImitator::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetImageImitator
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_main_window.cpp	/^int WidgetMainWindow::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetMainWindow
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_image_display.cpp	/^int WidgetOutputImageDisplay::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetOutputImageDisplay
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_text_display.cpp	/^int WidgetOutputTextDisplay::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetOutputTextDisplay
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_process_controller.cpp	/^int WidgetProcessController::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetProcessController
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_control.cpp	/^int WidgetProcessingImageControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetProcessingImageControl
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^int WidgetMiniLabelsGroup::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetMiniLabelsGroup
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^int WidgetProcessingImage::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetProcessingImage
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_scene_node_interface.cpp	/^int WidgetSceneNodeInterface::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetSceneNodeInterface
qt_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_table_group.cpp	/^int WidgetTableGroup::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetTableGroup
qt_metacall	build/ImageProcProject_autogen/EWIEGA46WW/moc_controller_process_class.cpp	/^int ProcessControllerClass::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ProcessControllerClass
qt_metacall	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_finder.cpp	/^int ImageTemplateFinder::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ImageTemplateFinder
qt_metacall	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_processing_node.cpp	/^int ModuleImageProcessing::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ModuleImageProcessing
qt_metacall	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^int ImageTrackerCentroid::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ImageTrackerCentroid
qt_metacall	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^int ImageTrackerCentroidGPU::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ImageTrackerCentroidGPU
qt_metacall	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_neural.cpp	/^int NeuralTracker::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:NeuralTracker
qt_metacall	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_template.cpp	/^int ImageTrackerTemplate::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ImageTrackerTemplate
qt_metacall	build/ImageProcProject_autogen/IUOK47BH6O/moc_interface_camera_hik.cpp	/^int CameraInterfaceHIK::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CameraInterfaceHIK
qt_metacall	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^int AimControlInterface::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AimControlInterface
qt_metacall	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^int AimImageImitatorClass::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AimImageImitatorClass
qt_metacall	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^int DynamicAimControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DynamicAimControl
qt_metacall	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^int ManualAimControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ManualAimControl
qt_metacall	build/ImageProcProject_autogen/SERQFGPBY3/moc_sinus_generator_class.cpp	/^int SinusGeneratorClass::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SinusGeneratorClass
qt_metacall	build/ImageProcProject_autogen/SERQFGPBY3/moc_widget_sinus_source.cpp	/^int WidgetSinusSource::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetSinusSource
qt_metacall	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^int CANConnectionEngine::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CANConnectionEngine
qt_metacall	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^int CANDelayMeasure::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CANDelayMeasure
qt_metacall	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^int CANTestMessage::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CANTestMessage
qt_metacall	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_tcp_interface.cpp	/^int TCPConnectionEngine::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:TCPConnectionEngine
qt_metacall	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_udp_interface.cpp	/^int UDPEngineInterface::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:UDPEngineInterface
qt_metacall	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^int AimingWatcherClass::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AimingWatcherClass
qt_metacall	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^int SignalPortAdapter::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SignalPortAdapter
qt_metacall	build/ImageProcProject_autogen/XJUVE5KTRL/moc_interface_image_source.cpp	/^int ImageSourceInterface::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ImageSourceInterface
qt_metacall	build/ImageProcProject_autogen/XWFUSFUWCP/moc_device_rotary_interface.cpp	/^int DynamicModule::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DynamicModule
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_labelimage.cpp	/^void *LabelImage::qt_metacast(const char *_clname)$/;"	f	class:LabelImage
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_link_line.cpp	/^void *LinkLine::qt_metacast(const char *_clname)$/;"	f	class:LinkLine
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPAbstractItem::qt_metacast(const char *_clname)$/;"	f	class:QCPAbstractItem
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPAbstractLegendItem::qt_metacast(const char *_clname)$/;"	f	class:QCPAbstractLegendItem
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPAbstractPlottable::qt_metacast(const char *_clname)$/;"	f	class:QCPAbstractPlottable
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPAxis::qt_metacast(const char *_clname)$/;"	f	class:QCPAxis
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPAxisRect::qt_metacast(const char *_clname)$/;"	f	class:QCPAxisRect
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPBars::qt_metacast(const char *_clname)$/;"	f	class:QCPBars
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPBarsGroup::qt_metacast(const char *_clname)$/;"	f	class:QCPBarsGroup
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPColorMap::qt_metacast(const char *_clname)$/;"	f	class:QCPColorMap
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPColorScale::qt_metacast(const char *_clname)$/;"	f	class:QCPColorScale
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPColorScaleAxisRectPrivate::qt_metacast(const char *_clname)$/;"	f	class:QCPColorScaleAxisRectPrivate
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPCurve::qt_metacast(const char *_clname)$/;"	f	class:QCPCurve
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPErrorBars::qt_metacast(const char *_clname)$/;"	f	class:QCPErrorBars
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPFinancial::qt_metacast(const char *_clname)$/;"	f	class:QCPFinancial
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPGraph::qt_metacast(const char *_clname)$/;"	f	class:QCPGraph
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPGrid::qt_metacast(const char *_clname)$/;"	f	class:QCPGrid
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPItemBracket::qt_metacast(const char *_clname)$/;"	f	class:QCPItemBracket
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPItemCurve::qt_metacast(const char *_clname)$/;"	f	class:QCPItemCurve
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPItemEllipse::qt_metacast(const char *_clname)$/;"	f	class:QCPItemEllipse
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPItemLine::qt_metacast(const char *_clname)$/;"	f	class:QCPItemLine
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPItemPixmap::qt_metacast(const char *_clname)$/;"	f	class:QCPItemPixmap
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPItemRect::qt_metacast(const char *_clname)$/;"	f	class:QCPItemRect
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPItemStraightLine::qt_metacast(const char *_clname)$/;"	f	class:QCPItemStraightLine
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPItemText::qt_metacast(const char *_clname)$/;"	f	class:QCPItemText
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPItemTracer::qt_metacast(const char *_clname)$/;"	f	class:QCPItemTracer
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPLayer::qt_metacast(const char *_clname)$/;"	f	class:QCPLayer
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPLayerable::qt_metacast(const char *_clname)$/;"	f	class:QCPLayerable
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPLayout::qt_metacast(const char *_clname)$/;"	f	class:QCPLayout
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPLayoutElement::qt_metacast(const char *_clname)$/;"	f	class:QCPLayoutElement
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPLayoutGrid::qt_metacast(const char *_clname)$/;"	f	class:QCPLayoutGrid
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPLayoutInset::qt_metacast(const char *_clname)$/;"	f	class:QCPLayoutInset
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPLegend::qt_metacast(const char *_clname)$/;"	f	class:QCPLegend
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPMarginGroup::qt_metacast(const char *_clname)$/;"	f	class:QCPMarginGroup
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPPlottableLegendItem::qt_metacast(const char *_clname)$/;"	f	class:QCPPlottableLegendItem
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPPolarAxisAngular::qt_metacast(const char *_clname)$/;"	f	class:QCPPolarAxisAngular
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPPolarAxisRadial::qt_metacast(const char *_clname)$/;"	f	class:QCPPolarAxisRadial
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPPolarGraph::qt_metacast(const char *_clname)$/;"	f	class:QCPPolarGraph
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPPolarGrid::qt_metacast(const char *_clname)$/;"	f	class:QCPPolarGrid
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPPolarLegendItem::qt_metacast(const char *_clname)$/;"	f	class:QCPPolarLegendItem
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPSelectionRect::qt_metacast(const char *_clname)$/;"	f	class:QCPSelectionRect
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPStatisticalBox::qt_metacast(const char *_clname)$/;"	f	class:QCPStatisticalBox
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCPTextElement::qt_metacast(const char *_clname)$/;"	f	class:QCPTextElement
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void *QCustomPlot::qt_metacast(const char *_clname)$/;"	f	class:QCustomPlot
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^void *AdjustableLabel::qt_metacast(const char *_clname)$/;"	f	class:AdjustableLabel
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^void *WidgetAdjustable::qt_metacast(const char *_clname)$/;"	f	class:WidgetAdjustable
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_aiming_control.cpp	/^void *WidgetAimingControl::qt_metacast(const char *_clname)$/;"	f	class:WidgetAimingControl
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_camera_control.cpp	/^void *WidgetCameraControl::qt_metacast(const char *_clname)$/;"	f	class:WidgetCameraControl
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_container_group.cpp	/^void *WidgetContainerGroup::qt_metacast(const char *_clname)$/;"	f	class:WidgetContainerGroup
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_imitator_control.cpp	/^void *WidgetImageImitator::qt_metacast(const char *_clname)$/;"	f	class:WidgetImageImitator
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_main_window.cpp	/^void *WidgetMainWindow::qt_metacast(const char *_clname)$/;"	f	class:WidgetMainWindow
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_image_display.cpp	/^void *WidgetOutputImageDisplay::qt_metacast(const char *_clname)$/;"	f	class:WidgetOutputImageDisplay
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_text_display.cpp	/^void *WidgetOutputTextDisplay::qt_metacast(const char *_clname)$/;"	f	class:WidgetOutputTextDisplay
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_process_controller.cpp	/^void *WidgetProcessController::qt_metacast(const char *_clname)$/;"	f	class:WidgetProcessController
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_control.cpp	/^void *WidgetProcessingImageControl::qt_metacast(const char *_clname)$/;"	f	class:WidgetProcessingImageControl
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^void *WidgetMiniLabelsGroup::qt_metacast(const char *_clname)$/;"	f	class:WidgetMiniLabelsGroup
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^void *WidgetProcessingImage::qt_metacast(const char *_clname)$/;"	f	class:WidgetProcessingImage
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_scene_node_interface.cpp	/^void *WidgetSceneNodeInterface::qt_metacast(const char *_clname)$/;"	f	class:WidgetSceneNodeInterface
qt_metacast	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_table_group.cpp	/^void *WidgetTableGroup::qt_metacast(const char *_clname)$/;"	f	class:WidgetTableGroup
qt_metacast	build/ImageProcProject_autogen/EWIEGA46WW/moc_controller_process_class.cpp	/^void *ProcessControllerClass::qt_metacast(const char *_clname)$/;"	f	class:ProcessControllerClass
qt_metacast	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_finder.cpp	/^void *ImageTemplateFinder::qt_metacast(const char *_clname)$/;"	f	class:ImageTemplateFinder
qt_metacast	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_processing_node.cpp	/^void *ModuleImageProcessing::qt_metacast(const char *_clname)$/;"	f	class:ModuleImageProcessing
qt_metacast	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^void *ImageTrackerCentroid::qt_metacast(const char *_clname)$/;"	f	class:ImageTrackerCentroid
qt_metacast	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^void *ImageTrackerCentroidGPU::qt_metacast(const char *_clname)$/;"	f	class:ImageTrackerCentroidGPU
qt_metacast	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_neural.cpp	/^void *NeuralTracker::qt_metacast(const char *_clname)$/;"	f	class:NeuralTracker
qt_metacast	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_template.cpp	/^void *ImageTrackerTemplate::qt_metacast(const char *_clname)$/;"	f	class:ImageTrackerTemplate
qt_metacast	build/ImageProcProject_autogen/IUOK47BH6O/moc_interface_camera_hik.cpp	/^void *CameraInterfaceHIK::qt_metacast(const char *_clname)$/;"	f	class:CameraInterfaceHIK
qt_metacast	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^void *AimControlInterface::qt_metacast(const char *_clname)$/;"	f	class:AimControlInterface
qt_metacast	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^void *AimImageImitatorClass::qt_metacast(const char *_clname)$/;"	f	class:AimImageImitatorClass
qt_metacast	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^void *DynamicAimControl::qt_metacast(const char *_clname)$/;"	f	class:DynamicAimControl
qt_metacast	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^void *ManualAimControl::qt_metacast(const char *_clname)$/;"	f	class:ManualAimControl
qt_metacast	build/ImageProcProject_autogen/SERQFGPBY3/moc_sinus_generator_class.cpp	/^void *SinusGeneratorClass::qt_metacast(const char *_clname)$/;"	f	class:SinusGeneratorClass
qt_metacast	build/ImageProcProject_autogen/SERQFGPBY3/moc_widget_sinus_source.cpp	/^void *WidgetSinusSource::qt_metacast(const char *_clname)$/;"	f	class:WidgetSinusSource
qt_metacast	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^void *CANConnectionEngine::qt_metacast(const char *_clname)$/;"	f	class:CANConnectionEngine
qt_metacast	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^void *CANDelayMeasure::qt_metacast(const char *_clname)$/;"	f	class:CANDelayMeasure
qt_metacast	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^void *CANTestMessage::qt_metacast(const char *_clname)$/;"	f	class:CANTestMessage
qt_metacast	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_tcp_interface.cpp	/^void *TCPConnectionEngine::qt_metacast(const char *_clname)$/;"	f	class:TCPConnectionEngine
qt_metacast	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_udp_interface.cpp	/^void *UDPEngineInterface::qt_metacast(const char *_clname)$/;"	f	class:UDPEngineInterface
qt_metacast	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^void *AimingWatcherClass::qt_metacast(const char *_clname)$/;"	f	class:AimingWatcherClass
qt_metacast	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^void *SignalPortAdapter::qt_metacast(const char *_clname)$/;"	f	class:SignalPortAdapter
qt_metacast	build/ImageProcProject_autogen/XJUVE5KTRL/moc_interface_image_source.cpp	/^void *ImageSourceInterface::qt_metacast(const char *_clname)$/;"	f	class:ImageSourceInterface
qt_metacast	build/ImageProcProject_autogen/XWFUSFUWCP/moc_device_rotary_interface.cpp	/^void *DynamicModule::qt_metacast(const char *_clname)$/;"	f	class:DynamicModule
qt_resource_data	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	/^static const unsigned char qt_resource_data[] = {$/;"	v	file:
qt_resource_name	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	/^static const unsigned char qt_resource_name[] = {$/;"	v	file:
qt_resource_struct	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	/^static const unsigned char qt_resource_struct[] = {$/;"	v	file:
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_labelimage.cpp	/^void LabelImage::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LabelImage
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_link_line.cpp	/^void LinkLine::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LinkLine
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAbstractItem::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPAbstractItem
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAbstractLegendItem::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPAbstractLegendItem
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAbstractPlottable::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPAbstractPlottable
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAxis::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPAxis
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAxisRect::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPAxisRect
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPBars::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPBars
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPBarsGroup::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPBarsGroup
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPColorMap::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPColorMap
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPColorScale::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPColorScale
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPColorScaleAxisRectPrivate::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPColorScaleAxisRectPrivate
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPCurve::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPCurve
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPErrorBars::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPErrorBars
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPFinancial::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPFinancial
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPGraph::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPGraph
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPGrid::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPGrid
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPItemBracket::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemBracket
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPItemCurve::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemCurve
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPItemEllipse::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemEllipse
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPItemLine::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemLine
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPItemPixmap::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemPixmap
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPItemRect::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemRect
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPItemStraightLine::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemStraightLine
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPItemText::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemText
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPItemTracer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPItemTracer
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPLayer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLayer
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPLayerable::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLayerable
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPLayout::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLayout
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPLayoutElement::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLayoutElement
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPLayoutGrid::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLayoutGrid
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPLayoutInset::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLayoutInset
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPLegend::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPLegend
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPMarginGroup::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPMarginGroup
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPlottableLegendItem::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPPlottableLegendItem
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarAxisAngular::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPPolarAxisAngular
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarAxisRadial::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPPolarAxisRadial
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarGraph::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPPolarGraph
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarGrid::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPPolarGrid
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarLegendItem::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPPolarLegendItem
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPSelectionRect::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPSelectionRect
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPStatisticalBox::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPStatisticalBox
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPTextElement::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCPTextElement
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QCustomPlot
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^void AdjustableLabel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AdjustableLabel
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^void WidgetAdjustable::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetAdjustable
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_aiming_control.cpp	/^void WidgetAimingControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetAimingControl
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_camera_control.cpp	/^void WidgetCameraControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetCameraControl
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_container_group.cpp	/^void WidgetContainerGroup::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetContainerGroup
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_imitator_control.cpp	/^void WidgetImageImitator::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetImageImitator
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_main_window.cpp	/^void WidgetMainWindow::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetMainWindow
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_image_display.cpp	/^void WidgetOutputImageDisplay::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetOutputImageDisplay
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_text_display.cpp	/^void WidgetOutputTextDisplay::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetOutputTextDisplay
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_process_controller.cpp	/^void WidgetProcessController::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetProcessController
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_control.cpp	/^void WidgetProcessingImageControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetProcessingImageControl
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^void WidgetMiniLabelsGroup::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetMiniLabelsGroup
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^void WidgetProcessingImage::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetProcessingImage
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_scene_node_interface.cpp	/^void WidgetSceneNodeInterface::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetSceneNodeInterface
qt_static_metacall	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_table_group.cpp	/^void WidgetTableGroup::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetTableGroup
qt_static_metacall	build/ImageProcProject_autogen/EWIEGA46WW/moc_controller_process_class.cpp	/^void ProcessControllerClass::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ProcessControllerClass
qt_static_metacall	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_finder.cpp	/^void ImageTemplateFinder::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ImageTemplateFinder
qt_static_metacall	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_processing_node.cpp	/^void ModuleImageProcessing::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ModuleImageProcessing
qt_static_metacall	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^void ImageTrackerCentroid::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ImageTrackerCentroid
qt_static_metacall	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^void ImageTrackerCentroidGPU::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ImageTrackerCentroidGPU
qt_static_metacall	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_neural.cpp	/^void NeuralTracker::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:NeuralTracker
qt_static_metacall	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_template.cpp	/^void ImageTrackerTemplate::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ImageTrackerTemplate
qt_static_metacall	build/ImageProcProject_autogen/IUOK47BH6O/moc_interface_camera_hik.cpp	/^void CameraInterfaceHIK::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CameraInterfaceHIK
qt_static_metacall	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^void AimControlInterface::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AimControlInterface
qt_static_metacall	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^void AimImageImitatorClass::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AimImageImitatorClass
qt_static_metacall	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^void DynamicAimControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DynamicAimControl
qt_static_metacall	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^void ManualAimControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ManualAimControl
qt_static_metacall	build/ImageProcProject_autogen/SERQFGPBY3/moc_sinus_generator_class.cpp	/^void SinusGeneratorClass::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SinusGeneratorClass
qt_static_metacall	build/ImageProcProject_autogen/SERQFGPBY3/moc_widget_sinus_source.cpp	/^void WidgetSinusSource::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetSinusSource
qt_static_metacall	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^void CANConnectionEngine::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CANConnectionEngine
qt_static_metacall	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^void CANDelayMeasure::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CANDelayMeasure
qt_static_metacall	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^void CANTestMessage::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CANTestMessage
qt_static_metacall	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_tcp_interface.cpp	/^void TCPConnectionEngine::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:TCPConnectionEngine
qt_static_metacall	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_udp_interface.cpp	/^void UDPEngineInterface::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:UDPEngineInterface
qt_static_metacall	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^void AimingWatcherClass::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AimingWatcherClass
qt_static_metacall	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^void SignalPortAdapter::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SignalPortAdapter
qt_static_metacall	build/ImageProcProject_autogen/XJUVE5KTRL/moc_interface_image_source.cpp	/^void ImageSourceInterface::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ImageSourceInterface
qt_static_metacall	build/ImageProcProject_autogen/XWFUSFUWCP/moc_device_rotary_interface.cpp	/^void DynamicModule::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DynamicModule
radialAxes	gui_sources/qcustomplot.cpp	/^QList<QCPPolarAxisRadial*> QCPPolarAxisAngular::radialAxes() const$/;"	f	class:QCPPolarAxisAngular
radialAxis	gui_sources/qcustomplot.cpp	/^QCPPolarAxisRadial *QCPPolarAxisAngular::radialAxis(int index) const$/;"	f	class:QCPPolarAxisAngular
radialAxis	gui_sources/qcustomplot.h	/^  QCPPolarAxisRadial *radialAxis() const { return mRadialAxis.data(); }$/;"	f	class:QCPPolarGrid
radialAxisCount	gui_sources/qcustomplot.cpp	/^int QCPPolarAxisAngular::radialAxisCount() const$/;"	f	class:QCPPolarAxisAngular
radialPen	gui_sources/qcustomplot.h	/^  QPen radialPen() const { return mRadialPen; }$/;"	f	class:QCPPolarGrid
radialSubGridPen	gui_sources/qcustomplot.h	/^  QPen radialSubGridPen() const { return mRadialSubGridPen; }$/;"	f	class:QCPPolarGrid
radialZeroLinePen	gui_sources/qcustomplot.h	/^  QPen radialZeroLinePen() const { return mRadialZeroLinePen; }$/;"	f	class:QCPPolarGrid
radius	gui_sources/qcustomplot.h	/^  double radius() const { return mRadius; }$/;"	f	class:QCPPolarAxisAngular
radiusToCoord	gui_sources/qcustomplot.cpp	/^double QCPPolarAxisRadial::radiusToCoord(double radius) const$/;"	f	class:QCPPolarAxisRadial
range	gui_sources/qcustomplot.cpp	/^QCPRange QCPSelectionRect::range(const QCPAxis *axis) const$/;"	f	class:QCPSelectionRect
range	gui_sources/qcustomplot.h	/^  const QCPRange range() const { return mRange; }$/;"	f	class:QCPAxis
range	gui_sources/qcustomplot.h	/^  const QCPRange range() const { return mRange; }$/;"	f	class:QCPPolarAxisAngular
range	gui_sources/qcustomplot.h	/^  const QCPRange range() const { return mRange; }$/;"	f	class:QCPPolarAxisRadial
rangeChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAxis::rangeChanged(const QCPRange & _t1)$/;"	f	class:QCPAxis
rangeChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAxis::rangeChanged(const QCPRange & _t1, const QCPRange & _t2)$/;"	f	class:QCPAxis
rangeChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarAxisAngular::rangeChanged(const QCPRange & _t1)$/;"	f	class:QCPPolarAxisAngular
rangeChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarAxisAngular::rangeChanged(const QCPRange & _t1, const QCPRange & _t2)$/;"	f	class:QCPPolarAxisAngular
rangeChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarAxisRadial::rangeChanged(const QCPRange & _t1)$/;"	f	class:QCPPolarAxisRadial
rangeChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarAxisRadial::rangeChanged(const QCPRange & _t1, const QCPRange & _t2)$/;"	f	class:QCPPolarAxisRadial
rangeDrag	gui_sources/qcustomplot.cpp	/^bool QCPColorScale::rangeDrag() const$/;"	f	class:QCPColorScale
rangeDrag	gui_sources/qcustomplot.h	/^  Qt::Orientations rangeDrag() const { return mRangeDrag; }$/;"	f	class:QCPAxisRect
rangeDrag	gui_sources/qcustomplot.h	/^  bool rangeDrag() const { return mRangeDrag; }$/;"	f	class:QCPPolarAxisAngular
rangeDrag	gui_sources/qcustomplot.h	/^  bool rangeDrag() const { return mRangeDrag; }$/;"	f	class:QCPPolarAxisRadial
rangeDragAxes	gui_sources/qcustomplot.cpp	/^QList<QCPAxis*> QCPAxisRect::rangeDragAxes(Qt::Orientation orientation)$/;"	f	class:QCPAxisRect
rangeDragAxis	gui_sources/qcustomplot.cpp	/^QCPAxis *QCPAxisRect::rangeDragAxis(Qt::Orientation orientation)$/;"	f	class:QCPAxisRect
rangeReversed	gui_sources/qcustomplot.h	/^  bool rangeReversed() const { return mRangeReversed; }$/;"	f	class:QCPAxis
rangeReversed	gui_sources/qcustomplot.h	/^  bool rangeReversed() const { return mRangeReversed; }$/;"	f	class:QCPPolarAxisAngular
rangeReversed	gui_sources/qcustomplot.h	/^  bool rangeReversed() const { return mRangeReversed; }$/;"	f	class:QCPPolarAxisRadial
rangeZoom	gui_sources/qcustomplot.cpp	/^bool QCPColorScale::rangeZoom() const$/;"	f	class:QCPColorScale
rangeZoom	gui_sources/qcustomplot.h	/^  Qt::Orientations rangeZoom() const { return mRangeZoom; }$/;"	f	class:QCPAxisRect
rangeZoom	gui_sources/qcustomplot.h	/^  bool rangeZoom() const { return mRangeZoom; }$/;"	f	class:QCPPolarAxisAngular
rangeZoom	gui_sources/qcustomplot.h	/^  bool rangeZoom() const { return mRangeZoom; }$/;"	f	class:QCPPolarAxisRadial
rangeZoomAxes	gui_sources/qcustomplot.cpp	/^QList<QCPAxis*> QCPAxisRect::rangeZoomAxes(Qt::Orientation orientation)$/;"	f	class:QCPAxisRect
rangeZoomAxis	gui_sources/qcustomplot.cpp	/^QCPAxis *QCPAxisRect::rangeZoomAxis(Qt::Orientation orientation)$/;"	f	class:QCPAxisRect
rangeZoomFactor	gui_sources/qcustomplot.cpp	/^double QCPAxisRect::rangeZoomFactor(Qt::Orientation orientation)$/;"	f	class:QCPAxisRect
rangeZoomFactor	gui_sources/qcustomplot.h	/^  double rangeZoomFactor() const { return mRangeZoomFactor; }$/;"	f	class:QCPPolarAxisAngular
rangeZoomFactor	gui_sources/qcustomplot.h	/^  double rangeZoomFactor() const { return mRangeZoomFactor; }$/;"	f	class:QCPPolarAxisRadial
realLength	gui_sources/qcustomplot.cpp	/^double QCPLineEnding::realLength() const$/;"	f	class:QCPLineEnding
realVisibility	gui_sources/qcustomplot.cpp	/^bool QCPLayerable::realVisibility() const$/;"	f	class:QCPLayerable
reallocateBuffer	gui_sources/qcustomplot.cpp	/^void QCPPaintBufferGlFbo::reallocateBuffer()$/;"	f	class:QCPPaintBufferGlFbo
reallocateBuffer	gui_sources/qcustomplot.cpp	/^void QCPPaintBufferGlPbuffer::reallocateBuffer()$/;"	f	class:QCPPaintBufferGlPbuffer
reallocateBuffer	gui_sources/qcustomplot.cpp	/^void QCPPaintBufferPixmap::reallocateBuffer()$/;"	f	class:QCPPaintBufferPixmap
recalculateDataBounds	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::recalculateDataBounds()$/;"	f	class:QCPColorMapData
rect	gui_sources/qcustomplot.h	/^  QRect rect() const { return mRect; }$/;"	f	class:QCPLayoutElement
rect	gui_sources/qcustomplot.h	/^  QRect rect() const { return mRect; }$/;"	f	class:QCPSelectionRect
rectDistance	gui_sources/qcustomplot.cpp	/^double QCPAbstractItem::rectDistance(const QRectF &rect, const QPointF &pos, bool filledRect) const$/;"	f	class:QCPAbstractItem
rectIntersectsLine	gui_sources/qcustomplot.cpp	/^bool QCPErrorBars::rectIntersectsLine(const QRectF &pixelRect, const QLineF &line) const$/;"	f	class:QCPErrorBars
registerBars	gui_sources/qcustomplot.cpp	/^void QCPBarsGroup::registerBars(QCPBars *bars)$/;"	f	class:QCPBarsGroup
registerGraph	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::registerGraph(QCPGraph *graph)$/;"	f	class:QCustomPlot
registerItem	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::registerItem(QCPAbstractItem *item)$/;"	f	class:QCustomPlot
registerPlottable	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::registerPlottable(QCPAbstractPlottable *plottable)$/;"	f	class:QCustomPlot
registerPolarGraph	gui_sources/qcustomplot.cpp	/^bool QCPPolarAxisAngular::registerPolarGraph(QCPPolarGraph *graph)$/;"	f	class:QCPPolarAxisAngular
registerWithPlottable	gui_sources/qcustomplot.cpp	/^bool QCPSelectionDecorator::registerWithPlottable(QCPAbstractPlottable *plottable)$/;"	f	class:QCPSelectionDecorator
releaseElement	gui_sources/qcustomplot.cpp	/^void QCPLayout::releaseElement(QCPLayoutElement *el)$/;"	f	class:QCPLayout
remove	gui_sources/qcustomplot.cpp	/^bool QCPLayout::remove(QCPLayoutElement *element)$/;"	f	class:QCPLayout
remove	gui_sources/qcustomplot.cpp	/^void QCPBarsGroup::remove(QCPBars *bars)$/;"	f	class:QCPBarsGroup
remove	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::remove(double sortKey)$/;"	f	class:QCPDataContainer
remove	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::remove(double sortKeyFrom, double sortKeyTo)$/;"	f	class:QCPDataContainer
removeAfter	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::removeAfter(double sortKey)$/;"	f	class:QCPDataContainer
removeAt	gui_sources/qcustomplot.cpp	/^bool QCPLayout::removeAt(int index)$/;"	f	class:QCPLayout
removeAxis	gui_sources/qcustomplot.cpp	/^bool QCPAxisRect::removeAxis(QCPAxis *axis)$/;"	f	class:QCPAxisRect
removeBefore	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::removeBefore(double sortKey)$/;"	f	class:QCPDataContainer
removeChild	gui_sources/qcustomplot.cpp	/^void QCPLayer::removeChild(QCPLayerable *layerable)$/;"	f	class:QCPLayer
removeChild	gui_sources/qcustomplot.cpp	/^void QCPMarginGroup::removeChild(QCP::MarginSide side, QCPLayoutElement *element)$/;"	f	class:QCPMarginGroup
removeChildX	gui_sources/qcustomplot.cpp	/^void QCPItemAnchor::removeChildX(QCPItemPosition *pos)$/;"	f	class:QCPItemAnchor
removeChildY	gui_sources/qcustomplot.cpp	/^void QCPItemAnchor::removeChildY(QCPItemPosition *pos)$/;"	f	class:QCPItemAnchor
removeFromLegend	gui_sources/qcustomplot.cpp	/^bool QCPAbstractPlottable::removeFromLegend() const$/;"	f	class:QCPAbstractPlottable
removeFromLegend	gui_sources/qcustomplot.cpp	/^bool QCPAbstractPlottable::removeFromLegend(QCPLegend *legend) const$/;"	f	class:QCPAbstractPlottable
removeFromLegend	gui_sources/qcustomplot.cpp	/^bool QCPPolarGraph::removeFromLegend() const$/;"	f	class:QCPPolarGraph
removeFromLegend	gui_sources/qcustomplot.cpp	/^bool QCPPolarGraph::removeFromLegend(QCPLegend *legend) const$/;"	f	class:QCPPolarGraph
removeGraph	gui_sources/qcustomplot.cpp	/^bool QCPPolarAxisAngular::removeGraph(QCPPolarGraph *graph)$/;"	f	class:QCPPolarAxisAngular
removeGraph	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::removeGraph(QCPGraph *graph)$/;"	f	class:QCustomPlot
removeGraph	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::removeGraph(int index)$/;"	f	class:QCustomPlot
removeItem	gui_sources/qcustomplot.cpp	/^bool QCPLegend::removeItem(QCPAbstractLegendItem *item)$/;"	f	class:QCPLegend
removeItem	gui_sources/qcustomplot.cpp	/^bool QCPLegend::removeItem(int index)$/;"	f	class:QCPLegend
removeItem	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::removeItem(QCPAbstractItem *item)$/;"	f	class:QCustomPlot
removeItem	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::removeItem(int index)$/;"	f	class:QCustomPlot
removeLayer	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::removeLayer(QCPLayer *layer)$/;"	f	class:QCustomPlot
removePlottable	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::removePlottable(QCPAbstractPlottable *plottable)$/;"	f	class:QCustomPlot
removePlottable	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::removePlottable(int index)$/;"	f	class:QCustomPlot
removeRadialAxis	gui_sources/qcustomplot.cpp	/^bool QCPPolarAxisAngular::removeRadialAxis(QCPPolarAxisRadial *radialAxis)$/;"	f	class:QCPPolarAxisAngular
replaceUnit	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerTime::replaceUnit(QString &text, QCPAxisTickerTime::TimeUnit unit, int value) const$/;"	f	class:QCPAxisTickerTime
replot	gui_sources/qcustomplot.cpp	/^void QCPLayer::replot()$/;"	f	class:QCPLayer
replot	gui_sources/qcustomplot.cpp	/^void QCustomPlot::replot(QCustomPlot::RefreshPriority refreshPriority)$/;"	f	class:QCustomPlot
replotTime	gui_sources/qcustomplot.cpp	/^double QCustomPlot::replotTime(bool average) const$/;"	f	class:QCustomPlot
rescale	gui_sources/qcustomplot.cpp	/^void QCPAxis::rescale(bool onlyVisiblePlottables)$/;"	f	class:QCPAxis
rescale	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::rescale(bool onlyVisiblePlottables)$/;"	f	class:QCPPolarAxisAngular
rescale	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::rescale(bool onlyVisiblePlottables)$/;"	f	class:QCPPolarAxisRadial
rescaleAxes	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::rescaleAxes(bool onlyEnlarge) const$/;"	f	class:QCPAbstractPlottable
rescaleAxes	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::rescaleAxes(bool onlyEnlarge) const$/;"	f	class:QCPPolarGraph
rescaleAxes	gui_sources/qcustomplot.cpp	/^void QCustomPlot::rescaleAxes(bool onlyVisiblePlottables)$/;"	f	class:QCustomPlot
rescaleDataRange	gui_sources/qcustomplot.cpp	/^void QCPColorMap::rescaleDataRange(bool recalculateDataBounds)$/;"	f	class:QCPColorMap
rescaleDataRange	gui_sources/qcustomplot.cpp	/^void QCPColorScale::rescaleDataRange(bool onlyVisibleMaps)$/;"	f	class:QCPColorScale
rescaleKeyAxis	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::rescaleKeyAxis(bool onlyEnlarge) const$/;"	f	class:QCPAbstractPlottable
rescaleKeyAxis	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::rescaleKeyAxis(bool onlyEnlarge) const$/;"	f	class:QCPPolarGraph
rescaleValueAxis	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::rescaleValueAxis(bool onlyEnlarge, bool inKeyRange) const$/;"	f	class:QCPAbstractPlottable
rescaleValueAxis	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::rescaleValueAxis(bool onlyEnlarge, bool inKeyRange) const$/;"	f	class:QCPPolarGraph
reset	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void AccumulateDataFilter::reset()$/;"	f	class:AccumulateDataFilter
reset	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void TestDataVectorsContainer::reset() $/;"	f	class:TestDataVectorsContainer
reset	UTILITES/thread_operation_nodes.h	/^    void reset() { counter = 0; }$/;"	f	class:ThinningFilter
resize	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW bool resize;                  \/\/!<  activate the resize feature to improve the processing speed$/;"	m	struct:cv::tracking::TrackerKCF::Params
resizeEvent	gui_sources/qcustomplot.cpp	/^void QCustomPlot::resizeEvent(QResizeEvent *event)$/;"	f	class:QCustomPlot
restore	gui_sources/qcustomplot.cpp	/^void QCPPainter::restore()$/;"	f	class:QCPPainter
retranslateUi	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    void retranslateUi(QWidget *WidgetAimingControl)$/;"	f	class:Ui_WidgetAimingControl
retranslateUi	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    void retranslateUi(QWidget *WidgetCameraControl)$/;"	f	class:Ui_WidgetCameraControl
retranslateUi	build/ImageProcProject_autogen/include/ui_widget_container_group.h	/^    void retranslateUi(QWidget *WidgetContainerGroup)$/;"	f	class:Ui_WidgetContainerGroup
retranslateUi	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    void retranslateUi(QWidget *WidgetImageImitator)$/;"	f	class:Ui_WidgetImageImitator
retranslateUi	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    void retranslateUi(QMainWindow *WidgetMainWindow)$/;"	f	class:Ui_WidgetMainWindow
retranslateUi	build/ImageProcProject_autogen/include/ui_widget_output_image_display.h	/^    void retranslateUi(QWidget *WidgetOutputImageDisplay)$/;"	f	class:Ui_WidgetOutputImageDisplay
retranslateUi	build/ImageProcProject_autogen/include/ui_widget_output_text_display.h	/^    void retranslateUi(QWidget *OutputTextDisplay)$/;"	f	class:Ui_OutputTextDisplay
retranslateUi	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	/^    void retranslateUi(QWidget *WidgetProcessController)$/;"	f	class:Ui_WidgetProcessController
retranslateUi	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^    void retranslateUi(QWidget *WidgetProcessingImageControl)$/;"	f	class:Ui_WidgetProcessingImageControl
retranslateUi	build/ImageProcProject_autogen/include/ui_widget_processing_image_generic.h	/^    void retranslateUi(QWidget *WidgetProcessingImage)$/;"	f	class:Ui_WidgetProcessingImage
retranslateUi	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    void retranslateUi(QWidget *WidgetSinusSource)$/;"	f	class:Ui_WidgetSinusSource
retranslateUi	build/ImageProcProject_autogen/include/ui_widget_table_group.h	/^    void retranslateUi(QWidget *WidgetTableGroup)$/;"	f	class:Ui_WidgetTableGroup
reversedEndings	gui_sources/qcustomplot.h	/^  bool reversedEndings;$/;"	m	class:QCPAxisPainterPrivate
right	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const right;$/;"	m	class:QCPItemEllipse
right	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const right;$/;"	m	class:QCPItemPixmap
right	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const right;$/;"	m	class:QCPItemRect
right	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const right;$/;"	m	class:QCPItemText
right	gui_sources/qcustomplot.h	/^  QCPItemPosition * const right;$/;"	m	class:QCPItemBracket
right	gui_sources/qcustomplot.h	/^  int right() const { return mRect.right(); }$/;"	f	class:QCPAxisRect
right	gui_sources/qcustomplot.h	/^  int right() const { return mRect.right(); }$/;"	f	class:QCPPolarAxisAngular
rotate_matrix	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	float rotate_matrix[9] = {0};$/;"	m	class:RotateOperationContainer
rotatedTotalBounds	gui_sources/qcustomplot.h	/^    QRect baseBounds, expBounds, suffixBounds, totalBounds, rotatedTotalBounds;$/;"	m	struct:QCPAxisPainterPrivate::TickLabelData
rotatedTotalBounds	gui_sources/qcustomplot.h	/^    QRect rotatedTotalBounds; \/\/ is in a coordinate system where the label anchor is at (0, 0)$/;"	m	struct:QCPLabelPainterPrivate::LabelData
rotation	gui_sources/qcustomplot.h	/^    double rotation; \/\/ angle in degrees$/;"	m	struct:QCPLabelPainterPrivate::LabelData
rotation	gui_sources/qcustomplot.h	/^  double rotation() const { return mRotation; }$/;"	f	class:QCPItemText
rotation	gui_sources/qcustomplot.h	/^  double rotation() const { return mRotation; }$/;"	f	class:QCPLabelPainterPrivate
rotationCorrectedSide	gui_sources/qcustomplot.cpp	/^QCPLabelPainterPrivate::AnchorSide QCPLabelPainterPrivate::rotationCorrectedSide(AnchorSide side, double rotation) const$/;"	f	class:QCPLabelPainterPrivate
rowColToIndex	gui_sources/qcustomplot.cpp	/^int QCPLayoutGrid::rowColToIndex(int row, int column) const$/;"	f	class:QCPLayoutGrid
rowCount	gui_sources/qcustomplot.h	/^  int rowCount() const { return mElements.size(); }$/;"	f	class:QCPLayoutGrid
rowSpacing	gui_sources/qcustomplot.h	/^  int rowSpacing() const { return mRowSpacing; }$/;"	f	class:QCPLayoutGrid
rowStretchFactors	gui_sources/qcustomplot.h	/^  QList<double> rowStretchFactors() const { return mRowStretchFactors; }$/;"	f	class:QCPLayoutGrid
rpImmediateRefresh	gui_sources/qcustomplot.h	/^  enum RefreshPriority { rpImmediateRefresh \/\/\/< Replots immediately and repaints the widget immediately by calling QWidget::repaint() after the replot$/;"	e	enum:QCustomPlot::RefreshPriority
rpQueuedRefresh	gui_sources/qcustomplot.h	/^                         ,rpQueuedRefresh   \/\/\/< Replots immediately, but queues the widget repaint, by calling QWidget::update() after the replot. This way multiple redundant widget repaints can be avoided.$/;"	e	enum:QCustomPlot::RefreshPriority
rpQueuedReplot	gui_sources/qcustomplot.h	/^                         ,rpQueuedReplot    \/\/\/< Queues the entire replot for the next event loop iteration. This way multiple redundant replots can be avoided. The actual replot is then done with \\ref rpRefreshHint priority.$/;"	e	enum:QCustomPlot::RefreshPriority
rpRefreshHint	gui_sources/qcustomplot.h	/^                         ,rpRefreshHint     \/\/\/< Whether to use immediate or queued refresh depends on whether the plotting hint \\ref QCP::phImmediateRefresh is set, see \\ref setPlottingHints.$/;"	e	enum:QCustomPlot::RefreshPriority
ruDotsPerCentimeter	gui_sources/qcustomplot.h	/^                      ,ruDotsPerCentimeter \/\/\/< Resolution is given in dots per centimeter (dpcm)$/;"	e	enum:QCP::ResolutionUnit
ruDotsPerInch	gui_sources/qcustomplot.h	/^                      ,ruDotsPerInch       \/\/\/< Resolution is given in dots per inch (DPI\/PPI)$/;"	e	enum:QCP::ResolutionUnit
ruDotsPerMeter	gui_sources/qcustomplot.h	/^enum ResolutionUnit { ruDotsPerMeter       \/\/\/< Resolution is given in dots per meter (dpm)$/;"	e	enum:QCP::ResolutionUnit
rx	gui_sources/qcustomplot.h	/^  double &rx() { return mX; }$/;"	f	class:QCPVector2D
ry	gui_sources/qcustomplot.h	/^  double &ry() { return mY; }$/;"	f	class:QCPVector2D
sanitizedForLinScale	gui_sources/qcustomplot.cpp	/^QCPRange QCPRange::sanitizedForLinScale() const$/;"	f	class:QCPRange
sanitizedForLogScale	gui_sources/qcustomplot.cpp	/^QCPRange QCPRange::sanitizedForLogScale() const$/;"	f	class:QCPRange
save	gui_sources/qcustomplot.cpp	/^void QCPPainter::save()$/;"	f	class:QCPPainter
saveBmp	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::saveBmp(const QString &fileName, int width, int height, double scale, int resolution, QCP::ResolutionUnit resolutionUnit)$/;"	f	class:QCustomPlot
saveJpg	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::saveJpg(const QString &fileName, int width, int height, double scale, int quality, int resolution, QCP::ResolutionUnit resolutionUnit)$/;"	f	class:QCustomPlot
savePdf	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::savePdf(const QString &fileName, int width, int height, QCP::ExportPen exportPen, const QString &pdfCreator, const QString &pdfTitle)$/;"	f	class:QCustomPlot
savePng	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::savePng(const QString &fileName, int width, int height, double scale, int quality, int resolution, QCP::ResolutionUnit resolutionUnit)$/;"	f	class:QCustomPlot
saveRastered	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::saveRastered(const QString &fileName, int width, int height, double scale, const char *format, int quality, int resolution, QCP::ResolutionUnit resolutionUnit)$/;"	f	class:QCustomPlot
scaleRange	gui_sources/qcustomplot.cpp	/^void QCPAxis::scaleRange(double factor)$/;"	f	class:QCPAxis
scaleRange	gui_sources/qcustomplot.cpp	/^void QCPAxis::scaleRange(double factor, double center)$/;"	f	class:QCPAxis
scaleRange	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::scaleRange(double factor)$/;"	f	class:QCPPolarAxisAngular
scaleRange	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::scaleRange(double factor, double center)$/;"	f	class:QCPPolarAxisAngular
scaleRange	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::scaleRange(double factor)$/;"	f	class:QCPPolarAxisRadial
scaleRange	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::scaleRange(double factor, double center)$/;"	f	class:QCPPolarAxisRadial
scaleStrategy	gui_sources/qcustomplot.h	/^  ScaleStrategy scaleStrategy() const { return mScaleStrategy; }$/;"	f	class:QCPAxisTickerFixed
scaleType	gui_sources/qcustomplot.h	/^  ScaleType scaleType() const { return mScaleType; }$/;"	f	class:QCPAxis
scaleType	gui_sources/qcustomplot.h	/^  ScaleType scaleType() const { return mScaleType; }$/;"	f	class:QCPPolarAxisRadial
scaleTypeChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAxis::scaleTypeChanged(QCPAxis::ScaleType _t1)$/;"	f	class:QCPAxis
scaleTypeChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarAxisRadial::scaleTypeChanged(QCPPolarAxisRadial::ScaleType _t1)$/;"	f	class:QCPPolarAxisRadial
scale_lr	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float scale_lr;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
scale_model_max_area	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float scale_model_max_area;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
scale_sigma_factor	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float scale_sigma_factor;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
scale_step	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float scale_step;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
scaled	gui_sources/qcustomplot.h	/^  bool scaled() const { return mScaled; }$/;"	f	class:QCPItemPixmap
scatterSkip	gui_sources/qcustomplot.h	/^  int scatterSkip() const { return mScatterSkip; }$/;"	f	class:QCPCurve
scatterSkip	gui_sources/qcustomplot.h	/^  int scatterSkip() const { return mScatterSkip; }$/;"	f	class:QCPGraph
scatterStyle	gui_sources/qcustomplot.h	/^  QCPScatterStyle scatterStyle() const { return mScatterStyle; }$/;"	f	class:QCPCurve
scatterStyle	gui_sources/qcustomplot.h	/^  QCPScatterStyle scatterStyle() const { return mScatterStyle; }$/;"	f	class:QCPGraph
scatterStyle	gui_sources/qcustomplot.h	/^  QCPScatterStyle scatterStyle() const { return mScatterStyle; }$/;"	f	class:QCPPolarGraph
scatterStyle	gui_sources/qcustomplot.h	/^  QCPScatterStyle scatterStyle() const { return mScatterStyle; }$/;"	f	class:QCPSelectionDecorator
scrInnerRect	gui_sources/qcustomplot.h	/^  enum SizeConstraintRect { scrInnerRect \/\/\/< Minimum\/Maximum size constraints apply to inner rect$/;"	e	enum:QCPLayoutElement::SizeConstraintRect
scrOuterRect	gui_sources/qcustomplot.h	/^                            , scrOuterRect \/\/\/< Minimum\/Maximum size constraints apply to outer rect, thus include layout element margins$/;"	e	enum:QCPLayoutElement::SizeConstraintRect
sdBoth	gui_sources/qcustomplot.h	/^                  ,sdBoth     \/\/\/< Both sign domains, including zero, i.e. all numbers$/;"	e	enum:QCP::SignDomain
sdNegative	gui_sources/qcustomplot.h	/^enum SignDomain { sdNegative  \/\/\/< The negative sign domain, i.e. numbers smaller than zero$/;"	e	enum:QCP::SignDomain
sdPositive	gui_sources/qcustomplot.h	/^                  ,sdPositive \/\/\/< The positive sign domain, i.e. numbers greater than zero$/;"	e	enum:QCP::SignDomain
segmentsIntersect	gui_sources/qcustomplot.cpp	/^bool QCPGraph::segmentsIntersect(double aLower, double aUpper, double bLower, double bUpper, int &bPrecedence) const$/;"	f	class:QCPGraph
selectEvent	gui_sources/qcustomplot.cpp	/^void QCPAbstractItem::selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)$/;"	f	class:QCPAbstractItem
selectEvent	gui_sources/qcustomplot.cpp	/^void QCPAbstractLegendItem::selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)$/;"	f	class:QCPAbstractLegendItem
selectEvent	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)$/;"	f	class:QCPAbstractPlottable
selectEvent	gui_sources/qcustomplot.cpp	/^void QCPAxis::selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)$/;"	f	class:QCPAxis
selectEvent	gui_sources/qcustomplot.cpp	/^void QCPLayerable::selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)$/;"	f	class:QCPLayerable
selectEvent	gui_sources/qcustomplot.cpp	/^void QCPLegend::selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)$/;"	f	class:QCPLegend
selectEvent	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)$/;"	f	class:QCPPolarAxisRadial
selectEvent	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)$/;"	f	class:QCPPolarGraph
selectEvent	gui_sources/qcustomplot.cpp	/^void QCPTextElement::selectEvent(QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)$/;"	f	class:QCPTextElement
selectTest	gui_sources/qcustomplot.cpp	/^double QCPAbstractLegendItem::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPAbstractLegendItem
selectTest	gui_sources/qcustomplot.cpp	/^double QCPAxis::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPAxis
selectTest	gui_sources/qcustomplot.cpp	/^double QCPBars::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPBars
selectTest	gui_sources/qcustomplot.cpp	/^double QCPColorMap::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPColorMap
selectTest	gui_sources/qcustomplot.cpp	/^double QCPCurve::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPCurve
selectTest	gui_sources/qcustomplot.cpp	/^double QCPErrorBars::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPErrorBars
selectTest	gui_sources/qcustomplot.cpp	/^double QCPFinancial::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPFinancial
selectTest	gui_sources/qcustomplot.cpp	/^double QCPGraph::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPGraph
selectTest	gui_sources/qcustomplot.cpp	/^double QCPItemBracket::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPItemBracket
selectTest	gui_sources/qcustomplot.cpp	/^double QCPItemCurve::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPItemCurve
selectTest	gui_sources/qcustomplot.cpp	/^double QCPItemEllipse::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPItemEllipse
selectTest	gui_sources/qcustomplot.cpp	/^double QCPItemLine::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPItemLine
selectTest	gui_sources/qcustomplot.cpp	/^double QCPItemPixmap::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPItemPixmap
selectTest	gui_sources/qcustomplot.cpp	/^double QCPItemRect::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPItemRect
selectTest	gui_sources/qcustomplot.cpp	/^double QCPItemStraightLine::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPItemStraightLine
selectTest	gui_sources/qcustomplot.cpp	/^double QCPItemText::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPItemText
selectTest	gui_sources/qcustomplot.cpp	/^double QCPItemTracer::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPItemTracer
selectTest	gui_sources/qcustomplot.cpp	/^double QCPLayerable::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPLayerable
selectTest	gui_sources/qcustomplot.cpp	/^double QCPLayoutElement::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPLayoutElement
selectTest	gui_sources/qcustomplot.cpp	/^double QCPLayoutInset::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPLayoutInset
selectTest	gui_sources/qcustomplot.cpp	/^double QCPLegend::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPLegend
selectTest	gui_sources/qcustomplot.cpp	/^double QCPPolarAxisAngular::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPPolarAxisAngular
selectTest	gui_sources/qcustomplot.cpp	/^double QCPPolarAxisRadial::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPPolarAxisRadial
selectTest	gui_sources/qcustomplot.cpp	/^double QCPPolarGraph::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPPolarGraph
selectTest	gui_sources/qcustomplot.cpp	/^double QCPStatisticalBox::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPStatisticalBox
selectTest	gui_sources/qcustomplot.cpp	/^double QCPTextElement::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPTextElement
selectTest	gui_sources/qcustomplot.h	/^double QCPAbstractPlottable1D<DataType>::selectTest(const QPointF &pos, bool onlySelectable, QVariant *details) const$/;"	f	class:QCPAbstractPlottable1D
selectTestRect	gui_sources/qcustomplot.cpp	/^QCPDataSelection QCPBars::selectTestRect(const QRectF &rect, bool onlySelectable) const$/;"	f	class:QCPBars
selectTestRect	gui_sources/qcustomplot.cpp	/^QCPDataSelection QCPErrorBars::selectTestRect(const QRectF &rect, bool onlySelectable) const$/;"	f	class:QCPErrorBars
selectTestRect	gui_sources/qcustomplot.cpp	/^QCPDataSelection QCPFinancial::selectTestRect(const QRectF &rect, bool onlySelectable) const$/;"	f	class:QCPFinancial
selectTestRect	gui_sources/qcustomplot.cpp	/^QCPDataSelection QCPStatisticalBox::selectTestRect(const QRectF &rect, bool onlySelectable) const$/;"	f	class:QCPStatisticalBox
selectTestRect	gui_sources/qcustomplot.h	/^QCPDataSelection QCPAbstractPlottable1D<DataType>::selectTestRect(const QRectF &rect, bool onlySelectable) const$/;"	f	class:QCPAbstractPlottable1D
selectable	gui_sources/qcustomplot.h	/^  QCP::SelectionType selectable() const { return mSelectable; }$/;"	f	class:QCPAbstractPlottable
selectable	gui_sources/qcustomplot.h	/^  QCP::SelectionType selectable() const { return mSelectable; }$/;"	f	class:QCPPolarGraph
selectable	gui_sources/qcustomplot.h	/^  bool selectable() const { return mSelectable; }$/;"	f	class:QCPAbstractItem
selectable	gui_sources/qcustomplot.h	/^  bool selectable() const { return mSelectable; }$/;"	f	class:QCPAbstractLegendItem
selectable	gui_sources/qcustomplot.h	/^  bool selectable() const { return mSelectable; }$/;"	f	class:QCPTextElement
selectableChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAbstractItem::selectableChanged(bool _t1)$/;"	f	class:QCPAbstractItem
selectableChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAbstractLegendItem::selectableChanged(bool _t1)$/;"	f	class:QCPAbstractLegendItem
selectableChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAbstractPlottable::selectableChanged(QCP::SelectionType _t1)$/;"	f	class:QCPAbstractPlottable
selectableChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAxis::selectableChanged(const QCPAxis::SelectableParts & _t1)$/;"	f	class:QCPAxis
selectableChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPLegend::selectableChanged(QCPLegend::SelectableParts _t1)$/;"	f	class:QCPLegend
selectableChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarAxisAngular::selectableChanged(const QCPPolarAxisAngular::SelectableParts & _t1)$/;"	f	class:QCPPolarAxisAngular
selectableChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarAxisRadial::selectableChanged(const QCPPolarAxisRadial::SelectableParts & _t1)$/;"	f	class:QCPPolarAxisRadial
selectableChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarGraph::selectableChanged(QCP::SelectionType _t1)$/;"	f	class:QCPPolarGraph
selectableChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPTextElement::selectableChanged(bool _t1)$/;"	f	class:QCPTextElement
selectableParts	gui_sources/qcustomplot.h	/^  SelectableParts selectableParts() const { return mSelectableParts; }$/;"	f	class:QCPAxis
selectableParts	gui_sources/qcustomplot.h	/^  SelectableParts selectableParts() const { return mSelectableParts; }$/;"	f	class:QCPLegend
selectableParts	gui_sources/qcustomplot.h	/^  SelectableParts selectableParts() const { return mSelectableParts; }$/;"	f	class:QCPPolarAxisAngular
selectableParts	gui_sources/qcustomplot.h	/^  SelectableParts selectableParts() const { return mSelectableParts; }$/;"	f	class:QCPPolarAxisRadial
selected	gui_sources/qcustomplot.h	/^  bool selected() const { return !mSelection.isEmpty(); }$/;"	f	class:QCPAbstractPlottable
selected	gui_sources/qcustomplot.h	/^  bool selected() const { return !mSelection.isEmpty(); }$/;"	f	class:QCPPolarGraph
selected	gui_sources/qcustomplot.h	/^  bool selected() const { return mSelected; }$/;"	f	class:QCPAbstractItem
selected	gui_sources/qcustomplot.h	/^  bool selected() const { return mSelected; }$/;"	f	class:QCPAbstractLegendItem
selected	gui_sources/qcustomplot.h	/^  bool selected() const { return mSelected; }$/;"	f	class:QCPTextElement
selectedAxes	gui_sources/qcustomplot.cpp	/^QList<QCPAxis*> QCustomPlot::selectedAxes() const$/;"	f	class:QCustomPlot
selectedBasePen	gui_sources/qcustomplot.h	/^  QPen selectedBasePen() const { return mSelectedBasePen; }$/;"	f	class:QCPAxis
selectedBasePen	gui_sources/qcustomplot.h	/^  QPen selectedBasePen() const { return mSelectedBasePen; }$/;"	f	class:QCPPolarAxisAngular
selectedBasePen	gui_sources/qcustomplot.h	/^  QPen selectedBasePen() const { return mSelectedBasePen; }$/;"	f	class:QCPPolarAxisRadial
selectedBorderPen	gui_sources/qcustomplot.h	/^  QPen selectedBorderPen() const { return mSelectedBorderPen; }$/;"	f	class:QCPLegend
selectedBrush	gui_sources/qcustomplot.h	/^  QBrush selectedBrush() const { return mSelectedBrush; }$/;"	f	class:QCPItemEllipse
selectedBrush	gui_sources/qcustomplot.h	/^  QBrush selectedBrush() const { return mSelectedBrush; }$/;"	f	class:QCPItemRect
selectedBrush	gui_sources/qcustomplot.h	/^  QBrush selectedBrush() const { return mSelectedBrush; }$/;"	f	class:QCPItemText
selectedBrush	gui_sources/qcustomplot.h	/^  QBrush selectedBrush() const { return mSelectedBrush; }$/;"	f	class:QCPItemTracer
selectedBrush	gui_sources/qcustomplot.h	/^  QBrush selectedBrush() const { return mSelectedBrush; }$/;"	f	class:QCPLegend
selectedColor	gui_sources/qcustomplot.h	/^  QColor selectedColor() const { return mSelectedColor; }$/;"	f	class:QCPItemText
selectedFont	gui_sources/qcustomplot.h	/^  QFont selectedFont() const { return mSelectedFont; }$/;"	f	class:QCPAbstractLegendItem
selectedFont	gui_sources/qcustomplot.h	/^  QFont selectedFont() const { return mSelectedFont; }$/;"	f	class:QCPItemText
selectedFont	gui_sources/qcustomplot.h	/^  QFont selectedFont() const { return mSelectedFont; }$/;"	f	class:QCPLegend
selectedFont	gui_sources/qcustomplot.h	/^  QFont selectedFont() const { return mSelectedFont; }$/;"	f	class:QCPTextElement
selectedGraphs	gui_sources/qcustomplot.cpp	/^QList<QCPGraph*> QCustomPlot::selectedGraphs() const$/;"	f	class:QCustomPlot
selectedIconBorderPen	gui_sources/qcustomplot.h	/^  QPen selectedIconBorderPen() const { return mSelectedIconBorderPen; }$/;"	f	class:QCPLegend
selectedItems	gui_sources/qcustomplot.cpp	/^QList<QCPAbstractItem*> QCustomPlot::selectedItems() const$/;"	f	class:QCustomPlot
selectedItems	gui_sources/qcustomplot.cpp	/^QList<QCPAbstractLegendItem *> QCPLegend::selectedItems() const$/;"	f	class:QCPLegend
selectedLabelColor	gui_sources/qcustomplot.h	/^  QColor selectedLabelColor() const { return mSelectedLabelColor; }$/;"	f	class:QCPAxis
selectedLabelColor	gui_sources/qcustomplot.h	/^  QColor selectedLabelColor() const { return mSelectedLabelColor; }$/;"	f	class:QCPPolarAxisAngular
selectedLabelColor	gui_sources/qcustomplot.h	/^  QColor selectedLabelColor() const { return mSelectedLabelColor; }$/;"	f	class:QCPPolarAxisRadial
selectedLabelFont	gui_sources/qcustomplot.h	/^  QFont selectedLabelFont() const { return mSelectedLabelFont; }$/;"	f	class:QCPAxis
selectedLabelFont	gui_sources/qcustomplot.h	/^  QFont selectedLabelFont() const { return mSelectedLabelFont; }$/;"	f	class:QCPPolarAxisAngular
selectedLabelFont	gui_sources/qcustomplot.h	/^  QFont selectedLabelFont() const { return mSelectedLabelFont; }$/;"	f	class:QCPPolarAxisRadial
selectedLegends	gui_sources/qcustomplot.cpp	/^QList<QCPLegend*> QCustomPlot::selectedLegends() const$/;"	f	class:QCustomPlot
selectedParts	gui_sources/qcustomplot.cpp	/^QCPLegend::SelectableParts QCPLegend::selectedParts() const$/;"	f	class:QCPLegend
selectedParts	gui_sources/qcustomplot.h	/^  SelectableParts selectedParts() const { return mSelectedParts; }$/;"	f	class:QCPAxis
selectedParts	gui_sources/qcustomplot.h	/^  SelectableParts selectedParts() const { return mSelectedParts; }$/;"	f	class:QCPPolarAxisAngular
selectedParts	gui_sources/qcustomplot.h	/^  SelectableParts selectedParts() const { return mSelectedParts; }$/;"	f	class:QCPPolarAxisRadial
selectedPen	gui_sources/qcustomplot.h	/^  QPen selectedPen() const { return mSelectedPen; }$/;"	f	class:QCPItemBracket
selectedPen	gui_sources/qcustomplot.h	/^  QPen selectedPen() const { return mSelectedPen; }$/;"	f	class:QCPItemCurve
selectedPen	gui_sources/qcustomplot.h	/^  QPen selectedPen() const { return mSelectedPen; }$/;"	f	class:QCPItemEllipse
selectedPen	gui_sources/qcustomplot.h	/^  QPen selectedPen() const { return mSelectedPen; }$/;"	f	class:QCPItemLine
selectedPen	gui_sources/qcustomplot.h	/^  QPen selectedPen() const { return mSelectedPen; }$/;"	f	class:QCPItemPixmap
selectedPen	gui_sources/qcustomplot.h	/^  QPen selectedPen() const { return mSelectedPen; }$/;"	f	class:QCPItemRect
selectedPen	gui_sources/qcustomplot.h	/^  QPen selectedPen() const { return mSelectedPen; }$/;"	f	class:QCPItemStraightLine
selectedPen	gui_sources/qcustomplot.h	/^  QPen selectedPen() const { return mSelectedPen; }$/;"	f	class:QCPItemText
selectedPen	gui_sources/qcustomplot.h	/^  QPen selectedPen() const { return mSelectedPen; }$/;"	f	class:QCPItemTracer
selectedPlottables	gui_sources/qcustomplot.cpp	/^QList<QCPAbstractPlottable*> QCustomPlot::selectedPlottables() const$/;"	f	class:QCustomPlot
selectedSubTickPen	gui_sources/qcustomplot.h	/^  QPen selectedSubTickPen() const { return mSelectedSubTickPen; }$/;"	f	class:QCPAxis
selectedSubTickPen	gui_sources/qcustomplot.h	/^  QPen selectedSubTickPen() const { return mSelectedSubTickPen; }$/;"	f	class:QCPPolarAxisAngular
selectedSubTickPen	gui_sources/qcustomplot.h	/^  QPen selectedSubTickPen() const { return mSelectedSubTickPen; }$/;"	f	class:QCPPolarAxisRadial
selectedTextColor	gui_sources/qcustomplot.h	/^  QColor selectedTextColor() const { return mSelectedTextColor; }$/;"	f	class:QCPAbstractLegendItem
selectedTextColor	gui_sources/qcustomplot.h	/^  QColor selectedTextColor() const { return mSelectedTextColor; }$/;"	f	class:QCPLegend
selectedTextColor	gui_sources/qcustomplot.h	/^  QColor selectedTextColor() const { return mSelectedTextColor; }$/;"	f	class:QCPTextElement
selectedTickLabelColor	gui_sources/qcustomplot.h	/^  QColor selectedTickLabelColor() const { return mSelectedTickLabelColor; }$/;"	f	class:QCPAxis
selectedTickLabelColor	gui_sources/qcustomplot.h	/^  QColor selectedTickLabelColor() const { return mSelectedTickLabelColor; }$/;"	f	class:QCPPolarAxisAngular
selectedTickLabelColor	gui_sources/qcustomplot.h	/^  QColor selectedTickLabelColor() const { return mSelectedTickLabelColor; }$/;"	f	class:QCPPolarAxisRadial
selectedTickLabelFont	gui_sources/qcustomplot.h	/^  QFont selectedTickLabelFont() const { return mSelectedTickLabelFont; }$/;"	f	class:QCPAxis
selectedTickLabelFont	gui_sources/qcustomplot.h	/^  QFont selectedTickLabelFont() const { return mSelectedTickLabelFont; }$/;"	f	class:QCPPolarAxisAngular
selectedTickLabelFont	gui_sources/qcustomplot.h	/^  QFont selectedTickLabelFont() const { return mSelectedTickLabelFont; }$/;"	f	class:QCPPolarAxisRadial
selectedTickPen	gui_sources/qcustomplot.h	/^  QPen selectedTickPen() const { return mSelectedTickPen; }$/;"	f	class:QCPAxis
selectedTickPen	gui_sources/qcustomplot.h	/^  QPen selectedTickPen() const { return mSelectedTickPen; }$/;"	f	class:QCPPolarAxisAngular
selectedTickPen	gui_sources/qcustomplot.h	/^  QPen selectedTickPen() const { return mSelectedTickPen; }$/;"	f	class:QCPPolarAxisRadial
selection	gui_sources/qcustomplot.h	/^  QCPDataSelection selection() const { return mSelection; }$/;"	f	class:QCPAbstractPlottable
selection	gui_sources/qcustomplot.h	/^  QCPDataSelection selection() const { return mSelection; }$/;"	f	class:QCPPolarGraph
selectionCategory	gui_sources/qcustomplot.cpp	/^QCP::Interaction QCPAbstractItem::selectionCategory() const$/;"	f	class:QCPAbstractItem
selectionCategory	gui_sources/qcustomplot.cpp	/^QCP::Interaction QCPAbstractLegendItem::selectionCategory() const$/;"	f	class:QCPAbstractLegendItem
selectionCategory	gui_sources/qcustomplot.cpp	/^QCP::Interaction QCPAbstractPlottable::selectionCategory() const$/;"	f	class:QCPAbstractPlottable
selectionCategory	gui_sources/qcustomplot.cpp	/^QCP::Interaction QCPAxis::selectionCategory() const$/;"	f	class:QCPAxis
selectionCategory	gui_sources/qcustomplot.cpp	/^QCP::Interaction QCPLayerable::selectionCategory() const$/;"	f	class:QCPLayerable
selectionCategory	gui_sources/qcustomplot.cpp	/^QCP::Interaction QCPLegend::selectionCategory() const$/;"	f	class:QCPLegend
selectionCategory	gui_sources/qcustomplot.cpp	/^QCP::Interaction QCPPolarAxisAngular::selectionCategory() const$/;"	f	class:QCPPolarAxisAngular
selectionCategory	gui_sources/qcustomplot.cpp	/^QCP::Interaction QCPPolarAxisRadial::selectionCategory() const$/;"	f	class:QCPPolarAxisRadial
selectionCategory	gui_sources/qcustomplot.cpp	/^QCP::Interaction QCPPolarGraph::selectionCategory() const$/;"	f	class:QCPPolarGraph
selectionChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAbstractItem::selectionChanged(bool _t1)$/;"	f	class:QCPAbstractItem
selectionChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAbstractLegendItem::selectionChanged(bool _t1)$/;"	f	class:QCPAbstractLegendItem
selectionChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAbstractPlottable::selectionChanged(bool _t1)$/;"	f	class:QCPAbstractPlottable
selectionChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAbstractPlottable::selectionChanged(const QCPDataSelection & _t1)$/;"	f	class:QCPAbstractPlottable
selectionChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPAxis::selectionChanged(const QCPAxis::SelectableParts & _t1)$/;"	f	class:QCPAxis
selectionChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPLegend::selectionChanged(QCPLegend::SelectableParts _t1)$/;"	f	class:QCPLegend
selectionChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarAxisAngular::selectionChanged(const QCPPolarAxisAngular::SelectableParts & _t1)$/;"	f	class:QCPPolarAxisAngular
selectionChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarAxisRadial::selectionChanged(const QCPPolarAxisRadial::SelectableParts & _t1)$/;"	f	class:QCPPolarAxisRadial
selectionChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarGraph::selectionChanged(bool _t1)$/;"	f	class:QCPPolarGraph
selectionChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPPolarGraph::selectionChanged(const QCPDataSelection & _t1)$/;"	f	class:QCPPolarGraph
selectionChanged	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPTextElement::selectionChanged(bool _t1)$/;"	f	class:QCPTextElement
selectionChangedByUser	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCustomPlot::selectionChangedByUser()$/;"	f	class:QCustomPlot
selectionDecorator	gui_sources/qcustomplot.h	/^  QCPSelectionDecorator *selectionDecorator() const { return mSelectionDecorator; }$/;"	f	class:QCPAbstractPlottable
selectionHitBox	gui_sources/qcustomplot.cpp	/^QRectF QCPFinancial::selectionHitBox(QCPFinancialDataContainer::const_iterator it) const$/;"	f	class:QCPFinancial
selectionRect	gui_sources/qcustomplot.h	/^  QCPSelectionRect *selectionRect() const { return mSelectionRect; }$/;"	f	class:QCustomPlot
selectionRectMode	gui_sources/qcustomplot.h	/^  QCP::SelectionRectMode selectionRectMode() const { return mSelectionRectMode; }$/;"	f	class:QCustomPlot
selectionTolerance	gui_sources/qcustomplot.h	/^  int selectionTolerance() const { return mSelectionTolerance; }$/;"	f	class:QCustomPlot
sendCommand	DEVICES/device_generic_interface.h	/^	void sendCommand(T_COMMAND commandDevice) { Command = commandDevice;  ConnectionDevice->SlotSendCommand(Command.toByteArray());};$/;"	f	class:DeviceGenericInterface
sendCommand	DEVICES/device_generic_interface.h	/^    void sendCommand() { ConnectionDevice->slotSendMessage(Command.toByteArray());};$/;"	f	class:DeviceGenericInterface
server	stream_video_rtsp.h	/^        GstRTSPServer *server = nullptr;$/;"	m	class:VideoStreamRTSP
set	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::set(const QCPDataContainer<DataType> &data)$/;"	f	class:QCPDataContainer
set	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::set(const QVector<DataType> &data, bool alreadySorted)$/;"	f	class:QCPDataContainer
setAbbreviateDecimalPowers	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::setAbbreviateDecimalPowers(bool enabled)$/;"	f	class:QCPLabelPainterPrivate
setAdaptiveSampling	gui_sources/qcustomplot.cpp	/^void QCPGraph::setAdaptiveSampling(bool enabled)$/;"	f	class:QCPGraph
setAlpha	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::setAlpha(int keyIndex, int valueIndex, unsigned char alpha)$/;"	f	class:QCPColorMapData
setAnchorMode	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::setAnchorMode(AnchorMode mode)$/;"	f	class:QCPLabelPainterPrivate
setAnchorReference	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::setAnchorReference(const QPointF &pixelPoint)$/;"	f	class:QCPLabelPainterPrivate
setAnchorReferenceType	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::setAnchorReferenceType(AnchorReferenceType type)$/;"	f	class:QCPLabelPainterPrivate
setAnchorSide	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::setAnchorSide(AnchorSide side)$/;"	f	class:QCPLabelPainterPrivate
setAngle	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setAngle(double degrees)$/;"	f	class:QCPPolarAxisAngular
setAngle	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setAngle(double degrees)$/;"	f	class:QCPPolarAxisRadial
setAngleReference	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setAngleReference(AngleReference reference)$/;"	f	class:QCPPolarAxisRadial
setAngularPen	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::setAngularPen(const QPen &pen)$/;"	f	class:QCPPolarGrid
setAngularSubGridPen	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::setAngularSubGridPen(const QPen &pen)$/;"	f	class:QCPPolarGrid
setAntialiased	gui_sources/qcustomplot.cpp	/^void QCPLayerable::setAntialiased(bool enabled)$/;"	f	class:QCPLayerable
setAntialiasedElement	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setAntialiasedElement(QCP::AntialiasedElement antialiasedElement, bool enabled)$/;"	f	class:QCustomPlot
setAntialiasedElements	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setAntialiasedElements(const QCP::AntialiasedElements &antialiasedElements)$/;"	f	class:QCustomPlot
setAntialiasedFill	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::setAntialiasedFill(bool enabled)$/;"	f	class:QCPAbstractPlottable
setAntialiasedFill	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setAntialiasedFill(bool enabled)$/;"	f	class:QCPPolarGraph
setAntialiasedScatters	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::setAntialiasedScatters(bool enabled)$/;"	f	class:QCPAbstractPlottable
setAntialiasedScatters	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setAntialiasedScatters(bool enabled)$/;"	f	class:QCPPolarGraph
setAntialiasedSubGrid	gui_sources/qcustomplot.cpp	/^void QCPGrid::setAntialiasedSubGrid(bool enabled)$/;"	f	class:QCPGrid
setAntialiasedSubGrid	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::setAntialiasedSubGrid(bool enabled)$/;"	f	class:QCPPolarGrid
setAntialiasedZeroLine	gui_sources/qcustomplot.cpp	/^void QCPGrid::setAntialiasedZeroLine(bool enabled)$/;"	f	class:QCPGrid
setAntialiasedZeroLine	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::setAntialiasedZeroLine(bool enabled)$/;"	f	class:QCPPolarGrid
setAntialiasing	gui_sources/qcustomplot.cpp	/^void QCPPainter::setAntialiasing(bool enabled)$/;"	f	class:QCPPainter
setAutoAddPlottableToLegend	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setAutoAddPlottableToLegend(bool on)$/;"	f	class:QCustomPlot
setAutoClear	gui_sources/widget_output_image_display.cpp	/^void WidgetOutputImageDisplay::setAutoClear(int msec)$/;"	f	class:WidgetOutputImageDisplay
setAutoClear	gui_sources/widget_output_text_display.cpp	/^void WidgetOutputTextDisplay::setAutoClear(int msec)$/;"	f	class:WidgetOutputTextDisplay
setAutoMargins	gui_sources/qcustomplot.cpp	/^void QCPLayoutElement::setAutoMargins(QCP::MarginSides sides)$/;"	f	class:QCPLayoutElement
setAutoSqueeze	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::setAutoSqueeze(bool enabled)$/;"	f	class:QCPDataContainer
setAxes	gui_sources/qcustomplot.cpp	/^void QCPItemPosition::setAxes(QCPAxis *keyAxis, QCPAxis *valueAxis)$/;"	f	class:QCPItemPosition
setAxisRect	gui_sources/qcustomplot.cpp	/^void QCPItemPosition::setAxisRect(QCPAxisRect *axisRect)$/;"	f	class:QCPItemPosition
setBackground	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setBackground(const QBrush &brush)$/;"	f	class:QCPAxisRect
setBackground	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setBackground(const QPixmap &pm)$/;"	f	class:QCPAxisRect
setBackground	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setBackground(const QPixmap &pm, bool scaled, Qt::AspectRatioMode mode)$/;"	f	class:QCPAxisRect
setBackground	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setBackground(const QBrush &brush)$/;"	f	class:QCPPolarAxisAngular
setBackground	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setBackground(const QPixmap &pm)$/;"	f	class:QCPPolarAxisAngular
setBackground	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setBackground(const QPixmap &pm, bool scaled, Qt::AspectRatioMode mode)$/;"	f	class:QCPPolarAxisAngular
setBackground	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setBackground(const QBrush &brush)$/;"	f	class:QCustomPlot
setBackground	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setBackground(const QPixmap &pm)$/;"	f	class:QCustomPlot
setBackground	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setBackground(const QPixmap &pm, bool scaled, Qt::AspectRatioMode mode)$/;"	f	class:QCustomPlot
setBackgroundScaled	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setBackgroundScaled(bool scaled)$/;"	f	class:QCPAxisRect
setBackgroundScaled	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setBackgroundScaled(bool scaled)$/;"	f	class:QCPPolarAxisAngular
setBackgroundScaled	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setBackgroundScaled(bool scaled)$/;"	f	class:QCustomPlot
setBackgroundScaledMode	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setBackgroundScaledMode(Qt::AspectRatioMode mode)$/;"	f	class:QCPAxisRect
setBackgroundScaledMode	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setBackgroundScaledMode(Qt::AspectRatioMode mode)$/;"	f	class:QCPPolarAxisAngular
setBackgroundScaledMode	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setBackgroundScaledMode(Qt::AspectRatioMode mode)$/;"	f	class:QCustomPlot
setBarWidth	gui_sources/qcustomplot.cpp	/^void QCPColorScale::setBarWidth(int width)$/;"	f	class:QCPColorScale
setBarsGroup	gui_sources/qcustomplot.cpp	/^void QCPBars::setBarsGroup(QCPBarsGroup *barsGroup)$/;"	f	class:QCPBars
setBasePen	gui_sources/qcustomplot.cpp	/^void QCPAxis::setBasePen(const QPen &pen)$/;"	f	class:QCPAxis
setBasePen	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setBasePen(const QPen &pen)$/;"	f	class:QCPPolarAxisAngular
setBasePen	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setBasePen(const QPen &pen)$/;"	f	class:QCPPolarAxisRadial
setBaseValue	gui_sources/qcustomplot.cpp	/^void QCPBars::setBaseValue(double baseValue)$/;"	f	class:QCPBars
setBegin	gui_sources/qcustomplot.h	/^  void setBegin(int begin) { mBegin = begin; }$/;"	f	class:QCPDataRange
setBorderPen	gui_sources/qcustomplot.cpp	/^void QCPLegend::setBorderPen(const QPen &pen)$/;"	f	class:QCPLegend
setBracketBrush	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecoratorBracket::setBracketBrush(const QBrush &brush)$/;"	f	class:QCPSelectionDecoratorBracket
setBracketHeight	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecoratorBracket::setBracketHeight(int height)$/;"	f	class:QCPSelectionDecoratorBracket
setBracketPen	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecoratorBracket::setBracketPen(const QPen &pen)$/;"	f	class:QCPSelectionDecoratorBracket
setBracketStyle	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecoratorBracket::setBracketStyle(QCPSelectionDecoratorBracket::BracketStyle style)$/;"	f	class:QCPSelectionDecoratorBracket
setBracketWidth	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecoratorBracket::setBracketWidth(int width)$/;"	f	class:QCPSelectionDecoratorBracket
setBrush	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::setBrush(const QBrush &brush)$/;"	f	class:QCPAbstractPlottable
setBrush	gui_sources/qcustomplot.cpp	/^void QCPItemEllipse::setBrush(const QBrush &brush)$/;"	f	class:QCPItemEllipse
setBrush	gui_sources/qcustomplot.cpp	/^void QCPItemRect::setBrush(const QBrush &brush)$/;"	f	class:QCPItemRect
setBrush	gui_sources/qcustomplot.cpp	/^void QCPItemText::setBrush(const QBrush &brush)$/;"	f	class:QCPItemText
setBrush	gui_sources/qcustomplot.cpp	/^void QCPItemTracer::setBrush(const QBrush &brush)$/;"	f	class:QCPItemTracer
setBrush	gui_sources/qcustomplot.cpp	/^void QCPLegend::setBrush(const QBrush &brush)$/;"	f	class:QCPLegend
setBrush	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setBrush(const QBrush &brush)$/;"	f	class:QCPPolarGraph
setBrush	gui_sources/qcustomplot.cpp	/^void QCPScatterStyle::setBrush(const QBrush &brush)$/;"	f	class:QCPScatterStyle
setBrush	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecorator::setBrush(const QBrush &brush)$/;"	f	class:QCPSelectionDecorator
setBrush	gui_sources/qcustomplot.cpp	/^void QCPSelectionRect::setBrush(const QBrush &brush)$/;"	f	class:QCPSelectionRect
setBrushNegative	gui_sources/qcustomplot.cpp	/^void QCPFinancial::setBrushNegative(const QBrush &brush)$/;"	f	class:QCPFinancial
setBrushPositive	gui_sources/qcustomplot.cpp	/^void QCPFinancial::setBrushPositive(const QBrush &brush)$/;"	f	class:QCPFinancial
setBufferDevicePixelRatio	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setBufferDevicePixelRatio(double ratio)$/;"	f	class:QCustomPlot
setCacheSize	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::setCacheSize(int labelCount)$/;"	f	class:QCPLabelPainterPrivate
setCell	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::setCell(int keyIndex, int valueIndex, double z)$/;"	f	class:QCPColorMapData
setChannelFillGraph	gui_sources/qcustomplot.cpp	/^void QCPGraph::setChannelFillGraph(QCPGraph *targetGraph)$/;"	f	class:QCPGraph
setChartStyle	gui_sources/qcustomplot.cpp	/^void QCPFinancial::setChartStyle(QCPFinancial::ChartStyle style)$/;"	f	class:QCPFinancial
setClipAxisRect	gui_sources/qcustomplot.cpp	/^void QCPAbstractItem::setClipAxisRect(QCPAxisRect *rect)$/;"	f	class:QCPAbstractItem
setClipToAxisRect	gui_sources/qcustomplot.cpp	/^void QCPAbstractItem::setClipToAxisRect(bool clip)$/;"	f	class:QCPAbstractItem
setColor	gui_sources/qcustomplot.cpp	/^void QCPItemText::setColor(const QColor &color)$/;"	f	class:QCPItemText
setColor	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::setColor(const QColor &color)$/;"	f	class:QCPLabelPainterPrivate
setColorInterpolation	gui_sources/qcustomplot.cpp	/^void QCPColorGradient::setColorInterpolation(QCPColorGradient::ColorInterpolation interpolation)$/;"	f	class:QCPColorGradient
setColorScale	gui_sources/qcustomplot.cpp	/^void QCPColorMap::setColorScale(QCPColorScale *colorScale)$/;"	f	class:QCPColorMap
setColorStopAt	gui_sources/qcustomplot.cpp	/^void QCPColorGradient::setColorStopAt(double position, const QColor &color)$/;"	f	class:QCPColorGradient
setColorStops	gui_sources/qcustomplot.cpp	/^void QCPColorGradient::setColorStops(const QMap<double, QColor> &colorStops)$/;"	f	class:QCPColorGradient
setColumnSpacing	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::setColumnSpacing(int pixels)$/;"	f	class:QCPLayoutGrid
setColumnStretchFactor	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::setColumnStretchFactor(int column, double factor)$/;"	f	class:QCPLayoutGrid
setColumnStretchFactors	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::setColumnStretchFactors(const QList<double> &factors)$/;"	f	class:QCPLayoutGrid
setCoords	gui_sources/qcustomplot.cpp	/^void QCPItemPosition::setCoords(const QPointF &pos)$/;"	f	class:QCPItemPosition
setCoords	gui_sources/qcustomplot.cpp	/^void QCPItemPosition::setCoords(double key, double value)$/;"	f	class:QCPItemPosition
setCurrentLayer	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::setCurrentLayer(QCPLayer *layer)$/;"	f	class:QCustomPlot
setCurrentLayer	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::setCurrentLayer(const QString &name)$/;"	f	class:QCustomPlot
setCustomPath	gui_sources/qcustomplot.cpp	/^void QCPScatterStyle::setCustomPath(const QPainterPath &customPath)$/;"	f	class:QCPScatterStyle
setData	gui_sources/qcustomplot.cpp	/^void QCPBars::setData(QSharedPointer<QCPBarsDataContainer> data)$/;"	f	class:QCPBars
setData	gui_sources/qcustomplot.cpp	/^void QCPBars::setData(const QVector<double> &keys, const QVector<double> &values, bool alreadySorted)$/;"	f	class:QCPBars
setData	gui_sources/qcustomplot.cpp	/^void QCPColorMap::setData(QCPColorMapData *data, bool copy)$/;"	f	class:QCPColorMap
setData	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::setData(double key, double value, double z)$/;"	f	class:QCPColorMapData
setData	gui_sources/qcustomplot.cpp	/^void QCPCurve::setData(QSharedPointer<QCPCurveDataContainer> data)$/;"	f	class:QCPCurve
setData	gui_sources/qcustomplot.cpp	/^void QCPCurve::setData(const QVector<double> &keys, const QVector<double> &values)$/;"	f	class:QCPCurve
setData	gui_sources/qcustomplot.cpp	/^void QCPCurve::setData(const QVector<double> &t, const QVector<double> &keys, const QVector<double> &values, bool alreadySorted)$/;"	f	class:QCPCurve
setData	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::setData(QSharedPointer<QCPErrorBarsDataContainer> data)$/;"	f	class:QCPErrorBars
setData	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::setData(const QVector<double> &error)$/;"	f	class:QCPErrorBars
setData	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::setData(const QVector<double> &errorMinus, const QVector<double> &errorPlus)$/;"	f	class:QCPErrorBars
setData	gui_sources/qcustomplot.cpp	/^void QCPFinancial::setData(QSharedPointer<QCPFinancialDataContainer> data)$/;"	f	class:QCPFinancial
setData	gui_sources/qcustomplot.cpp	/^void QCPFinancial::setData(const QVector<double> &keys, const QVector<double> &open, const QVector<double> &high, const QVector<double> &low, const QVector<double> &close, bool alreadySorted)$/;"	f	class:QCPFinancial
setData	gui_sources/qcustomplot.cpp	/^void QCPGraph::setData(QSharedPointer<QCPGraphDataContainer> data)$/;"	f	class:QCPGraph
setData	gui_sources/qcustomplot.cpp	/^void QCPGraph::setData(const QVector<double> &keys, const QVector<double> &values, bool alreadySorted)$/;"	f	class:QCPGraph
setData	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setData(QSharedPointer<QCPGraphDataContainer> data)$/;"	f	class:QCPPolarGraph
setData	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setData(const QVector<double> &keys, const QVector<double> &values, bool alreadySorted)$/;"	f	class:QCPPolarGraph
setData	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::setData(QSharedPointer<QCPStatisticalBoxDataContainer> data)$/;"	f	class:QCPStatisticalBox
setData	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::setData(const QVector<double> &keys, const QVector<double> &minimum, const QVector<double> &lowerQuartile, const QVector<double> &median, const QVector<double> &upperQuartile, const QVector<double> &maximum, bool alreadySorted)$/;"	f	class:QCPStatisticalBox
setDataPlottable	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::setDataPlottable(QCPAbstractPlottable *plottable)$/;"	f	class:QCPErrorBars
setDataRange	gui_sources/qcustomplot.cpp	/^void QCPColorMap::setDataRange(const QCPRange &dataRange)$/;"	f	class:QCPColorMap
setDataRange	gui_sources/qcustomplot.cpp	/^void QCPColorScale::setDataRange(const QCPRange &dataRange)$/;"	f	class:QCPColorScale
setDataScaleType	gui_sources/qcustomplot.cpp	/^void QCPColorMap::setDataScaleType(QCPAxis::ScaleType scaleType)$/;"	f	class:QCPColorMap
setDataScaleType	gui_sources/qcustomplot.cpp	/^void QCPColorScale::setDataScaleType(QCPAxis::ScaleType scaleType)$/;"	f	class:QCPColorScale
setDateTimeFormat	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerDateTime::setDateTimeFormat(const QString &format)$/;"	f	class:QCPAxisTickerDateTime
setDateTimeSpec	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerDateTime::setDateTimeSpec(Qt::TimeSpec spec)$/;"	f	class:QCPAxisTickerDateTime
setDevicePixelRatio	gui_sources/qcustomplot.cpp	/^void QCPAbstractPaintBuffer::setDevicePixelRatio(double ratio)$/;"	f	class:QCPAbstractPaintBuffer
setDisplayTime	gui_sources/widget_output_image_display.cpp	/^void WidgetOutputImageDisplay::setDisplayTime(bool OnOff) { FLAG_DISPLAY_TIME = OnOff; }$/;"	f	class:WidgetOutputImageDisplay
setDisplayTime	gui_sources/widget_output_text_display.cpp	/^void WidgetOutputTextDisplay::setDisplayTime(bool OnOff) { FLAG_DISPLAY_TIME = OnOff; }$/;"	f	class:WidgetOutputTextDisplay
setEnd	gui_sources/qcustomplot.h	/^  void setEnd(int end)  { mEnd = end; }$/;"	f	class:QCPDataRange
setErrorType	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::setErrorType(ErrorType type)$/;"	f	class:QCPErrorBars
setFieldWidth	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerTime::setFieldWidth(QCPAxisTickerTime::TimeUnit unit, int width)$/;"	f	class:QCPAxisTickerTime
setFillOrder	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::setFillOrder(FillOrder order, bool rearrange)$/;"	f	class:QCPLayoutGrid
setFont	gui_sources/qcustomplot.cpp	/^void QCPAbstractLegendItem::setFont(const QFont &font)$/;"	f	class:QCPAbstractLegendItem
setFont	gui_sources/qcustomplot.cpp	/^void QCPItemText::setFont(const QFont &font)$/;"	f	class:QCPItemText
setFont	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::setFont(const QFont &font)$/;"	f	class:QCPLabelPainterPrivate
setFont	gui_sources/qcustomplot.cpp	/^void QCPLegend::setFont(const QFont &font)$/;"	f	class:QCPLegend
setFont	gui_sources/qcustomplot.cpp	/^void QCPTextElement::setFont(const QFont &font)$/;"	f	class:QCPTextElement
setFractionStyle	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerPi::setFractionStyle(QCPAxisTickerPi::FractionStyle style)$/;"	f	class:QCPAxisTickerPi
setFromOther	gui_sources/qcustomplot.cpp	/^void QCPScatterStyle::setFromOther(const QCPScatterStyle &other, ScatterProperties properties)$/;"	f	class:QCPScatterStyle
setGradient	gui_sources/qcustomplot.cpp	/^void QCPColorMap::setGradient(const QCPColorGradient &gradient)$/;"	f	class:QCPColorMap
setGradient	gui_sources/qcustomplot.cpp	/^void QCPColorScale::setGradient(const QCPColorGradient &gradient)$/;"	f	class:QCPColorScale
setGraph	gui_sources/qcustomplot.cpp	/^void QCPItemTracer::setGraph(QCPGraph *graph)$/;"	f	class:QCPItemTracer
setGraphKey	gui_sources/qcustomplot.cpp	/^void QCPItemTracer::setGraphKey(double key)$/;"	f	class:QCPItemTracer
setHead	gui_sources/qcustomplot.cpp	/^void QCPItemCurve::setHead(const QCPLineEnding &head)$/;"	f	class:QCPItemCurve
setHead	gui_sources/qcustomplot.cpp	/^void QCPItemLine::setHead(const QCPLineEnding &head)$/;"	f	class:QCPItemLine
setIconBorderPen	gui_sources/qcustomplot.cpp	/^void QCPLegend::setIconBorderPen(const QPen &pen)$/;"	f	class:QCPLegend
setIconSize	gui_sources/qcustomplot.cpp	/^void QCPLegend::setIconSize(const QSize &size)$/;"	f	class:QCPLegend
setIconSize	gui_sources/qcustomplot.cpp	/^void QCPLegend::setIconSize(int width, int height)$/;"	f	class:QCPLegend
setIconTextPadding	gui_sources/qcustomplot.cpp	/^void QCPLegend::setIconTextPadding(int padding)$/;"	f	class:QCPLegend
setInput	AIMING_MODULES/aiming_class.cpp	/^void AimingClass::setInput(const QPair<float,float>& Coord)$/;"	f	class:AimingClass
setInput	AIMING_MODULES/aiming_class.cpp	/^void AimingParamOptimizator::setInput(const QPair<float,float>& Coord)$/;"	f	class:AimingParamOptimizator
setInput	AIMING_MODULES/pid_class.cpp	/^void PIDClass::setInput(const QPair<float,float>& Coord)$/;"	f	class:PIDClass
setInput	AIMING_MODULES/rotate_vector_class.h	/^void RotateVectorClass<T>::setInput(const QPair<T,T>& Coord)$/;"	f	class:RotateVectorClass
setInput	AIM_IMAGE_IMITATION/sinus_generator_class.cpp	/^void SinusGeneratorClass::setInput(const QPair<float,float>& Coord) { }$/;"	f	class:SinusGeneratorClass
setInput	COMMON/interface_pass_coord.h	/^	virtual void setInput(const QPair<V, V>& Coord) {OutputCoord = Coord;};$/;"	f	class:PassCoordClass
setInput	COMMON/interface_pass_coord.h	/^    void setInput(const QPair<float,float>& coord) { if(InputFunction != nullptr) InputFunction(*Receiver,coord);};$/;"	f	class:PortAdapter
setInput	CV_IMAGE_PROCESSING/image_processing_node.cpp	/^void ModuleImageProcessing::setInput(const QPair<float,float>& Coord)$/;"	f	class:ModuleImageProcessing
setInput	DEVICES/device_generic_interface.h	/^	void setInput(const QPair<float, float>& Coord) { moveToPos(Coord);};$/;"	f	class:DeviceRotaryGenericInterface
setInput	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void AccumulateDataFilter::setInput(const QPair<float,float>& Coord)$/;"	f	class:AccumulateDataFilter
setInput	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.cpp	/^void RotateOperationContainer::setInput(const QPair<float,float>& Coord)$/;"	f	class:RotateOperationContainer
setInput	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	/^	 void setInput(const QPair<float,float>& Coord)$/;"	f	class:Substract
setInput	ROTATE_OPTIMIZATION/RotationContainerLib/SubstractPair.h	/^	 void setInput(const QPair<float,float>& Coord)$/;"	f	class:SummVec
setInput	UTILITES/engine_statistics.h	/^void StatisticCoord<T>::setInput(const QPair<T,T>& Input)$/;"	f	class:StatisticCoord
setInput	UTILITES/thread_operation_nodes.h	/^  void setInput(const QPair<T,T>& Input) { qDebug() << "[ END ]";}$/;"	f	class:CoordPassEnd
setInput	UTILITES/transform_coord_class.cpp	/^void TransformCoordClass::setInput(const QPair<float,float>& Coord) { TransformCoord(Coord); }$/;"	f	class:TransformCoordClass
setInput	UTILITES/transform_coord_class.h	/^    void setInput(const QPair<float,float>& Coord) { TransformCoord(Coord); }$/;"	f	class:TransformCoordClass
setInput	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^	void setInput(const QPair<float,float>& Coord) $/;"	f	class:PlotGraphicsInterface
setInsetAlignment	gui_sources/qcustomplot.cpp	/^void QCPLayoutInset::setInsetAlignment(int index, Qt::Alignment alignment)$/;"	f	class:QCPLayoutInset
setInsetPlacement	gui_sources/qcustomplot.cpp	/^void QCPLayoutInset::setInsetPlacement(int index, QCPLayoutInset::InsetPlacement placement)$/;"	f	class:QCPLayoutInset
setInsetRect	gui_sources/qcustomplot.cpp	/^void QCPLayoutInset::setInsetRect(int index, const QRectF &rect)$/;"	f	class:QCPLayoutInset
setInteraction	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setInteraction(const QCP::Interaction &interaction, bool enabled)$/;"	f	class:QCustomPlot
setInteractions	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setInteractions(const QCP::Interactions &interactions)$/;"	f	class:QCustomPlot
setInterpolate	gui_sources/qcustomplot.cpp	/^void QCPColorMap::setInterpolate(bool enabled)$/;"	f	class:QCPColorMap
setInterpolating	gui_sources/qcustomplot.cpp	/^void QCPItemTracer::setInterpolating(bool enabled)$/;"	f	class:QCPItemTracer
setInvalidated	gui_sources/qcustomplot.cpp	/^void QCPAbstractPaintBuffer::setInvalidated(bool invalidated)$/;"	f	class:QCPAbstractPaintBuffer
setInverted	gui_sources/qcustomplot.cpp	/^void QCPLineEnding::setInverted(bool inverted)$/;"	f	class:QCPLineEnding
setKeyAxis	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::setKeyAxis(QCPAxis *axis)$/;"	f	class:QCPAbstractPlottable
setKeyAxis	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setKeyAxis(QCPPolarAxisAngular *axis)$/;"	f	class:QCPPolarGraph
setKeyRange	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::setKeyRange(const QCPRange &keyRange)$/;"	f	class:QCPColorMapData
setKeySize	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::setKeySize(int keySize)$/;"	f	class:QCPColorMapData
setLabel	gui_sources/qcustomplot.cpp	/^void QCPAxis::setLabel(const QString &str)$/;"	f	class:QCPAxis
setLabel	gui_sources/qcustomplot.cpp	/^void QCPColorScale::setLabel(const QString &str)$/;"	f	class:QCPColorScale
setLabel	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setLabel(const QString &str)$/;"	f	class:QCPPolarAxisAngular
setLabel	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setLabel(const QString &str)$/;"	f	class:QCPPolarAxisRadial
setLabelColor	gui_sources/qcustomplot.cpp	/^void QCPAxis::setLabelColor(const QColor &color)$/;"	f	class:QCPAxis
setLabelColor	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setLabelColor(const QColor &color)$/;"	f	class:QCPPolarAxisAngular
setLabelColor	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setLabelColor(const QColor &color)$/;"	f	class:QCPPolarAxisRadial
setLabelFont	gui_sources/qcustomplot.cpp	/^void QCPAxis::setLabelFont(const QFont &font)$/;"	f	class:QCPAxis
setLabelFont	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setLabelFont(const QFont &font)$/;"	f	class:QCPPolarAxisAngular
setLabelFont	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setLabelFont(const QFont &font)$/;"	f	class:QCPPolarAxisRadial
setLabelPadding	gui_sources/qcustomplot.cpp	/^void QCPAxis::setLabelPadding(int padding)$/;"	f	class:QCPAxis
setLabelPadding	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setLabelPadding(int padding)$/;"	f	class:QCPPolarAxisAngular
setLabelPadding	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setLabelPadding(int padding)$/;"	f	class:QCPPolarAxisRadial
setLayer	gui_sources/qcustomplot.cpp	/^bool QCPLayerable::setLayer(QCPLayer *layer)$/;"	f	class:QCPLayerable
setLayer	gui_sources/qcustomplot.cpp	/^bool QCPLayerable::setLayer(const QString &layerName)$/;"	f	class:QCPLayerable
setLength	gui_sources/qcustomplot.cpp	/^void QCPItemBracket::setLength(double length)$/;"	f	class:QCPItemBracket
setLength	gui_sources/qcustomplot.cpp	/^void QCPLineEnding::setLength(double length)$/;"	f	class:QCPLineEnding
setLevelCount	gui_sources/qcustomplot.cpp	/^void QCPColorGradient::setLevelCount(int n)$/;"	f	class:QCPColorGradient
setLineStyle	gui_sources/qcustomplot.cpp	/^void QCPCurve::setLineStyle(QCPCurve::LineStyle style)$/;"	f	class:QCPCurve
setLineStyle	gui_sources/qcustomplot.cpp	/^void QCPGraph::setLineStyle(LineStyle ls)$/;"	f	class:QCPGraph
setLineStyle	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setLineStyle(LineStyle ls)$/;"	f	class:QCPPolarGraph
setLink	COMMON/interface_pass_coord.h	/^    void setLink(PassCoordClass<V>* NewLink) { NodesLinked.push_back(NewLink); }$/;"	f	class:PassCoordClass
setLink	COMMON/interface_pass_image.h	/^	void setLink(PassImageClass* NewLink) { NodesLinked.push_back(NewLink); }$/;"	f	class:PassImageClass
setLink	COMMON/interface_pass_value.h	/^    void setLink(PassValueClass* NewLink) { NodesLinked.push_back(NewLink);}$/;"	f	class:PassValueClass
setLinkActive	gui_sources/link_line.h	/^    void setLinkActive(bool active) $/;"	f	class:LinkLine
setLogBase	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerLog::setLogBase(double base)$/;"	f	class:QCPAxisTickerLog
setLowerEnding	gui_sources/qcustomplot.cpp	/^void QCPAxis::setLowerEnding(const QCPLineEnding &ending)$/;"	f	class:QCPAxis
setMarginGroup	gui_sources/qcustomplot.cpp	/^void QCPLayoutElement::setMarginGroup(QCP::MarginSides sides, QCPMarginGroup *group)$/;"	f	class:QCPLayoutElement
setMarginValue	gui_sources/qcustomplot.h	/^inline void setMarginValue(QMargins &margins, QCP::MarginSide side, int value)$/;"	f	namespace:QCP
setMargins	gui_sources/qcustomplot.cpp	/^void QCPLayoutElement::setMargins(const QMargins &margins)$/;"	f	class:QCPLayoutElement
setMaximumSize	gui_sources/qcustomplot.cpp	/^void QCPLayoutElement::setMaximumSize(const QSize &size)$/;"	f	class:QCPLayoutElement
setMaximumSize	gui_sources/qcustomplot.cpp	/^void QCPLayoutElement::setMaximumSize(int width, int height)$/;"	f	class:QCPLayoutElement
setMedianPen	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::setMedianPen(const QPen &pen)$/;"	f	class:QCPStatisticalBox
setMinimumMargins	gui_sources/qcustomplot.cpp	/^void QCPLayoutElement::setMinimumMargins(const QMargins &margins)$/;"	f	class:QCPLayoutElement
setMinimumSize	gui_sources/qcustomplot.cpp	/^void QCPLayoutElement::setMinimumSize(const QSize &size)$/;"	f	class:QCPLayoutElement
setMinimumSize	gui_sources/qcustomplot.cpp	/^void QCPLayoutElement::setMinimumSize(int width, int height)$/;"	f	class:QCPLayoutElement
setMode	gui_sources/qcustomplot.cpp	/^void QCPLayer::setMode(QCPLayer::LayerMode mode)$/;"	f	class:QCPLayer
setMode	gui_sources/qcustomplot.cpp	/^void QCPPainter::setMode(QCPPainter::PainterMode mode, bool enabled)$/;"	f	class:QCPPainter
setModes	gui_sources/qcustomplot.cpp	/^void QCPPainter::setModes(QCPPainter::PainterModes modes)$/;"	f	class:QCPPainter
setMultiSelectModifier	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setMultiSelectModifier(Qt::KeyboardModifier modifier)$/;"	f	class:QCustomPlot
setMultiplicationSymbol	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::setMultiplicationSymbol(QChar symbol)$/;"	f	class:QCPLabelPainterPrivate
setName	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::setName(const QString &name)$/;"	f	class:QCPAbstractPlottable
setName	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setName(const QString &name)$/;"	f	class:QCPPolarGraph
setNanColor	gui_sources/qcustomplot.cpp	/^void QCPColorGradient::setNanColor(const QColor &color)$/;"	f	class:QCPColorGradient
setNanHandling	gui_sources/qcustomplot.cpp	/^void QCPColorGradient::setNanHandling(QCPColorGradient::NanHandling handling)$/;"	f	class:QCPColorGradient
setNoAntialiasingOnDrag	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setNoAntialiasingOnDrag(bool enabled)$/;"	f	class:QCustomPlot
setNodeActive	gui_sources/node.cpp	/^void Node::setNodeActive(bool active) { if(active)  this->hide(); else this->hide(); this->setActive(active); }$/;"	f	class:Node
setNotAntialiasedElement	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setNotAntialiasedElement(QCP::AntialiasedElement notAntialiasedElement, bool enabled)$/;"	f	class:QCustomPlot
setNotAntialiasedElements	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setNotAntialiasedElements(const QCP::AntialiasedElements &notAntialiasedElements)$/;"	f	class:QCustomPlot
setNumberFormat	gui_sources/qcustomplot.cpp	/^void QCPAxis::setNumberFormat(const QString &formatCode)$/;"	f	class:QCPAxis
setNumberFormat	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setNumberFormat(const QString &formatCode)$/;"	f	class:QCPPolarAxisAngular
setNumberFormat	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setNumberFormat(const QString &formatCode)$/;"	f	class:QCPPolarAxisRadial
setNumberPrecision	gui_sources/qcustomplot.cpp	/^void QCPAxis::setNumberPrecision(int precision)$/;"	f	class:QCPAxis
setNumberPrecision	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setNumberPrecision(int precision)$/;"	f	class:QCPPolarAxisAngular
setNumberPrecision	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setNumberPrecision(int precision)$/;"	f	class:QCPPolarAxisRadial
setOffset	gui_sources/qcustomplot.cpp	/^void QCPAxis::setOffset(int offset)$/;"	f	class:QCPAxis
setOpenGl	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setOpenGl(bool enabled, int multisampling)$/;"	f	class:QCustomPlot
setOuterRect	gui_sources/qcustomplot.cpp	/^void QCPLayoutElement::setOuterRect(const QRect &rect)$/;"	f	class:QCPLayoutElement
setOutlierStyle	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::setOutlierStyle(const QCPScatterStyle &style)$/;"	f	class:QCPStatisticalBox
setPadding	gui_sources/qcustomplot.cpp	/^void QCPAxis::setPadding(int padding)$/;"	f	class:QCPAxis
setPadding	gui_sources/qcustomplot.cpp	/^void QCPItemText::setPadding(const QMargins &padding)$/;"	f	class:QCPItemText
setPadding	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::setPadding(int padding)$/;"	f	class:QCPLabelPainterPrivate
setParam	DEVICES/device_laser_interface.h	/^void DeviceLaserInterface<T_CONNECTION,T_COMMAND,T_MESSAGE>::setParam(uint8_t ID, uint16_t Value)$/;"	f	class:DeviceLaserInterface
setParam	DEVICES/device_rotary_interface.h	/^void DeviceRotaryInterface<T_CONNECTION, T_COMMAND, T_MESSAGE>::setParam(uint8_t ID, uint16_t Value) $/;"	f	class:DeviceRotaryInterface
setParams	DEVICES/device_rotary_interface.h	/^void DeviceRotaryInterface<T_CONNECTION, T_COMMAND, T_MESSAGE>::setParams(uint16_t Value1, uint16_t Value2) $/;"	f	class:DeviceRotaryInterface
setParams	DEVICES/device_rotary_interface.h	/^void DeviceRotaryInterface<T_CONNECTION, T_COMMAND, T_MESSAGE>::setParams(uint16_t Value1, uint16_t Value2, uint16_t Value3, uint16_t Value4) $/;"	f	class:DeviceRotaryInterface
setParentAnchor	gui_sources/qcustomplot.cpp	/^bool QCPItemPosition::setParentAnchor(QCPItemAnchor *parentAnchor, bool keepPixelPosition)$/;"	f	class:QCPItemPosition
setParentAnchorX	gui_sources/qcustomplot.cpp	/^bool QCPItemPosition::setParentAnchorX(QCPItemAnchor *parentAnchor, bool keepPixelPosition)$/;"	f	class:QCPItemPosition
setParentAnchorY	gui_sources/qcustomplot.cpp	/^bool QCPItemPosition::setParentAnchorY(QCPItemAnchor *parentAnchor, bool keepPixelPosition)$/;"	f	class:QCPItemPosition
setParentLayerable	gui_sources/qcustomplot.cpp	/^void QCPLayerable::setParentLayerable(QCPLayerable *parentLayerable)$/;"	f	class:QCPLayerable
setPen	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::setPen(const QPen &pen)$/;"	f	class:QCPAbstractPlottable
setPen	gui_sources/qcustomplot.cpp	/^void QCPGrid::setPen(const QPen &pen)$/;"	f	class:QCPGrid
setPen	gui_sources/qcustomplot.cpp	/^void QCPItemBracket::setPen(const QPen &pen)$/;"	f	class:QCPItemBracket
setPen	gui_sources/qcustomplot.cpp	/^void QCPItemCurve::setPen(const QPen &pen)$/;"	f	class:QCPItemCurve
setPen	gui_sources/qcustomplot.cpp	/^void QCPItemEllipse::setPen(const QPen &pen)$/;"	f	class:QCPItemEllipse
setPen	gui_sources/qcustomplot.cpp	/^void QCPItemLine::setPen(const QPen &pen)$/;"	f	class:QCPItemLine
setPen	gui_sources/qcustomplot.cpp	/^void QCPItemPixmap::setPen(const QPen &pen)$/;"	f	class:QCPItemPixmap
setPen	gui_sources/qcustomplot.cpp	/^void QCPItemRect::setPen(const QPen &pen)$/;"	f	class:QCPItemRect
setPen	gui_sources/qcustomplot.cpp	/^void QCPItemStraightLine::setPen(const QPen &pen)$/;"	f	class:QCPItemStraightLine
setPen	gui_sources/qcustomplot.cpp	/^void QCPItemText::setPen(const QPen &pen)$/;"	f	class:QCPItemText
setPen	gui_sources/qcustomplot.cpp	/^void QCPItemTracer::setPen(const QPen &pen)$/;"	f	class:QCPItemTracer
setPen	gui_sources/qcustomplot.cpp	/^void QCPPainter::setPen(Qt::PenStyle penStyle)$/;"	f	class:QCPPainter
setPen	gui_sources/qcustomplot.cpp	/^void QCPPainter::setPen(const QColor &color)$/;"	f	class:QCPPainter
setPen	gui_sources/qcustomplot.cpp	/^void QCPPainter::setPen(const QPen &pen)$/;"	f	class:QCPPainter
setPen	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setPen(const QPen &pen)$/;"	f	class:QCPPolarGraph
setPen	gui_sources/qcustomplot.cpp	/^void QCPScatterStyle::setPen(const QPen &pen)$/;"	f	class:QCPScatterStyle
setPen	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecorator::setPen(const QPen &pen)$/;"	f	class:QCPSelectionDecorator
setPen	gui_sources/qcustomplot.cpp	/^void QCPSelectionRect::setPen(const QPen &pen)$/;"	f	class:QCPSelectionRect
setPenNegative	gui_sources/qcustomplot.cpp	/^void QCPFinancial::setPenNegative(const QPen &pen)$/;"	f	class:QCPFinancial
setPenPositive	gui_sources/qcustomplot.cpp	/^void QCPFinancial::setPenPositive(const QPen &pen)$/;"	f	class:QCPFinancial
setPeriodic	gui_sources/qcustomplot.cpp	/^void QCPColorGradient::setPeriodic(bool enabled)$/;"	f	class:QCPColorGradient
setPeriodic	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setPeriodic(bool enabled)$/;"	f	class:QCPPolarGraph
setPeriodicity	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerPi::setPeriodicity(int multiplesOfPi)$/;"	f	class:QCPAxisTickerPi
setPiSymbol	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerPi::setPiSymbol(QString symbol)$/;"	f	class:QCPAxisTickerPi
setPiValue	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerPi::setPiValue(double pi)$/;"	f	class:QCPAxisTickerPi
setPixelPosition	gui_sources/qcustomplot.cpp	/^void QCPItemPosition::setPixelPosition(const QPointF &pixelPosition)$/;"	f	class:QCPItemPosition
setPixmap	gui_sources/qcustomplot.cpp	/^void QCPItemPixmap::setPixmap(const QPixmap &pixmap)$/;"	f	class:QCPItemPixmap
setPixmap	gui_sources/qcustomplot.cpp	/^void QCPScatterStyle::setPixmap(const QPixmap &pixmap)$/;"	f	class:QCPScatterStyle
setPlottingHint	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setPlottingHint(QCP::PlottingHint hint, bool enabled)$/;"	f	class:QCustomPlot
setPlottingHints	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setPlottingHints(const QCP::PlottingHints &hints)$/;"	f	class:QCustomPlot
setPositionAlignment	gui_sources/qcustomplot.cpp	/^void QCPItemText::setPositionAlignment(Qt::Alignment alignment)$/;"	f	class:QCPItemText
setRadialAxis	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::setRadialAxis(QCPPolarAxisRadial *axis)$/;"	f	class:QCPPolarGrid
setRadialPen	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::setRadialPen(const QPen &pen)$/;"	f	class:QCPPolarGrid
setRadialSubGridPen	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::setRadialSubGridPen(const QPen &pen)$/;"	f	class:QCPPolarGrid
setRadialZeroLinePen	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::setRadialZeroLinePen(const QPen &pen)$/;"	f	class:QCPPolarGrid
setRange	gui_sources/qcustomplot.cpp	/^void QCPAxis::setRange(const QCPRange &range)$/;"	f	class:QCPAxis
setRange	gui_sources/qcustomplot.cpp	/^void QCPAxis::setRange(double lower, double upper)$/;"	f	class:QCPAxis
setRange	gui_sources/qcustomplot.cpp	/^void QCPAxis::setRange(double position, double size, Qt::AlignmentFlag alignment)$/;"	f	class:QCPAxis
setRange	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::setRange(const QCPRange &keyRange, const QCPRange &valueRange)$/;"	f	class:QCPColorMapData
setRange	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setRange(const QCPRange &range)$/;"	f	class:QCPPolarAxisAngular
setRange	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setRange(double lower, double upper)$/;"	f	class:QCPPolarAxisAngular
setRange	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setRange(double position, double size, Qt::AlignmentFlag alignment)$/;"	f	class:QCPPolarAxisAngular
setRange	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setRange(const QCPRange &range)$/;"	f	class:QCPPolarAxisRadial
setRange	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setRange(double lower, double upper)$/;"	f	class:QCPPolarAxisRadial
setRange	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setRange(double position, double size, Qt::AlignmentFlag alignment)$/;"	f	class:QCPPolarAxisRadial
setRangeDrag	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setRangeDrag(Qt::Orientations orientations)$/;"	f	class:QCPAxisRect
setRangeDrag	gui_sources/qcustomplot.cpp	/^void QCPColorScale::setRangeDrag(bool enabled)$/;"	f	class:QCPColorScale
setRangeDrag	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setRangeDrag(bool enabled)$/;"	f	class:QCPPolarAxisAngular
setRangeDrag	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setRangeDrag(bool enabled)$/;"	f	class:QCPPolarAxisRadial
setRangeDragAxes	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setRangeDragAxes(QCPAxis *horizontal, QCPAxis *vertical)$/;"	f	class:QCPAxisRect
setRangeDragAxes	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setRangeDragAxes(QList<QCPAxis*> axes)$/;"	f	class:QCPAxisRect
setRangeDragAxes	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setRangeDragAxes(QList<QCPAxis*> horizontal, QList<QCPAxis*> vertical)$/;"	f	class:QCPAxisRect
setRangeLower	gui_sources/qcustomplot.cpp	/^void QCPAxis::setRangeLower(double lower)$/;"	f	class:QCPAxis
setRangeLower	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setRangeLower(double lower)$/;"	f	class:QCPPolarAxisAngular
setRangeLower	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setRangeLower(double lower)$/;"	f	class:QCPPolarAxisRadial
setRangeReversed	gui_sources/qcustomplot.cpp	/^void QCPAxis::setRangeReversed(bool reversed)$/;"	f	class:QCPAxis
setRangeReversed	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setRangeReversed(bool reversed)$/;"	f	class:QCPPolarAxisAngular
setRangeReversed	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setRangeReversed(bool reversed)$/;"	f	class:QCPPolarAxisRadial
setRangeUpper	gui_sources/qcustomplot.cpp	/^void QCPAxis::setRangeUpper(double upper)$/;"	f	class:QCPAxis
setRangeUpper	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setRangeUpper(double upper)$/;"	f	class:QCPPolarAxisAngular
setRangeUpper	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setRangeUpper(double upper)$/;"	f	class:QCPPolarAxisRadial
setRangeZoom	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setRangeZoom(Qt::Orientations orientations)$/;"	f	class:QCPAxisRect
setRangeZoom	gui_sources/qcustomplot.cpp	/^void QCPColorScale::setRangeZoom(bool enabled)$/;"	f	class:QCPColorScale
setRangeZoom	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setRangeZoom(bool enabled)$/;"	f	class:QCPPolarAxisAngular
setRangeZoom	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setRangeZoom(bool enabled)$/;"	f	class:QCPPolarAxisRadial
setRangeZoomAxes	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setRangeZoomAxes(QCPAxis *horizontal, QCPAxis *vertical)$/;"	f	class:QCPAxisRect
setRangeZoomAxes	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setRangeZoomAxes(QList<QCPAxis*> axes)$/;"	f	class:QCPAxisRect
setRangeZoomAxes	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setRangeZoomAxes(QList<QCPAxis*> horizontal, QList<QCPAxis*> vertical)$/;"	f	class:QCPAxisRect
setRangeZoomFactor	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setRangeZoomFactor(double factor)$/;"	f	class:QCPAxisRect
setRangeZoomFactor	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setRangeZoomFactor(double horizontalFactor, double verticalFactor)$/;"	f	class:QCPAxisRect
setRangeZoomFactor	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setRangeZoomFactor(double factor)$/;"	f	class:QCPPolarAxisAngular
setRangeZoomFactor	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setRangeZoomFactor(double factor)$/;"	f	class:QCPPolarAxisRadial
setRotation	gui_sources/qcustomplot.cpp	/^void QCPItemText::setRotation(double degrees)$/;"	f	class:QCPItemText
setRotation	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::setRotation(double rotation)$/;"	f	class:QCPLabelPainterPrivate
setRowSpacing	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::setRowSpacing(int pixels)$/;"	f	class:QCPLayoutGrid
setRowStretchFactor	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::setRowStretchFactor(int row, double factor)$/;"	f	class:QCPLayoutGrid
setRowStretchFactors	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::setRowStretchFactors(const QList<double> &factors)$/;"	f	class:QCPLayoutGrid
setScaleRatio	gui_sources/qcustomplot.cpp	/^void QCPAxis::setScaleRatio(const QCPAxis *otherAxis, double ratio)$/;"	f	class:QCPAxis
setScaleStrategy	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerFixed::setScaleStrategy(QCPAxisTickerFixed::ScaleStrategy strategy)$/;"	f	class:QCPAxisTickerFixed
setScaleType	gui_sources/qcustomplot.cpp	/^void QCPAxis::setScaleType(QCPAxis::ScaleType type)$/;"	f	class:QCPAxis
setScaleType	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setScaleType(QCPPolarAxisRadial::ScaleType type)$/;"	f	class:QCPPolarAxisRadial
setScaled	gui_sources/qcustomplot.cpp	/^void QCPItemPixmap::setScaled(bool scaled, Qt::AspectRatioMode aspectRatioMode, Qt::TransformationMode transformationMode)$/;"	f	class:QCPItemPixmap
setScatterSkip	gui_sources/qcustomplot.cpp	/^void QCPCurve::setScatterSkip(int skip)$/;"	f	class:QCPCurve
setScatterSkip	gui_sources/qcustomplot.cpp	/^void QCPGraph::setScatterSkip(int skip)$/;"	f	class:QCPGraph
setScatterStyle	gui_sources/qcustomplot.cpp	/^void QCPCurve::setScatterStyle(const QCPScatterStyle &style)$/;"	f	class:QCPCurve
setScatterStyle	gui_sources/qcustomplot.cpp	/^void QCPGraph::setScatterStyle(const QCPScatterStyle &style)$/;"	f	class:QCPGraph
setScatterStyle	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setScatterStyle(const QCPScatterStyle &style)$/;"	f	class:QCPPolarGraph
setScatterStyle	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecorator::setScatterStyle(const QCPScatterStyle &scatterStyle, QCPScatterStyle::ScatterProperties usedProperties)$/;"	f	class:QCPSelectionDecorator
setSelectable	gui_sources/qcustomplot.cpp	/^void QCPAbstractItem::setSelectable(bool selectable)$/;"	f	class:QCPAbstractItem
setSelectable	gui_sources/qcustomplot.cpp	/^void QCPAbstractLegendItem::setSelectable(bool selectable)$/;"	f	class:QCPAbstractLegendItem
setSelectable	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::setSelectable(QCP::SelectionType selectable)$/;"	f	class:QCPAbstractPlottable
setSelectable	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setSelectable(QCP::SelectionType selectable)$/;"	f	class:QCPPolarGraph
setSelectable	gui_sources/qcustomplot.cpp	/^void QCPTextElement::setSelectable(bool selectable)$/;"	f	class:QCPTextElement
setSelectableParts	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSelectableParts(const SelectableParts &selectable)$/;"	f	class:QCPAxis
setSelectableParts	gui_sources/qcustomplot.cpp	/^void QCPLegend::setSelectableParts(const SelectableParts &selectable)$/;"	f	class:QCPLegend
setSelectableParts	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSelectableParts(const SelectableParts &selectable)$/;"	f	class:QCPPolarAxisAngular
setSelectableParts	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSelectableParts(const SelectableParts &selectable)$/;"	f	class:QCPPolarAxisRadial
setSelected	gui_sources/qcustomplot.cpp	/^void QCPAbstractItem::setSelected(bool selected)$/;"	f	class:QCPAbstractItem
setSelected	gui_sources/qcustomplot.cpp	/^void QCPAbstractLegendItem::setSelected(bool selected)$/;"	f	class:QCPAbstractLegendItem
setSelected	gui_sources/qcustomplot.cpp	/^void QCPTextElement::setSelected(bool selected)$/;"	f	class:QCPTextElement
setSelectedBasePen	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSelectedBasePen(const QPen &pen)$/;"	f	class:QCPAxis
setSelectedBasePen	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSelectedBasePen(const QPen &pen)$/;"	f	class:QCPPolarAxisAngular
setSelectedBasePen	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSelectedBasePen(const QPen &pen)$/;"	f	class:QCPPolarAxisRadial
setSelectedBorderPen	gui_sources/qcustomplot.cpp	/^void QCPLegend::setSelectedBorderPen(const QPen &pen)$/;"	f	class:QCPLegend
setSelectedBrush	gui_sources/qcustomplot.cpp	/^void QCPItemEllipse::setSelectedBrush(const QBrush &brush)$/;"	f	class:QCPItemEllipse
setSelectedBrush	gui_sources/qcustomplot.cpp	/^void QCPItemRect::setSelectedBrush(const QBrush &brush)$/;"	f	class:QCPItemRect
setSelectedBrush	gui_sources/qcustomplot.cpp	/^void QCPItemText::setSelectedBrush(const QBrush &brush)$/;"	f	class:QCPItemText
setSelectedBrush	gui_sources/qcustomplot.cpp	/^void QCPItemTracer::setSelectedBrush(const QBrush &brush)$/;"	f	class:QCPItemTracer
setSelectedBrush	gui_sources/qcustomplot.cpp	/^void QCPLegend::setSelectedBrush(const QBrush &brush)$/;"	f	class:QCPLegend
setSelectedColor	gui_sources/qcustomplot.cpp	/^void QCPItemText::setSelectedColor(const QColor &color)$/;"	f	class:QCPItemText
setSelectedFont	gui_sources/qcustomplot.cpp	/^void QCPAbstractLegendItem::setSelectedFont(const QFont &font)$/;"	f	class:QCPAbstractLegendItem
setSelectedFont	gui_sources/qcustomplot.cpp	/^void QCPItemText::setSelectedFont(const QFont &font)$/;"	f	class:QCPItemText
setSelectedFont	gui_sources/qcustomplot.cpp	/^void QCPLegend::setSelectedFont(const QFont &font)$/;"	f	class:QCPLegend
setSelectedFont	gui_sources/qcustomplot.cpp	/^void QCPTextElement::setSelectedFont(const QFont &font)$/;"	f	class:QCPTextElement
setSelectedIconBorderPen	gui_sources/qcustomplot.cpp	/^void QCPLegend::setSelectedIconBorderPen(const QPen &pen)$/;"	f	class:QCPLegend
setSelectedLabelColor	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSelectedLabelColor(const QColor &color)$/;"	f	class:QCPAxis
setSelectedLabelColor	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSelectedLabelColor(const QColor &color)$/;"	f	class:QCPPolarAxisAngular
setSelectedLabelColor	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSelectedLabelColor(const QColor &color)$/;"	f	class:QCPPolarAxisRadial
setSelectedLabelFont	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSelectedLabelFont(const QFont &font)$/;"	f	class:QCPAxis
setSelectedLabelFont	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSelectedLabelFont(const QFont &font)$/;"	f	class:QCPPolarAxisAngular
setSelectedLabelFont	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSelectedLabelFont(const QFont &font)$/;"	f	class:QCPPolarAxisRadial
setSelectedParts	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSelectedParts(const SelectableParts &selected)$/;"	f	class:QCPAxis
setSelectedParts	gui_sources/qcustomplot.cpp	/^void QCPLegend::setSelectedParts(const SelectableParts &selected)$/;"	f	class:QCPLegend
setSelectedParts	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSelectedParts(const SelectableParts &selected)$/;"	f	class:QCPPolarAxisAngular
setSelectedParts	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSelectedParts(const SelectableParts &selected)$/;"	f	class:QCPPolarAxisRadial
setSelectedPen	gui_sources/qcustomplot.cpp	/^void QCPItemBracket::setSelectedPen(const QPen &pen)$/;"	f	class:QCPItemBracket
setSelectedPen	gui_sources/qcustomplot.cpp	/^void QCPItemCurve::setSelectedPen(const QPen &pen)$/;"	f	class:QCPItemCurve
setSelectedPen	gui_sources/qcustomplot.cpp	/^void QCPItemEllipse::setSelectedPen(const QPen &pen)$/;"	f	class:QCPItemEllipse
setSelectedPen	gui_sources/qcustomplot.cpp	/^void QCPItemLine::setSelectedPen(const QPen &pen)$/;"	f	class:QCPItemLine
setSelectedPen	gui_sources/qcustomplot.cpp	/^void QCPItemPixmap::setSelectedPen(const QPen &pen)$/;"	f	class:QCPItemPixmap
setSelectedPen	gui_sources/qcustomplot.cpp	/^void QCPItemRect::setSelectedPen(const QPen &pen)$/;"	f	class:QCPItemRect
setSelectedPen	gui_sources/qcustomplot.cpp	/^void QCPItemStraightLine::setSelectedPen(const QPen &pen)$/;"	f	class:QCPItemStraightLine
setSelectedPen	gui_sources/qcustomplot.cpp	/^void QCPItemText::setSelectedPen(const QPen &pen)$/;"	f	class:QCPItemText
setSelectedPen	gui_sources/qcustomplot.cpp	/^void QCPItemTracer::setSelectedPen(const QPen &pen)$/;"	f	class:QCPItemTracer
setSelectedSubTickPen	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSelectedSubTickPen(const QPen &pen)$/;"	f	class:QCPAxis
setSelectedSubTickPen	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSelectedSubTickPen(const QPen &pen)$/;"	f	class:QCPPolarAxisAngular
setSelectedSubTickPen	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSelectedSubTickPen(const QPen &pen)$/;"	f	class:QCPPolarAxisRadial
setSelectedTextColor	gui_sources/qcustomplot.cpp	/^void QCPAbstractLegendItem::setSelectedTextColor(const QColor &color)$/;"	f	class:QCPAbstractLegendItem
setSelectedTextColor	gui_sources/qcustomplot.cpp	/^void QCPLegend::setSelectedTextColor(const QColor &color)$/;"	f	class:QCPLegend
setSelectedTextColor	gui_sources/qcustomplot.cpp	/^void QCPTextElement::setSelectedTextColor(const QColor &color)$/;"	f	class:QCPTextElement
setSelectedTickLabelColor	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSelectedTickLabelColor(const QColor &color)$/;"	f	class:QCPAxis
setSelectedTickLabelColor	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSelectedTickLabelColor(const QColor &color)$/;"	f	class:QCPPolarAxisAngular
setSelectedTickLabelColor	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSelectedTickLabelColor(const QColor &color)$/;"	f	class:QCPPolarAxisRadial
setSelectedTickLabelFont	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSelectedTickLabelFont(const QFont &font)$/;"	f	class:QCPAxis
setSelectedTickLabelFont	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSelectedTickLabelFont(const QFont &font)$/;"	f	class:QCPPolarAxisAngular
setSelectedTickLabelFont	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSelectedTickLabelFont(const QFont &font)$/;"	f	class:QCPPolarAxisRadial
setSelectedTickPen	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSelectedTickPen(const QPen &pen)$/;"	f	class:QCPAxis
setSelectedTickPen	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSelectedTickPen(const QPen &pen)$/;"	f	class:QCPPolarAxisAngular
setSelectedTickPen	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSelectedTickPen(const QPen &pen)$/;"	f	class:QCPPolarAxisRadial
setSelection	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::setSelection(QCPDataSelection selection)$/;"	f	class:QCPAbstractPlottable
setSelection	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setSelection(QCPDataSelection selection)$/;"	f	class:QCPPolarGraph
setSelectionDecorator	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::setSelectionDecorator(QCPSelectionDecorator *decorator)$/;"	f	class:QCPAbstractPlottable
setSelectionRect	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setSelectionRect(QCPSelectionRect *selectionRect)$/;"	f	class:QCustomPlot
setSelectionRectMode	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setSelectionRectMode(QCP::SelectionRectMode mode)$/;"	f	class:QCustomPlot
setSelectionTolerance	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setSelectionTolerance(int pixels)$/;"	f	class:QCustomPlot
setShape	gui_sources/qcustomplot.cpp	/^void QCPScatterStyle::setShape(QCPScatterStyle::ScatterShape shape)$/;"	f	class:QCPScatterStyle
setSize	gui_sources/qcustomplot.cpp	/^void QCPAbstractPaintBuffer::setSize(const QSize &size)$/;"	f	class:QCPAbstractPaintBuffer
setSize	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::setSize(int keySize, int valueSize)$/;"	f	class:QCPColorMapData
setSize	gui_sources/qcustomplot.cpp	/^void QCPItemTracer::setSize(double size)$/;"	f	class:QCPItemTracer
setSize	gui_sources/qcustomplot.cpp	/^void QCPScatterStyle::setSize(double size)$/;"	f	class:QCPScatterStyle
setSizeConstraintRect	gui_sources/qcustomplot.cpp	/^void QCPLayoutElement::setSizeConstraintRect(SizeConstraintRect constraintRect)$/;"	f	class:QCPLayoutElement
setSpacing	gui_sources/qcustomplot.cpp	/^void QCPBarsGroup::setSpacing(double spacing)$/;"	f	class:QCPBarsGroup
setSpacingType	gui_sources/qcustomplot.cpp	/^void QCPBarsGroup::setSpacingType(SpacingType spacingType)$/;"	f	class:QCPBarsGroup
setStackingGap	gui_sources/qcustomplot.cpp	/^void QCPBars::setStackingGap(double pixels)$/;"	f	class:QCPBars
setStyle	gui_sources/qcustomplot.cpp	/^void QCPItemBracket::setStyle(QCPItemBracket::BracketStyle style)$/;"	f	class:QCPItemBracket
setStyle	gui_sources/qcustomplot.cpp	/^void QCPItemTracer::setStyle(QCPItemTracer::TracerStyle style)$/;"	f	class:QCPItemTracer
setStyle	gui_sources/qcustomplot.cpp	/^void QCPLineEnding::setStyle(QCPLineEnding::EndingStyle style)$/;"	f	class:QCPLineEnding
setSubGridPen	gui_sources/qcustomplot.cpp	/^void QCPGrid::setSubGridPen(const QPen &pen)$/;"	f	class:QCPGrid
setSubGridType	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::setSubGridType(GridTypes type)$/;"	f	class:QCPPolarGrid
setSubGridVisible	gui_sources/qcustomplot.cpp	/^void QCPGrid::setSubGridVisible(bool visible)$/;"	f	class:QCPGrid
setSubTickCount	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerLog::setSubTickCount(int subTicks)$/;"	f	class:QCPAxisTickerLog
setSubTickCount	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerText::setSubTickCount(int subTicks)$/;"	f	class:QCPAxisTickerText
setSubTickLength	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSubTickLength(int inside, int outside)$/;"	f	class:QCPAxis
setSubTickLength	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSubTickLength(int inside, int outside)$/;"	f	class:QCPPolarAxisAngular
setSubTickLength	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSubTickLength(int inside, int outside)$/;"	f	class:QCPPolarAxisRadial
setSubTickLengthIn	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSubTickLengthIn(int inside)$/;"	f	class:QCPAxis
setSubTickLengthIn	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSubTickLengthIn(int inside)$/;"	f	class:QCPPolarAxisAngular
setSubTickLengthIn	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSubTickLengthIn(int inside)$/;"	f	class:QCPPolarAxisRadial
setSubTickLengthOut	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSubTickLengthOut(int outside)$/;"	f	class:QCPAxis
setSubTickLengthOut	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSubTickLengthOut(int outside)$/;"	f	class:QCPPolarAxisAngular
setSubTickLengthOut	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSubTickLengthOut(int outside)$/;"	f	class:QCPPolarAxisRadial
setSubTickPen	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSubTickPen(const QPen &pen)$/;"	f	class:QCPAxis
setSubTickPen	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSubTickPen(const QPen &pen)$/;"	f	class:QCPPolarAxisAngular
setSubTickPen	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSubTickPen(const QPen &pen)$/;"	f	class:QCPPolarAxisRadial
setSubTicks	gui_sources/qcustomplot.cpp	/^void QCPAxis::setSubTicks(bool show)$/;"	f	class:QCPAxis
setSubTicks	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setSubTicks(bool show)$/;"	f	class:QCPPolarAxisAngular
setSubTicks	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setSubTicks(bool show)$/;"	f	class:QCPPolarAxisRadial
setSubstituteExponent	gui_sources/qcustomplot.cpp	/^void QCPLabelPainterPrivate::setSubstituteExponent(bool enabled)$/;"	f	class:QCPLabelPainterPrivate
setSymbolGap	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::setSymbolGap(double pixels)$/;"	f	class:QCPErrorBars
setTail	gui_sources/qcustomplot.cpp	/^void QCPItemCurve::setTail(const QCPLineEnding &tail)$/;"	f	class:QCPItemCurve
setTail	gui_sources/qcustomplot.cpp	/^void QCPItemLine::setTail(const QCPLineEnding &tail)$/;"	f	class:QCPItemLine
setTangentAverage	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecoratorBracket::setTangentAverage(int pointCount)$/;"	f	class:QCPSelectionDecoratorBracket
setTangentToData	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecoratorBracket::setTangentToData(bool enabled)$/;"	f	class:QCPSelectionDecoratorBracket
setText	gui_sources/qcustomplot.cpp	/^void QCPItemText::setText(const QString &text)$/;"	f	class:QCPItemText
setText	gui_sources/qcustomplot.cpp	/^void QCPTextElement::setText(const QString &text)$/;"	f	class:QCPTextElement
setTextAlignment	gui_sources/qcustomplot.cpp	/^void QCPItemText::setTextAlignment(Qt::Alignment alignment)$/;"	f	class:QCPItemText
setTextColor	gui_sources/qcustomplot.cpp	/^void QCPAbstractLegendItem::setTextColor(const QColor &color)$/;"	f	class:QCPAbstractLegendItem
setTextColor	gui_sources/qcustomplot.cpp	/^void QCPLegend::setTextColor(const QColor &color)$/;"	f	class:QCPLegend
setTextColor	gui_sources/qcustomplot.cpp	/^void QCPTextElement::setTextColor(const QColor &color)$/;"	f	class:QCPTextElement
setTextFlags	gui_sources/qcustomplot.cpp	/^void QCPTextElement::setTextFlags(int flags)$/;"	f	class:QCPTextElement
setTickCount	gui_sources/qcustomplot.cpp	/^void QCPAxisTicker::setTickCount(int count)$/;"	f	class:QCPAxisTicker
setTickLabelColor	gui_sources/qcustomplot.cpp	/^void QCPAxis::setTickLabelColor(const QColor &color)$/;"	f	class:QCPAxis
setTickLabelColor	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setTickLabelColor(const QColor &color)$/;"	f	class:QCPPolarAxisAngular
setTickLabelColor	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setTickLabelColor(const QColor &color)$/;"	f	class:QCPPolarAxisRadial
setTickLabelFont	gui_sources/qcustomplot.cpp	/^void QCPAxis::setTickLabelFont(const QFont &font)$/;"	f	class:QCPAxis
setTickLabelFont	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setTickLabelFont(const QFont &font)$/;"	f	class:QCPPolarAxisAngular
setTickLabelFont	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setTickLabelFont(const QFont &font)$/;"	f	class:QCPPolarAxisRadial
setTickLabelMode	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setTickLabelMode(LabelMode mode)$/;"	f	class:QCPPolarAxisAngular
setTickLabelMode	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setTickLabelMode(LabelMode mode)$/;"	f	class:QCPPolarAxisRadial
setTickLabelPadding	gui_sources/qcustomplot.cpp	/^void QCPAxis::setTickLabelPadding(int padding)$/;"	f	class:QCPAxis
setTickLabelPadding	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setTickLabelPadding(int padding)$/;"	f	class:QCPPolarAxisAngular
setTickLabelPadding	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setTickLabelPadding(int padding)$/;"	f	class:QCPPolarAxisRadial
setTickLabelRotation	gui_sources/qcustomplot.cpp	/^void QCPAxis::setTickLabelRotation(double degrees)$/;"	f	class:QCPAxis
setTickLabelRotation	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setTickLabelRotation(double degrees)$/;"	f	class:QCPPolarAxisAngular
setTickLabelRotation	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setTickLabelRotation(double degrees)$/;"	f	class:QCPPolarAxisRadial
setTickLabelSide	gui_sources/qcustomplot.cpp	/^void QCPAxis::setTickLabelSide(LabelSide side)$/;"	f	class:QCPAxis
setTickLabels	gui_sources/qcustomplot.cpp	/^void QCPAxis::setTickLabels(bool show)$/;"	f	class:QCPAxis
setTickLabels	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setTickLabels(bool show)$/;"	f	class:QCPPolarAxisAngular
setTickLabels	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setTickLabels(bool show)$/;"	f	class:QCPPolarAxisRadial
setTickLength	gui_sources/qcustomplot.cpp	/^void QCPAxis::setTickLength(int inside, int outside)$/;"	f	class:QCPAxis
setTickLength	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setTickLength(int inside, int outside)$/;"	f	class:QCPPolarAxisAngular
setTickLength	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setTickLength(int inside, int outside)$/;"	f	class:QCPPolarAxisRadial
setTickLengthIn	gui_sources/qcustomplot.cpp	/^void QCPAxis::setTickLengthIn(int inside)$/;"	f	class:QCPAxis
setTickLengthIn	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setTickLengthIn(int inside)$/;"	f	class:QCPPolarAxisAngular
setTickLengthIn	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setTickLengthIn(int inside)$/;"	f	class:QCPPolarAxisRadial
setTickLengthOut	gui_sources/qcustomplot.cpp	/^void QCPAxis::setTickLengthOut(int outside)$/;"	f	class:QCPAxis
setTickLengthOut	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setTickLengthOut(int outside)$/;"	f	class:QCPPolarAxisAngular
setTickLengthOut	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setTickLengthOut(int outside)$/;"	f	class:QCPPolarAxisRadial
setTickOrigin	gui_sources/qcustomplot.cpp	/^void QCPAxisTicker::setTickOrigin(double origin)$/;"	f	class:QCPAxisTicker
setTickOrigin	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerDateTime::setTickOrigin(const QDateTime &origin)$/;"	f	class:QCPAxisTickerDateTime
setTickOrigin	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerDateTime::setTickOrigin(double origin)$/;"	f	class:QCPAxisTickerDateTime
setTickPen	gui_sources/qcustomplot.cpp	/^void QCPAxis::setTickPen(const QPen &pen)$/;"	f	class:QCPAxis
setTickPen	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setTickPen(const QPen &pen)$/;"	f	class:QCPPolarAxisAngular
setTickPen	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setTickPen(const QPen &pen)$/;"	f	class:QCPPolarAxisRadial
setTickStep	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerFixed::setTickStep(double step)$/;"	f	class:QCPAxisTickerFixed
setTickStepStrategy	gui_sources/qcustomplot.cpp	/^void QCPAxisTicker::setTickStepStrategy(QCPAxisTicker::TickStepStrategy strategy)$/;"	f	class:QCPAxisTicker
setTicker	gui_sources/qcustomplot.cpp	/^void QCPAxis::setTicker(QSharedPointer<QCPAxisTicker> ticker)$/;"	f	class:QCPAxis
setTicker	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setTicker(QSharedPointer<QCPAxisTicker> ticker)$/;"	f	class:QCPPolarAxisAngular
setTicker	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setTicker(QSharedPointer<QCPAxisTicker> ticker)$/;"	f	class:QCPPolarAxisRadial
setTicks	gui_sources/qcustomplot.cpp	/^void QCPAxis::setTicks(bool show)$/;"	f	class:QCPAxis
setTicks	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerText::setTicks(const QMap<double, QString> &ticks)$/;"	f	class:QCPAxisTickerText
setTicks	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerText::setTicks(const QVector<double> &positions, const QVector<QString> &labels)$/;"	f	class:QCPAxisTickerText
setTicks	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setTicks(bool show)$/;"	f	class:QCPPolarAxisAngular
setTicks	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setTicks(bool show)$/;"	f	class:QCPPolarAxisRadial
setTightBoundary	gui_sources/qcustomplot.cpp	/^void QCPColorMap::setTightBoundary(bool enabled)$/;"	f	class:QCPColorMap
setTimeFormat	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerTime::setTimeFormat(const QString &format)$/;"	f	class:QCPAxisTickerTime
setTimeZone	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerDateTime::setTimeZone(const QTimeZone &zone)$/;"	f	class:QCPAxisTickerDateTime
setToNull	DEVICES/device_rotary_interface.h	/^void DeviceRotaryInterface<T_CONNECTION,T_COMMAND,T_MESSAGE>::setToNull() $/;"	f	class:DeviceRotaryInterface
setTwoColored	gui_sources/qcustomplot.cpp	/^void QCPFinancial::setTwoColored(bool twoColored)$/;"	f	class:QCPFinancial
setType	gui_sources/qcustomplot.cpp	/^void QCPColorScale::setType(QCPAxis::AxisType type)$/;"	f	class:QCPColorScale
setType	gui_sources/qcustomplot.cpp	/^void QCPItemPosition::setType(QCPItemPosition::PositionType type)$/;"	f	class:QCPItemPosition
setType	gui_sources/qcustomplot.cpp	/^void QCPPolarGrid::setType(GridTypes type)$/;"	f	class:QCPPolarGrid
setTypeX	gui_sources/qcustomplot.cpp	/^void QCPItemPosition::setTypeX(QCPItemPosition::PositionType type)$/;"	f	class:QCPItemPosition
setTypeY	gui_sources/qcustomplot.cpp	/^void QCPItemPosition::setTypeY(QCPItemPosition::PositionType type)$/;"	f	class:QCPItemPosition
setUpperEnding	gui_sources/qcustomplot.cpp	/^void QCPAxis::setUpperEnding(const QCPLineEnding &ending)$/;"	f	class:QCPAxis
setUsedScatterProperties	gui_sources/qcustomplot.cpp	/^void QCPSelectionDecorator::setUsedScatterProperties(const QCPScatterStyle::ScatterProperties &properties)$/;"	f	class:QCPSelectionDecorator
setValueAxis	gui_sources/qcustomplot.cpp	/^void QCPAbstractPlottable::setValueAxis(QCPAxis *axis)$/;"	f	class:QCPAbstractPlottable
setValueAxis	gui_sources/qcustomplot.cpp	/^void QCPPolarGraph::setValueAxis(QCPPolarAxisRadial *axis)$/;"	f	class:QCPPolarGraph
setValueRange	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::setValueRange(const QCPRange &valueRange)$/;"	f	class:QCPColorMapData
setValueSize	gui_sources/qcustomplot.cpp	/^void QCPColorMapData::setValueSize(int valueSize)$/;"	f	class:QCPColorMapData
setViewport	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setViewport(const QRect &rect)$/;"	f	class:QCustomPlot
setVisible	gui_sources/qcustomplot.cpp	/^void QCPLayer::setVisible(bool visible)$/;"	f	class:QCPLayer
setVisible	gui_sources/qcustomplot.cpp	/^void QCPLayerable::setVisible(bool on)$/;"	f	class:QCPLayerable
setWhiskerAntialiased	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::setWhiskerAntialiased(bool enabled)$/;"	f	class:QCPStatisticalBox
setWhiskerBarPen	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::setWhiskerBarPen(const QPen &pen)$/;"	f	class:QCPStatisticalBox
setWhiskerPen	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::setWhiskerPen(const QPen &pen)$/;"	f	class:QCPStatisticalBox
setWhiskerWidth	gui_sources/qcustomplot.cpp	/^void QCPErrorBars::setWhiskerWidth(double pixels)$/;"	f	class:QCPErrorBars
setWhiskerWidth	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::setWhiskerWidth(double width)$/;"	f	class:QCPStatisticalBox
setWidget	gui_sources/widget_scene_node_interface.cpp	/^void WidgetSceneNodeInterface::setWidget(QWidget *widget)$/;"	f	class:WidgetSceneNodeInterface
setWidth	gui_sources/qcustomplot.cpp	/^void QCPBars::setWidth(double width)$/;"	f	class:QCPBars
setWidth	gui_sources/qcustomplot.cpp	/^void QCPFinancial::setWidth(double width)$/;"	f	class:QCPFinancial
setWidth	gui_sources/qcustomplot.cpp	/^void QCPLineEnding::setWidth(double width)$/;"	f	class:QCPLineEnding
setWidth	gui_sources/qcustomplot.cpp	/^void QCPStatisticalBox::setWidth(double width)$/;"	f	class:QCPStatisticalBox
setWidthType	gui_sources/qcustomplot.cpp	/^void QCPBars::setWidthType(QCPBars::WidthType widthType)$/;"	f	class:QCPBars
setWidthType	gui_sources/qcustomplot.cpp	/^void QCPFinancial::setWidthType(QCPFinancial::WidthType widthType)$/;"	f	class:QCPFinancial
setWrap	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::setWrap(int count)$/;"	f	class:QCPLayoutGrid
setX	gui_sources/qcustomplot.h	/^  void setX(double x) { mX = x; }$/;"	f	class:QCPVector2D
setY	gui_sources/qcustomplot.h	/^  void setY(double y) { mY = y; }$/;"	f	class:QCPVector2D
setZeroLinePen	gui_sources/qcustomplot.cpp	/^void QCPGrid::setZeroLinePen(const QPen &pen)$/;"	f	class:QCPGrid
setenableWidget	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::setenableWidget(int Number, bool enable) { ModuleWidgets[Number]->SetWidgetActive(enable); }$/;"	f	class:WidgetMainWindow
setenableWidgets	gui_sources/widget_main_window.cpp	/^void WidgetMainWindow::setenableWidgets(QVector<int> Numbers, bool enable) { for(auto number: Numbers) setenableWidget(number, enable); }$/;"	f	class:WidgetMainWindow
settings	UTILITES/register_settings.cpp	/^std::map<QString,QString>                SettingsRegister::settings;$/;"	m	class:SettingsRegister	file:
settings	UTILITES/register_settings.h	/^    static std::map<QString,QString>            settings;$/;"	m	class:SettingsRegister
settings_pairs	UTILITES/register_settings.cpp	/^std::map<QString,std::pair<float,float>> SettingsRegister::settings_pairs;$/;"	m	class:SettingsRegister	file:
settings_pairs	UTILITES/register_settings.h	/^    static std::map<QString,std::pair<float,float>> settings_pairs;$/;"	m	class:SettingsRegister
settings_values	UTILITES/register_settings.cpp	/^std::map<QString,float>                  SettingsRegister::settings_values;$/;"	m	class:SettingsRegister	file:
settings_values	UTILITES/register_settings.h	/^    static std::map<QString,float>                settings_values;$/;"	m	class:SettingsRegister
setupFullAxesBox	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::setupFullAxesBox(bool connectRanges)$/;"	f	class:QCPAxisRect
setupOpenGl	gui_sources/qcustomplot.cpp	/^bool QCustomPlot::setupOpenGl()$/;"	f	class:QCustomPlot
setupPaintBuffers	gui_sources/qcustomplot.cpp	/^void QCustomPlot::setupPaintBuffers()$/;"	f	class:QCustomPlot
setupTickVectors	gui_sources/qcustomplot.cpp	/^void QCPAxis::setupTickVectors()$/;"	f	class:QCPAxis
setupTickVectors	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::setupTickVectors()$/;"	f	class:QCPPolarAxisAngular
setupTickVectors	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::setupTickVectors()$/;"	f	class:QCPPolarAxisRadial
setupUi	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    void setupUi(QWidget *WidgetAimingControl)$/;"	f	class:Ui_WidgetAimingControl
setupUi	build/ImageProcProject_autogen/include/ui_widget_camera_control.h	/^    void setupUi(QWidget *WidgetCameraControl)$/;"	f	class:Ui_WidgetCameraControl
setupUi	build/ImageProcProject_autogen/include/ui_widget_container_group.h	/^    void setupUi(QWidget *WidgetContainerGroup)$/;"	f	class:Ui_WidgetContainerGroup
setupUi	build/ImageProcProject_autogen/include/ui_widget_imitator_control.h	/^    void setupUi(QWidget *WidgetImageImitator)$/;"	f	class:Ui_WidgetImageImitator
setupUi	build/ImageProcProject_autogen/include/ui_widget_main_window.h	/^    void setupUi(QMainWindow *WidgetMainWindow)$/;"	f	class:Ui_WidgetMainWindow
setupUi	build/ImageProcProject_autogen/include/ui_widget_output_image_display.h	/^    void setupUi(QWidget *WidgetOutputImageDisplay)$/;"	f	class:Ui_WidgetOutputImageDisplay
setupUi	build/ImageProcProject_autogen/include/ui_widget_output_text_display.h	/^    void setupUi(QWidget *OutputTextDisplay)$/;"	f	class:Ui_OutputTextDisplay
setupUi	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	/^    void setupUi(QWidget *WidgetProcessController)$/;"	f	class:Ui_WidgetProcessController
setupUi	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^    void setupUi(QWidget *WidgetProcessingImageControl)$/;"	f	class:Ui_WidgetProcessingImageControl
setupUi	build/ImageProcProject_autogen/include/ui_widget_processing_image_generic.h	/^    void setupUi(QWidget *WidgetProcessingImage)$/;"	f	class:Ui_WidgetProcessingImage
setupUi	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    void setupUi(QWidget *WidgetSinusSource)$/;"	f	class:Ui_WidgetSinusSource
setupUi	build/ImageProcProject_autogen/include/ui_widget_table_group.h	/^    void setupUi(QWidget *WidgetTableGroup)$/;"	f	class:Ui_WidgetTableGroup
shape	gui_sources/node.cpp	/^QPainterPath Node::shape() const$/;"	f	class:Node
shape	gui_sources/qcustomplot.h	/^  ScatterShape shape() const { return mShape; }$/;"	f	class:QCPScatterStyle
side	gui_sources/qcustomplot.h	/^    AnchorSide side;$/;"	m	struct:QCPLabelPainterPrivate::LabelData
sigma	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float sigma;                 \/\/!<  gaussian kernel bandwidth$/;"	m	struct:cv::tracking::TrackerKCF::Params
signalDeviceConnected	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_tcp_interface.cpp	/^void TCPConnectionEngine::signalDeviceConnected()$/;"	f	class:TCPConnectionEngine
signalMessageAvailable	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^void CANConnectionEngine::signalMessageAvailable()$/;"	f	class:CANConnectionEngine
signalMessageAvailable	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_tcp_interface.cpp	/^void TCPConnectionEngine::signalMessageAvailable()$/;"	f	class:TCPConnectionEngine
signalMessageAvailable	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_udp_interface.cpp	/^void UDPEngineInterface::signalMessageAvailable()$/;"	f	class:UDPEngineInterface
signalNewImage	build/ImageProcProject_autogen/IUOK47BH6O/moc_interface_camera_hik.cpp	/^void CameraInterfaceHIK::signalNewImage()$/;"	f	class:CameraInterfaceHIK
signalNewImage	build/ImageProcProject_autogen/IUOK47BH6O/moc_interface_camera_hik.cpp	/^void CameraInterfaceHIK::signalNewImage(const QImage & _t1)$/;"	f	class:CameraInterfaceHIK
signalNewImage	build/ImageProcProject_autogen/IUOK47BH6O/moc_interface_camera_hik.cpp	/^void CameraInterfaceHIK::signalNewImage(const cv::Mat & _t1)$/;"	f	class:CameraInterfaceHIK
signalNewImage	build/ImageProcProject_autogen/XJUVE5KTRL/moc_interface_image_source.cpp	/^void ImageSourceInterface::signalNewImage()$/;"	f	class:ImageSourceInterface
signalNewImage	build/ImageProcProject_autogen/XJUVE5KTRL/moc_interface_image_source.cpp	/^void ImageSourceInterface::signalNewImage(const QImage & _t1)$/;"	f	class:ImageSourceInterface
signalNewImage	build/ImageProcProject_autogen/XJUVE5KTRL/moc_interface_image_source.cpp	/^void ImageSourceInterface::signalNewImage(const cv::Mat & _t1)$/;"	f	class:ImageSourceInterface
signals	CAMERA_INTERFACE/camera_interface_class.h	16;"	d
signals	CAMERA_INTERFACE/camera_interface_class.h	22;"	d
signals	controller_process_class.cpp	11;"	d	file:
signals	controller_process_class.cpp	9;"	d	file:
simplify	gui_sources/qcustomplot.cpp	/^void QCPDataSelection::simplify()$/;"	f	class:QCPDataSelection
simplify	gui_sources/qcustomplot.cpp	/^void QCPLayout::simplify()$/;"	f	class:QCPLayout
simplify	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::simplify()$/;"	f	class:QCPLayoutGrid
simplifyFraction	gui_sources/qcustomplot.cpp	/^void QCPAxisTickerPi::simplifyFraction(int &numerator, int &denominator) const$/;"	f	class:QCPAxisTickerPi
size	gui_sources/qcustomplot.cpp	/^int QCPAxisPainterPrivate::size()$/;"	f	class:QCPAxisPainterPrivate
size	gui_sources/qcustomplot.h	/^  QSize size() const { return mRect.size(); }$/;"	f	class:QCPAxisRect
size	gui_sources/qcustomplot.h	/^  QSize size() const { return mRect.size(); }$/;"	f	class:QCPPolarAxisAngular
size	gui_sources/qcustomplot.h	/^  QSize size() const { return mSize; }$/;"	f	class:QCPAbstractPaintBuffer
size	gui_sources/qcustomplot.h	/^  double size() const { return mSize; }$/;"	f	class:QCPItemTracer
size	gui_sources/qcustomplot.h	/^  double size() const { return mSize; }$/;"	f	class:QCPScatterStyle
size	gui_sources/qcustomplot.h	/^  double size() const { return upper-lower; }$/;"	f	class:QCPRange
size	gui_sources/qcustomplot.h	/^  int size() const { return mBars.size(); }$/;"	f	class:QCPBarsGroup
size	gui_sources/qcustomplot.h	/^  int size() const { return mData.size()-mPreallocSize; }$/;"	f	class:QCPDataContainer
size	gui_sources/qcustomplot.h	/^  int size() const { return mEnd-mBegin; }$/;"	f	class:QCPDataRange
sizeConstraintRect	gui_sources/qcustomplot.h	/^  SizeConstraintRect sizeConstraintRect() const { return mSizeConstraintRect; }$/;"	f	class:QCPLayoutElement
sizeConstraintsChanged	gui_sources/qcustomplot.cpp	/^void QCPLayout::sizeConstraintsChanged() const$/;"	f	class:QCPLayout
sizeHint	gui_sources/qcustomplot.cpp	/^QSize QCustomPlot::sizeHint() const$/;"	f	class:QCustomPlot
skewedAnchorSide	gui_sources/qcustomplot.cpp	/^QCPLabelPainterPrivate::AnchorSide QCPLabelPainterPrivate::skewedAnchorSide(const QPointF &tickPos, double sideExpandHorz, double sideExpandVert) const$/;"	f	class:QCPLabelPainterPrivate
skipFrames	CAMERA_INTERFACE/camera_interface_class.cpp	/^void CameraInterfaceAravis::skipFrames()$/;"	f	class:CameraInterfaceAravis
skipFrames	CAMERA_INTERFACE/interface_camera_hik.cpp	/^void CameraInterfaceHIK::CameraImageStorage::skipFrames()$/;"	f	class:CameraInterfaceHIK::CameraImageStorage
skipFrames	COMMON/interface_image_source.h	/^    virtual void skipFrames() {};$/;"	f	class:ImageSourceInterface
slotAcceptConnection	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^void TCPConnectionEngine::slotAcceptConnection()$/;"	f	class:TCPConnectionEngine
slotCheckConnection	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.cpp	/^void CANConnectionEngine::slotCheckConnection()$/;"	f	class:CANConnectionEngine
slotCheckConnection	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^void TCPConnectionEngine::slotCheckConnection() { }$/;"	f	class:TCPConnectionEngine
slotCheckConnection	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^void UDPEngineInterface::slotCheckConnection()$/;"	f	class:UDPEngineInterface
slotCloseConnection	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  void slotCloseConnection(){};$/;"	f	class:CANConnectionEngine
slotCloseConnection	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^void TCPConnectionEngine::slotCloseConnection()$/;"	f	class:TCPConnectionEngine
slotCloseConnection	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^void UDPEngineInterface::slotCloseConnection()$/;"	f	class:UDPEngineInterface
slotConnectedToHost	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^void TCPConnectionEngine::slotConnectedToHost()$/;"	f	class:TCPConnectionEngine
slotConnectionAttempt	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^void TCPConnectionEngine::slotConnectionAttempt()$/;"	f	class:TCPConnectionEngine
slotMessageReceived	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  void slotMessageReceived()$/;"	f	class:CANDelayMeasure
slotMove	DEVICES/device_rotary_interface.h	/^  void slotMove() { Device->moveOnStep(Device->getVelocity()); }$/;"	f	class:DynamicModule
slotReadData	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.cpp	/^void CANConnectionEngine::slotReadData()$/;"	f	class:CANConnectionEngine
slotReadData	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^void TCPConnectionEngine::slotReadData()$/;"	f	class:TCPConnectionEngine
slotReadData	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^void UDPEngineInterface::slotReadData()$/;"	f	class:UDPEngineInterface
slotSendMessage	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.cpp	/^void CANConnectionEngine::slotSendMessage(const QByteArray& message, uint8_t IDDevice)$/;"	f	class:CANConnectionEngine
slotSendMessage	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.cpp	/^void CANConnectionEngine::slotSendMessage(const char* DataCommand, int size, uint8_t IDDevice)$/;"	f	class:CANConnectionEngine
slotSendMessage	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^void TCPConnectionEngine::slotSendMessage(const QByteArray& Command, uint8_t Param)$/;"	f	class:TCPConnectionEngine
slotSendMessage	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^void TCPConnectionEngine::slotSendMessage(const char* DataCommand, int size, uint8_t Param)$/;"	f	class:TCPConnectionEngine
slotSendMessage	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^void UDPEngineInterface::slotSendMessage(const QByteArray& ArrayCommand, uint8_t Param)$/;"	f	class:UDPEngineInterface
slotSendMessage	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^void UDPEngineInterface::slotSendMessage(const char* DataCommand, int size, uint8_t Param)$/;"	f	class:UDPEngineInterface
slotSendTest	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  virtual void slotSendTest(){ deviceCAN->slotSendMessage(message, TypeRegister<CommandSetPosScanator>::GetTypeID()); }$/;"	f	class:CANTestMessage
slotStartSendTest	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  void slotStartSendTest(bool OnOff) {if(deviceCAN == nullptr) return; if(OnOff) timerSendTest.start(1000); else timerSendTest.stop(); }$/;"	f	class:CANTestMessage
slots	PYTORCH_PROCESSING/TorchProcessing.h	2;"	d
slots	PYTORCH_PROCESSING/TorchProcessing.h	4;"	d
slots	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	10;"	d
slots	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	8;"	d
sort	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::sort()$/;"	f	class:QCPDataContainer
sortKey	gui_sources/qcustomplot.h	/^  inline double sortKey() const { return key; }$/;"	f	class:QCPBarsData
sortKey	gui_sources/qcustomplot.h	/^  inline double sortKey() const { return key; }$/;"	f	class:QCPFinancialData
sortKey	gui_sources/qcustomplot.h	/^  inline double sortKey() const { return key; }$/;"	f	class:QCPGraphData
sortKey	gui_sources/qcustomplot.h	/^  inline double sortKey() const { return key; }$/;"	f	class:QCPStatisticalBoxData
sortKey	gui_sources/qcustomplot.h	/^  inline double sortKey() const { return t; }$/;"	f	class:QCPCurveData
sortKeyIsMainKey	gui_sources/qcustomplot.cpp	/^bool QCPErrorBars::sortKeyIsMainKey() const$/;"	f	class:QCPErrorBars
sortKeyIsMainKey	gui_sources/qcustomplot.h	/^  inline static bool sortKeyIsMainKey() { return false; }$/;"	f	class:QCPCurveData
sortKeyIsMainKey	gui_sources/qcustomplot.h	/^  inline static bool sortKeyIsMainKey() { return true; } $/;"	f	class:QCPBarsData
sortKeyIsMainKey	gui_sources/qcustomplot.h	/^  inline static bool sortKeyIsMainKey() { return true; } $/;"	f	class:QCPFinancialData
sortKeyIsMainKey	gui_sources/qcustomplot.h	/^  inline static bool sortKeyIsMainKey() { return true; }$/;"	f	class:QCPGraphData
sortKeyIsMainKey	gui_sources/qcustomplot.h	/^  inline static bool sortKeyIsMainKey() { return true; }$/;"	f	class:QCPStatisticalBoxData
sortKeyIsMainKey	gui_sources/qcustomplot.h	/^bool QCPAbstractPlottable1D<DataType>::sortKeyIsMainKey() const$/;"	f	class:QCPAbstractPlottable1D
source	gui_sources/link_line.h	/^    WidgetSceneNodeInterface* source;$/;"	m	class:LinkLine
sourcePoint	gui_sources/link_line.h	/^    QPointF sourcePoint;$/;"	m	class:LinkLine
sourcePort	gui_sources/link_line.h	/^    Node* sourcePort;$/;"	m	class:LinkLine
sourcePortNode	gui_sources/link_line.cpp	/^Node* LinkLine::sourcePortNode() const { return sourcePort; }$/;"	f	class:LinkLine
sourcenode	gui_sources/link_line.cpp	/^WidgetSceneNodeInterface* LinkLine::sourcenode() const { return source; }$/;"	f	class:LinkLine
spAll	gui_sources/qcustomplot.h	/^                         ,spAll   = 0xFF  \/\/\/< <tt>0xFF<\/tt> All properties$/;"	e	enum:QCPScatterStyle::ScatterProperty
spAxis	gui_sources/qcustomplot.h	/^                        ,spAxis       = 0x001  \/\/\/< The axis backbone and tick marks$/;"	e	enum:QCPAxis::SelectablePart
spAxis	gui_sources/qcustomplot.h	/^                        ,spAxis       = 0x001  \/\/\/< The axis backbone and tick marks$/;"	e	enum:QCPPolarAxisAngular::SelectablePart
spAxis	gui_sources/qcustomplot.h	/^                        ,spAxis       = 0x001  \/\/\/< The axis backbone and tick marks$/;"	e	enum:QCPPolarAxisRadial::SelectablePart
spAxisLabel	gui_sources/qcustomplot.h	/^                        ,spAxisLabel  = 0x004  \/\/\/< The axis label$/;"	e	enum:QCPAxis::SelectablePart
spAxisLabel	gui_sources/qcustomplot.h	/^                        ,spAxisLabel  = 0x004  \/\/\/< The axis label$/;"	e	enum:QCPPolarAxisAngular::SelectablePart
spAxisLabel	gui_sources/qcustomplot.h	/^                        ,spAxisLabel  = 0x004  \/\/\/< The axis label$/;"	e	enum:QCPPolarAxisRadial::SelectablePart
spBrush	gui_sources/qcustomplot.h	/^                         ,spBrush = 0x02  \/\/\/< <tt>0x02<\/tt> The brush property, see \\ref setBrush$/;"	e	enum:QCPScatterStyle::ScatterProperty
spItems	gui_sources/qcustomplot.h	/^                        ,spItems      = 0x002 \/\/\/< <tt>0x002<\/tt> Legend items individually (see \\ref selectedItems)$/;"	e	enum:QCPLegend::SelectablePart
spLegendBox	gui_sources/qcustomplot.h	/^                        ,spLegendBox  = 0x001 \/\/\/< <tt>0x001<\/tt> The legend box (frame)$/;"	e	enum:QCPLegend::SelectablePart
spNone	gui_sources/qcustomplot.h	/^  enum ScatterProperty { spNone  = 0x00  \/\/\/< <tt>0x00<\/tt> None$/;"	e	enum:QCPScatterStyle::ScatterProperty
spNone	gui_sources/qcustomplot.h	/^  enum SelectablePart { spNone        = 0      \/\/\/< None of the selectable parts$/;"	e	enum:QCPAxis::SelectablePart
spNone	gui_sources/qcustomplot.h	/^  enum SelectablePart { spNone        = 0      \/\/\/< None of the selectable parts$/;"	e	enum:QCPPolarAxisAngular::SelectablePart
spNone	gui_sources/qcustomplot.h	/^  enum SelectablePart { spNone        = 0      \/\/\/< None of the selectable parts$/;"	e	enum:QCPPolarAxisRadial::SelectablePart
spNone	gui_sources/qcustomplot.h	/^  enum SelectablePart { spNone        = 0x000 \/\/\/< <tt>0x000<\/tt> None$/;"	e	enum:QCPLegend::SelectablePart
spPen	gui_sources/qcustomplot.h	/^                         ,spPen   = 0x01  \/\/\/< <tt>0x01<\/tt> The pen property, see \\ref setPen$/;"	e	enum:QCPScatterStyle::ScatterProperty
spShape	gui_sources/qcustomplot.h	/^                         ,spShape = 0x08  \/\/\/< <tt>0x08<\/tt> The shape property, see \\ref setShape$/;"	e	enum:QCPScatterStyle::ScatterProperty
spSize	gui_sources/qcustomplot.h	/^                         ,spSize  = 0x04  \/\/\/< <tt>0x04<\/tt> The size property, see \\ref setSize$/;"	e	enum:QCPScatterStyle::ScatterProperty
spTickLabels	gui_sources/qcustomplot.h	/^                        ,spTickLabels = 0x002  \/\/\/< Tick labels (numbers) of this axis (as a whole, not individually)$/;"	e	enum:QCPAxis::SelectablePart
spTickLabels	gui_sources/qcustomplot.h	/^                        ,spTickLabels = 0x002  \/\/\/< Tick labels (numbers) of this axis (as a whole, not individually)$/;"	e	enum:QCPPolarAxisAngular::SelectablePart
spTickLabels	gui_sources/qcustomplot.h	/^                        ,spTickLabels = 0x002  \/\/\/< Tick labels (numbers) of this axis (as a whole, not individually)$/;"	e	enum:QCPPolarAxisRadial::SelectablePart
spacing	gui_sources/qcustomplot.h	/^  double spacing() const { return mSpacing; }$/;"	f	class:QCPBarsGroup
spacingType	gui_sources/qcustomplot.h	/^  SpacingType spacingType() const { return mSpacingType; }$/;"	f	class:QCPBarsGroup
span	gui_sources/qcustomplot.cpp	/^QCPDataRange QCPDataSelection::span() const$/;"	f	class:QCPDataSelection
spinGain1	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QDoubleSpinBox *spinGain1;$/;"	m	class:Ui_WidgetAimingControl
spinGain2	build/ImageProcProject_autogen/include/ui_widget_aiming_control.h	/^    QDoubleSpinBox *spinGain2;$/;"	m	class:Ui_WidgetAimingControl
spinThreshold	build/ImageProcProject_autogen/include/ui_widget_processing_image_control.h	/^    QSpinBox *spinThreshold;$/;"	m	class:Ui_WidgetProcessingImageControl
split_coeff	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW bool split_coeff;             \/\/!<  split the training coefficients into two matrices$/;"	m	struct:cv::tracking::TrackerKCF::Params
squeeze	gui_sources/qcustomplot.h	/^void QCPDataContainer<DataType>::squeeze(bool preAllocation, bool postAllocation)$/;"	f	class:QCPDataContainer
srmCustom	gui_sources/qcustomplot.h	/^                         ,srmCustom \/\/\/< When dragging the mouse, a selection rect becomes active. It is the programmer's responsibility to connect according slots to the selection rect's signals (e.g. \\ref QCPSelectionRect::accepted) in order to process the user interaction.$/;"	e	enum:QCP::SelectionRectMode
srmNone	gui_sources/qcustomplot.h	/^enum SelectionRectMode { srmNone    \/\/\/< The selection rect is disabled, and all mouse events are forwarded to the underlying objects, e.g. for axis range dragging$/;"	e	enum:QCP::SelectionRectMode
srmSelect	gui_sources/qcustomplot.h	/^                         ,srmSelect \/\/\/< When dragging the mouse, a selection rect becomes active. Upon releasing, plottable data points that were within the selection rect are selected, if the plottable's selectability setting permits. (See  \\ref dataselection "data selection mechanism" for details.)$/;"	e	enum:QCP::SelectionRectMode
srmZoom	gui_sources/qcustomplot.h	/^                         ,srmZoom   \/\/\/< When dragging the mouse, a selection rect becomes active. Upon releasing, the axes that are currently set as range zoom axes (\\ref QCPAxisRect::setRangeZoomAxes) will have their ranges zoomed accordingly.$/;"	e	enum:QCP::SelectionRectMode
ssCircle	gui_sources/qcustomplot.h	/^                      ,ssCircle    \/\/\/< \\enumimage{ssCircle.png} a circle$/;"	e	enum:QCPScatterStyle::ScatterShape
ssCross	gui_sources/qcustomplot.h	/^                      ,ssCross     \/\/\/< \\enumimage{ssCross.png} a cross$/;"	e	enum:QCPScatterStyle::ScatterShape
ssCrossCircle	gui_sources/qcustomplot.h	/^                      ,ssCrossCircle      \/\/\/< \\enumimage{ssCrossCircle.png} a circle with a cross inside$/;"	e	enum:QCPScatterStyle::ScatterShape
ssCrossSquare	gui_sources/qcustomplot.h	/^                      ,ssCrossSquare      \/\/\/< \\enumimage{ssCrossSquare.png} a square with a cross inside$/;"	e	enum:QCPScatterStyle::ScatterShape
ssCustom	gui_sources/qcustomplot.h	/^                      ,ssCustom    \/\/\/< custom painter operations are performed per scatter (As QPainterPath, see \\ref setCustomPath)$/;"	e	enum:QCPScatterStyle::ScatterShape
ssDiamond	gui_sources/qcustomplot.h	/^                      ,ssDiamond   \/\/\/< \\enumimage{ssDiamond.png} a diamond$/;"	e	enum:QCPScatterStyle::ScatterShape
ssDisc	gui_sources/qcustomplot.h	/^                      ,ssDisc      \/\/\/< \\enumimage{ssDisc.png} a circle which is filled with the pen's color (not the brush as with ssCircle)$/;"	e	enum:QCPScatterStyle::ScatterShape
ssDot	gui_sources/qcustomplot.h	/^                      ,ssDot       \/\/\/< \\enumimage{ssDot.png} a single pixel (use \\ref ssDisc or \\ref ssCircle if you want a round shape with a certain radius)$/;"	e	enum:QCPScatterStyle::ScatterShape
ssMultiples	gui_sources/qcustomplot.h	/^                       ,ssMultiples \/\/\/< An integer multiple of the specified tick step is allowed. The used factor follows the base class properties of \\ref setTickStepStrategy and \\ref setTickCount.$/;"	e	enum:QCPAxisTickerFixed::ScaleStrategy
ssNone	gui_sources/qcustomplot.h	/^  enum ScaleStrategy { ssNone      \/\/\/< Modifications are not allowed, the specified tick step is absolutely fixed. This might cause a high tick density and overlapping labels if the axis range is zoomed out.$/;"	e	enum:QCPAxisTickerFixed::ScaleStrategy
ssNone	gui_sources/qcustomplot.h	/^  enum ScatterShape { ssNone       \/\/\/< no scatter symbols are drawn (e.g. in QCPGraph, data only represented with lines)$/;"	e	enum:QCPScatterStyle::ScatterShape
ssPeace	gui_sources/qcustomplot.h	/^                      ,ssPeace     \/\/\/< \\enumimage{ssPeace.png} a circle, with one vertical and two downward diagonal lines$/;"	e	enum:QCPScatterStyle::ScatterShape
ssPixmap	gui_sources/qcustomplot.h	/^                      ,ssPixmap    \/\/\/< a custom pixmap specified by \\ref setPixmap, centered on the data point coordinates$/;"	e	enum:QCPScatterStyle::ScatterShape
ssPlus	gui_sources/qcustomplot.h	/^                      ,ssPlus      \/\/\/< \\enumimage{ssPlus.png} a plus$/;"	e	enum:QCPScatterStyle::ScatterShape
ssPlusCircle	gui_sources/qcustomplot.h	/^                      ,ssPlusCircle       \/\/\/< \\enumimage{ssPlusCircle.png} a circle with a plus inside$/;"	e	enum:QCPScatterStyle::ScatterShape
ssPlusSquare	gui_sources/qcustomplot.h	/^                      ,ssPlusSquare       \/\/\/< \\enumimage{ssPlusSquare.png} a square with a plus inside$/;"	e	enum:QCPScatterStyle::ScatterShape
ssPowers	gui_sources/qcustomplot.h	/^                       ,ssPowers    \/\/\/< An integer power of the specified tick step is allowed.$/;"	e	enum:QCPAxisTickerFixed::ScaleStrategy
ssSquare	gui_sources/qcustomplot.h	/^                      ,ssSquare    \/\/\/< \\enumimage{ssSquare.png} a square$/;"	e	enum:QCPScatterStyle::ScatterShape
ssStar	gui_sources/qcustomplot.h	/^                      ,ssStar      \/\/\/< \\enumimage{ssStar.png} a star with eight arms, i.e. a combination of cross and plus$/;"	e	enum:QCPScatterStyle::ScatterShape
ssTriangle	gui_sources/qcustomplot.h	/^                      ,ssTriangle  \/\/\/< \\enumimage{ssTriangle.png} an equilateral triangle, standing on baseline$/;"	e	enum:QCPScatterStyle::ScatterShape
ssTriangleInverted	gui_sources/qcustomplot.h	/^                      ,ssTriangleInverted \/\/\/< \\enumimage{ssTriangleInverted.png} an equilateral triangle, standing on corner$/;"	e	enum:QCPScatterStyle::ScatterShape
stAbsolute	gui_sources/qcustomplot.h	/^  enum SpacingType { stAbsolute       \/\/\/< Bar spacing is in absolute pixels$/;"	e	enum:QCPBarsGroup::SpacingType
stAxisRectRatio	gui_sources/qcustomplot.h	/^                     ,stAxisRectRatio \/\/\/< Bar spacing is given by a fraction of the axis rect size$/;"	e	enum:QCPBarsGroup::SpacingType
stDataRange	gui_sources/qcustomplot.h	/^                     ,stDataRange          \/\/\/< Multiple contiguous data points (a data range) can be selected$/;"	e	enum:QCP::SelectionType
stDeviceList	CAMERA_INTERFACE/interface_camera_hik.h	/^  MV_CC_DEVICE_INFO_LIST stDeviceList; $/;"	m	class:CameraInterfaceHIK
stLinear	gui_sources/qcustomplot.h	/^  enum ScaleType { stLinear       \/\/\/< Linear scaling$/;"	e	enum:QCPAxis::ScaleType
stLinear	gui_sources/qcustomplot.h	/^  enum ScaleType { stLinear       \/\/\/< Linear scaling$/;"	e	enum:QCPPolarAxisRadial::ScaleType
stLogarithmic	gui_sources/qcustomplot.h	/^                   ,stLogarithmic \/\/\/< Logarithmic scaling with correspondingly transformed axis coordinates (possibly also \\ref setTicker to a \\ref QCPAxisTickerLog instance).$/;"	e	enum:QCPAxis::ScaleType
stLogarithmic	gui_sources/qcustomplot.h	/^                   ,stLogarithmic \/\/\/< Logarithmic scaling with correspondingly transformed axis coordinates (possibly also \\ref setTicker to a \\ref QCPAxisTickerLog instance).$/;"	e	enum:QCPPolarAxisRadial::ScaleType
stMultipleDataRanges	gui_sources/qcustomplot.h	/^                     ,stMultipleDataRanges \/\/\/< Any combination of data points\/ranges can be selected$/;"	e	enum:QCP::SelectionType
stNone	gui_sources/qcustomplot.h	/^enum SelectionType { stNone                \/\/\/< The plottable is not selectable$/;"	e	enum:QCP::SelectionType
stPlotCoords	gui_sources/qcustomplot.h	/^                     ,stPlotCoords    \/\/\/< Bar spacing is in key coordinates and thus scales with the key axis range$/;"	e	enum:QCPBarsGroup::SpacingType
stSingleData	gui_sources/qcustomplot.h	/^                     ,stSingleData         \/\/\/< One individual data point can be selected at a time$/;"	e	enum:QCP::SelectionType
stWhole	gui_sources/qcustomplot.h	/^                     ,stWhole              \/\/\/< Selection behaves like \\ref stMultipleDataRanges, but if there are any data points selected, the entire plottable is drawn as selected.$/;"	e	enum:QCP::SelectionType
stackedWidget	build/ImageProcProject_autogen/include/ui_widget_container_group.h	/^    QStackedWidget *stackedWidget;$/;"	m	class:Ui_WidgetContainerGroup
stackingGap	gui_sources/qcustomplot.h	/^  double stackingGap() const { return mStackingGap; }$/;"	f	class:QCPBars
start	gui_sources/qcustomplot.h	/^  QCPItemPosition * const start;$/;"	m	class:QCPItemCurve
start	gui_sources/qcustomplot.h	/^  QCPItemPosition * const start;$/;"	m	class:QCPItemLine
startDir	gui_sources/qcustomplot.h	/^  QCPItemPosition * const startDir;$/;"	m	class:QCPItemCurve
startFeed	stream_video_rtsp.h	/^  static void startFeed(GstElement *source) { FLAG_OUTPUT_PIPE_WAIT_DATA = true;  }$/;"	f	class:VideoStreamRTSP
startPainting	gui_sources/qcustomplot.cpp	/^QCPPainter *QCPPaintBufferGlFbo::startPainting()$/;"	f	class:QCPPaintBufferGlFbo
startPainting	gui_sources/qcustomplot.cpp	/^QCPPainter *QCPPaintBufferGlPbuffer::startPainting()$/;"	f	class:QCPPaintBufferGlPbuffer
startPainting	gui_sources/qcustomplot.cpp	/^QCPPainter *QCPPaintBufferPixmap::startPainting()$/;"	f	class:QCPPaintBufferPixmap
startSelection	gui_sources/qcustomplot.cpp	/^void QCPSelectionRect::startSelection(QMouseEvent *event)$/;"	f	class:QCPSelectionRect
startServerProcess	stream_video_rtsp.h	/^  void startServerProcess() { if(FLAG_INIT_DONE) threadServer.detach(); }$/;"	f	class:VideoStreamRTSP
started	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^void QCPSelectionRect::started(QMouseEvent * _t1)$/;"	f	class:QCPSelectionRect
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_labelimage.cpp	/^Q_CONSTINIT const QMetaObject LabelImage::staticMetaObject = { {$/;"	m	class:LabelImage	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_link_line.cpp	/^Q_CONSTINIT const QMetaObject LinkLine::staticMetaObject = { {$/;"	m	class:LinkLine	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCP::staticMetaObject = { {$/;"	m	class:QCP	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPAbstractItem::staticMetaObject = { {$/;"	m	class:QCPAbstractItem	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPAbstractLegendItem::staticMetaObject = { {$/;"	m	class:QCPAbstractLegendItem	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPAbstractPlottable::staticMetaObject = { {$/;"	m	class:QCPAbstractPlottable	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPAxis::staticMetaObject = { {$/;"	m	class:QCPAxis	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPAxisRect::staticMetaObject = { {$/;"	m	class:QCPAxisRect	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPAxisTicker::staticMetaObject = { {$/;"	m	class:QCPAxisTicker	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPAxisTickerFixed::staticMetaObject = { {$/;"	m	class:QCPAxisTickerFixed	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPAxisTickerPi::staticMetaObject = { {$/;"	m	class:QCPAxisTickerPi	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPAxisTickerTime::staticMetaObject = { {$/;"	m	class:QCPAxisTickerTime	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPBars::staticMetaObject = { {$/;"	m	class:QCPBars	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPBarsGroup::staticMetaObject = { {$/;"	m	class:QCPBarsGroup	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPColorGradient::staticMetaObject = { {$/;"	m	class:QCPColorGradient	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPColorMap::staticMetaObject = { {$/;"	m	class:QCPColorMap	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPColorScale::staticMetaObject = { {$/;"	m	class:QCPColorScale	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPColorScaleAxisRectPrivate::staticMetaObject = { {$/;"	m	class:QCPColorScaleAxisRectPrivate	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPCurve::staticMetaObject = { {$/;"	m	class:QCPCurve	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPErrorBars::staticMetaObject = { {$/;"	m	class:QCPErrorBars	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPFinancial::staticMetaObject = { {$/;"	m	class:QCPFinancial	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPGraph::staticMetaObject = { {$/;"	m	class:QCPGraph	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPGrid::staticMetaObject = { {$/;"	m	class:QCPGrid	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPItemAnchor::staticMetaObject = { {$/;"	m	class:QCPItemAnchor	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPItemBracket::staticMetaObject = { {$/;"	m	class:QCPItemBracket	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPItemCurve::staticMetaObject = { {$/;"	m	class:QCPItemCurve	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPItemEllipse::staticMetaObject = { {$/;"	m	class:QCPItemEllipse	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPItemLine::staticMetaObject = { {$/;"	m	class:QCPItemLine	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPItemPixmap::staticMetaObject = { {$/;"	m	class:QCPItemPixmap	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPItemPosition::staticMetaObject = { {$/;"	m	class:QCPItemPosition	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPItemRect::staticMetaObject = { {$/;"	m	class:QCPItemRect	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPItemStraightLine::staticMetaObject = { {$/;"	m	class:QCPItemStraightLine	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPItemText::staticMetaObject = { {$/;"	m	class:QCPItemText	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPItemTracer::staticMetaObject = { {$/;"	m	class:QCPItemTracer	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPLabelPainterPrivate::staticMetaObject = { {$/;"	m	class:QCPLabelPainterPrivate	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPLayer::staticMetaObject = { {$/;"	m	class:QCPLayer	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPLayerable::staticMetaObject = { {$/;"	m	class:QCPLayerable	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPLayout::staticMetaObject = { {$/;"	m	class:QCPLayout	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPLayoutElement::staticMetaObject = { {$/;"	m	class:QCPLayoutElement	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPLayoutGrid::staticMetaObject = { {$/;"	m	class:QCPLayoutGrid	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPLayoutInset::staticMetaObject = { {$/;"	m	class:QCPLayoutInset	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPLegend::staticMetaObject = { {$/;"	m	class:QCPLegend	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPLineEnding::staticMetaObject = { {$/;"	m	class:QCPLineEnding	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPMarginGroup::staticMetaObject = { {$/;"	m	class:QCPMarginGroup	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPPainter::staticMetaObject = { {$/;"	m	class:QCPPainter	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPPlottableLegendItem::staticMetaObject = { {$/;"	m	class:QCPPlottableLegendItem	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPPolarAxisAngular::staticMetaObject = { {$/;"	m	class:QCPPolarAxisAngular	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPPolarAxisRadial::staticMetaObject = { {$/;"	m	class:QCPPolarAxisRadial	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPPolarGraph::staticMetaObject = { {$/;"	m	class:QCPPolarGraph	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPPolarGrid::staticMetaObject = { {$/;"	m	class:QCPPolarGrid	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPPolarLegendItem::staticMetaObject = { {$/;"	m	class:QCPPolarLegendItem	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPScatterStyle::staticMetaObject = { {$/;"	m	class:QCPScatterStyle	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPSelectionDecorator::staticMetaObject = { {$/;"	m	class:QCPSelectionDecorator	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPSelectionDecoratorBracket::staticMetaObject = { {$/;"	m	class:QCPSelectionDecoratorBracket	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPSelectionRect::staticMetaObject = { {$/;"	m	class:QCPSelectionRect	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPStatisticalBox::staticMetaObject = { {$/;"	m	class:QCPStatisticalBox	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCPTextElement::staticMetaObject = { {$/;"	m	class:QCPTextElement	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_qcustomplot.cpp	/^Q_CONSTINIT const QMetaObject QCustomPlot::staticMetaObject = { {$/;"	m	class:QCustomPlot	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^Q_CONSTINIT const QMetaObject AdjustableLabel::staticMetaObject = { {$/;"	m	class:AdjustableLabel	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_adjustable.cpp	/^Q_CONSTINIT const QMetaObject WidgetAdjustable::staticMetaObject = { {$/;"	m	class:WidgetAdjustable	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_aiming_control.cpp	/^Q_CONSTINIT const QMetaObject WidgetAimingControl::staticMetaObject = { {$/;"	m	class:WidgetAimingControl	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_camera_control.cpp	/^Q_CONSTINIT const QMetaObject WidgetCameraControl::staticMetaObject = { {$/;"	m	class:WidgetCameraControl	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_container_group.cpp	/^Q_CONSTINIT const QMetaObject WidgetContainerGroup::staticMetaObject = { {$/;"	m	class:WidgetContainerGroup	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_imitator_control.cpp	/^Q_CONSTINIT const QMetaObject WidgetImageImitator::staticMetaObject = { {$/;"	m	class:WidgetImageImitator	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_main_window.cpp	/^Q_CONSTINIT const QMetaObject WidgetMainWindow::staticMetaObject = { {$/;"	m	class:WidgetMainWindow	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_image_display.cpp	/^Q_CONSTINIT const QMetaObject WidgetOutputImageDisplay::staticMetaObject = { {$/;"	m	class:WidgetOutputImageDisplay	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_output_text_display.cpp	/^Q_CONSTINIT const QMetaObject WidgetOutputTextDisplay::staticMetaObject = { {$/;"	m	class:WidgetOutputTextDisplay	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_process_controller.cpp	/^Q_CONSTINIT const QMetaObject WidgetProcessController::staticMetaObject = { {$/;"	m	class:WidgetProcessController	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_control.cpp	/^Q_CONSTINIT const QMetaObject WidgetProcessingImageControl::staticMetaObject = { {$/;"	m	class:WidgetProcessingImageControl	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^Q_CONSTINIT const QMetaObject WidgetMiniLabelsGroup::staticMetaObject = { {$/;"	m	class:WidgetMiniLabelsGroup	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_processing_image_generic.cpp	/^Q_CONSTINIT const QMetaObject WidgetProcessingImage::staticMetaObject = { {$/;"	m	class:WidgetProcessingImage	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_scene_node_interface.cpp	/^Q_CONSTINIT const QMetaObject WidgetSceneNodeInterface::staticMetaObject = { {$/;"	m	class:WidgetSceneNodeInterface	file:
staticMetaObject	build/ImageProcProject_autogen/7RAEHFKGBG/moc_widget_table_group.cpp	/^Q_CONSTINIT const QMetaObject WidgetTableGroup::staticMetaObject = { {$/;"	m	class:WidgetTableGroup	file:
staticMetaObject	build/ImageProcProject_autogen/EWIEGA46WW/moc_controller_process_class.cpp	/^Q_CONSTINIT const QMetaObject ProcessControllerClass::staticMetaObject = { {$/;"	m	class:ProcessControllerClass	file:
staticMetaObject	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_finder.cpp	/^Q_CONSTINIT const QMetaObject ImageTemplateFinder::staticMetaObject = { {$/;"	m	class:ImageTemplateFinder	file:
staticMetaObject	build/ImageProcProject_autogen/F4UU7PBV5P/moc_image_processing_node.cpp	/^Q_CONSTINIT const QMetaObject ModuleImageProcessing::staticMetaObject = { {$/;"	m	class:ModuleImageProcessing	file:
staticMetaObject	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^Q_CONSTINIT const QMetaObject ImageTrackerCentroid::staticMetaObject = { {$/;"	m	class:ImageTrackerCentroid	file:
staticMetaObject	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_centroid.cpp	/^Q_CONSTINIT const QMetaObject ImageTrackerCentroidGPU::staticMetaObject = { {$/;"	m	class:ImageTrackerCentroidGPU	file:
staticMetaObject	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_neural.cpp	/^Q_CONSTINIT const QMetaObject NeuralTracker::staticMetaObject = { {$/;"	m	class:NeuralTracker	file:
staticMetaObject	build/ImageProcProject_autogen/F4UU7PBV5P/moc_tracker_template.cpp	/^Q_CONSTINIT const QMetaObject ImageTrackerTemplate::staticMetaObject = { {$/;"	m	class:ImageTrackerTemplate	file:
staticMetaObject	build/ImageProcProject_autogen/IUOK47BH6O/moc_interface_camera_hik.cpp	/^Q_CONSTINIT const QMetaObject CameraInterfaceHIK::staticMetaObject = { {$/;"	m	class:CameraInterfaceHIK	file:
staticMetaObject	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^Q_CONSTINIT const QMetaObject AimControlInterface::staticMetaObject = { {$/;"	m	class:AimControlInterface	file:
staticMetaObject	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^Q_CONSTINIT const QMetaObject AimImageImitatorClass::staticMetaObject = { {$/;"	m	class:AimImageImitatorClass	file:
staticMetaObject	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^Q_CONSTINIT const QMetaObject DynamicAimControl::staticMetaObject = { {$/;"	m	class:DynamicAimControl	file:
staticMetaObject	build/ImageProcProject_autogen/SERQFGPBY3/moc_imitator_image_aim.cpp	/^Q_CONSTINIT const QMetaObject ManualAimControl::staticMetaObject = { {$/;"	m	class:ManualAimControl	file:
staticMetaObject	build/ImageProcProject_autogen/SERQFGPBY3/moc_sinus_generator_class.cpp	/^Q_CONSTINIT const QMetaObject SinusGeneratorClass::staticMetaObject = { {$/;"	m	class:SinusGeneratorClass	file:
staticMetaObject	build/ImageProcProject_autogen/SERQFGPBY3/moc_widget_sinus_source.cpp	/^Q_CONSTINIT const QMetaObject WidgetSinusSource::staticMetaObject = { {$/;"	m	class:WidgetSinusSource	file:
staticMetaObject	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^Q_CONSTINIT const QMetaObject CANConnectionEngine::staticMetaObject = { {$/;"	m	class:CANConnectionEngine	file:
staticMetaObject	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^Q_CONSTINIT const QMetaObject CANDelayMeasure::staticMetaObject = { {$/;"	m	class:CANDelayMeasure	file:
staticMetaObject	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_can_interface.cpp	/^Q_CONSTINIT const QMetaObject CANTestMessage::staticMetaObject = { {$/;"	m	class:CANTestMessage	file:
staticMetaObject	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_tcp_interface.cpp	/^Q_CONSTINIT const QMetaObject TCPConnectionEngine::staticMetaObject = { {$/;"	m	class:TCPConnectionEngine	file:
staticMetaObject	build/ImageProcProject_autogen/VEFJCPGILW/moc_engine_udp_interface.cpp	/^Q_CONSTINIT const QMetaObject UDPEngineInterface::staticMetaObject = { {$/;"	m	class:UDPEngineInterface	file:
staticMetaObject	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^Q_CONSTINIT const QMetaObject AimingWatcherClass::staticMetaObject = { {$/;"	m	class:AimingWatcherClass	file:
staticMetaObject	build/ImageProcProject_autogen/VVJNAS6J2C/moc_aiming_class.cpp	/^Q_CONSTINIT const QMetaObject SignalPortAdapter::staticMetaObject = { {$/;"	m	class:SignalPortAdapter	file:
staticMetaObject	build/ImageProcProject_autogen/XJUVE5KTRL/moc_interface_image_source.cpp	/^Q_CONSTINIT const QMetaObject ImageSourceInterface::staticMetaObject = { {$/;"	m	class:ImageSourceInterface	file:
staticMetaObject	build/ImageProcProject_autogen/XWFUSFUWCP/moc_device_rotary_interface.cpp	/^Q_CONSTINIT const QMetaObject DynamicModule::staticMetaObject = { {$/;"	m	class:DynamicModule	file:
stopFeed	stream_video_rtsp.h	/^  static void  stopFeed(GstElement *source) { FLAG_OUTPUT_PIPE_WAIT_DATA = false; }$/;"	f	class:VideoStreamRTSP
stopServerProcess	stream_video_rtsp.h	/^  void stopServerProcess()  { g_main_loop_quit(processServerRTSP); }$/;"	f	class:VideoStreamRTSP
stopsUseAlpha	gui_sources/qcustomplot.cpp	/^bool QCPColorGradient::stopsUseAlpha() const$/;"	f	class:QCPColorGradient
strDisplayData	gui_sources/widget_processing_image_generic.h	/^QString strDisplayData; $/;"	m	class:WidgetProcessingImage
strFreq	gui_sources/widget_processing_image_generic.h	/^QString strFreq; $/;"	m	class:WidgetProcessingImage
strPeriodProcess	gui_sources/widget_processing_image_generic.h	/^QString strPeriodProcess; $/;"	m	class:WidgetProcessingImage
stream	CAMERA_INTERFACE/camera_interface_class.h	/^	ArvStream *stream = NULL;$/;"	m	struct:ArvStreamCallbackData
stream_callback	CAMERA_INTERFACE/camera_interface_class.cpp	/^extern "C" void stream_callback (void *user_data, ArvStreamCallbackType type, ArvBuffer *buffer)$/;"	f
style	gui_sources/qcustomplot.h	/^  BracketStyle style() const { return mStyle; }$/;"	f	class:QCPItemBracket
style	gui_sources/qcustomplot.h	/^  EndingStyle style() const { return mStyle; }$/;"	f	class:QCPLineEnding
style	gui_sources/qcustomplot.h	/^  TracerStyle style() const { return mStyle; }$/;"	f	class:QCPItemTracer
subGridPen	gui_sources/qcustomplot.h	/^  QPen subGridPen() const { return mSubGridPen; }$/;"	f	class:QCPGrid
subGridType	gui_sources/qcustomplot.h	/^  GridTypes subGridType() const { return mSubGridType; }$/;"	f	class:QCPPolarGrid
subGridVisible	gui_sources/qcustomplot.h	/^  bool subGridVisible() const { return mSubGridVisible; }$/;"	f	class:QCPGrid
subTickCount	gui_sources/qcustomplot.h	/^  int subTickCount() const { return mSubTickCount; }$/;"	f	class:QCPAxisTickerLog
subTickCount	gui_sources/qcustomplot.h	/^  int subTickCount() const { return mSubTickCount; }$/;"	f	class:QCPAxisTickerText
subTickLengthIn	gui_sources/qcustomplot.cpp	/^int QCPAxis::subTickLengthIn() const$/;"	f	class:QCPAxis
subTickLengthIn	gui_sources/qcustomplot.cpp	/^int QCPPolarAxisRadial::subTickLengthIn() const$/;"	f	class:QCPPolarAxisRadial
subTickLengthIn	gui_sources/qcustomplot.h	/^  int subTickLengthIn() const { return mSubTickLengthIn; }$/;"	f	class:QCPPolarAxisAngular
subTickLengthIn	gui_sources/qcustomplot.h	/^  int tickLengthIn, tickLengthOut, subTickLengthIn, subTickLengthOut; \/\/ directly accessed by QCPAxis setters\/getters$/;"	m	class:QCPAxisPainterPrivate
subTickLengthOut	gui_sources/qcustomplot.cpp	/^int QCPAxis::subTickLengthOut() const$/;"	f	class:QCPAxis
subTickLengthOut	gui_sources/qcustomplot.cpp	/^int QCPPolarAxisRadial::subTickLengthOut() const$/;"	f	class:QCPPolarAxisRadial
subTickLengthOut	gui_sources/qcustomplot.h	/^  int subTickLengthOut() const { return mSubTickLengthOut; }$/;"	f	class:QCPPolarAxisAngular
subTickLengthOut	gui_sources/qcustomplot.h	/^  int tickLengthIn, tickLengthOut, subTickLengthIn, subTickLengthOut; \/\/ directly accessed by QCPAxis setters\/getters$/;"	m	class:QCPAxisPainterPrivate
subTickPen	gui_sources/qcustomplot.h	/^  QPen subTickPen() const { return mSubTickPen; }$/;"	f	class:QCPAxis
subTickPen	gui_sources/qcustomplot.h	/^  QPen subTickPen() const { return mSubTickPen; }$/;"	f	class:QCPPolarAxisAngular
subTickPen	gui_sources/qcustomplot.h	/^  QPen subTickPen() const { return mSubTickPen; }$/;"	f	class:QCPPolarAxisRadial
subTickPen	gui_sources/qcustomplot.h	/^  QPen tickPen, subTickPen;$/;"	m	class:QCPAxisPainterPrivate
subTickPositions	gui_sources/qcustomplot.h	/^  QVector<double> subTickPositions;$/;"	m	class:QCPAxisPainterPrivate
subTickVector	gui_sources/qcustomplot.h	/^  QVector<double> subTickVector() const { return mSubTickVector; }$/;"	f	class:QCPPolarAxisRadial
subTicks	gui_sources/qcustomplot.h	/^  bool subTicks() const { return mSubTicks; }$/;"	f	class:QCPAxis
subTicks	gui_sources/qcustomplot.h	/^  bool subTicks() const { return mSubTicks; }$/;"	f	class:QCPPolarAxisAngular
subTicks	gui_sources/qcustomplot.h	/^  bool subTicks() const { return mSubTicks; }$/;"	f	class:QCPPolarAxisRadial
substituteExponent	gui_sources/qcustomplot.h	/^  bool substituteExponent() const { return mSubstituteExponent; }$/;"	f	class:QCPLabelPainterPrivate
substituteExponent	gui_sources/qcustomplot.h	/^  bool substituteExponent;$/;"	m	class:QCPAxisPainterPrivate
suffixBounds	gui_sources/qcustomplot.h	/^    QRect baseBounds, expBounds, suffixBounds, totalBounds, rotatedTotalBounds;$/;"	m	struct:QCPAxisPainterPrivate::TickLabelData
suffixBounds	gui_sources/qcustomplot.h	/^    QRect baseBounds, expBounds, suffixBounds;$/;"	m	struct:QCPLabelPainterPrivate::LabelData
suffixPart	gui_sources/qcustomplot.h	/^    QString basePart, expPart, suffixPart;$/;"	m	struct:QCPAxisPainterPrivate::TickLabelData
suffixPart	gui_sources/qcustomplot.h	/^    QString basePart, expPart, suffixPart;$/;"	m	struct:QCPLabelPainterPrivate::LabelData
switchToNextFrame	CAMERA_INTERFACE/camera_interface_class.cpp	/^bool CameraInterfaceAravis::switchToNextFrame() $/;"	f	class:CameraInterfaceAravis
switchToNextFrame	CAMERA_INTERFACE/interface_camera_hik.cpp	/^bool CameraInterfaceHIK::CameraImageStorage::switchToNextFrame() $/;"	f	class:CameraInterfaceHIK::CameraImageStorage
switchToNextFrame	COMMON/interface_image_source.h	/^    virtual bool switchToNextFrame() { return false; };$/;"	f	class:ImageSourceInterface
symbolGap	gui_sources/qcustomplot.h	/^  double symbolGap() const { return mSymbolGap; }$/;"	f	class:QCPErrorBars
system_transform_scale	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	float system_transform_scale = 1;$/;"	m	class:RotateOperationContainer
t	gui_sources/qcustomplot.h	/^  double t, key, value;$/;"	m	class:QCPCurveData
tail	gui_sources/qcustomplot.h	/^  QCPLineEnding tail() const { return mTail; }$/;"	f	class:QCPItemCurve
tail	gui_sources/qcustomplot.h	/^  QCPLineEnding tail() const { return mTail; }$/;"	f	class:QCPItemLine
take	gui_sources/qcustomplot.cpp	/^bool QCPLayoutGrid::take(QCPLayoutElement *element)$/;"	f	class:QCPLayoutGrid
take	gui_sources/qcustomplot.cpp	/^bool QCPLayoutInset::take(QCPLayoutElement *element)$/;"	f	class:QCPLayoutInset
takeAt	gui_sources/qcustomplot.cpp	/^QCPLayoutElement *QCPLayoutGrid::takeAt(int index)$/;"	f	class:QCPLayoutGrid
takeAt	gui_sources/qcustomplot.cpp	/^QCPLayoutElement *QCPLayoutInset::takeAt(int index)$/;"	f	class:QCPLayoutInset
tangentAverage	gui_sources/qcustomplot.h	/^  int tangentAverage() const { return mTangentAverage; }$/;"	f	class:QCPSelectionDecoratorBracket
tangentToData	gui_sources/qcustomplot.h	/^  bool tangentToData() const { return mTangentToData; }$/;"	f	class:QCPSelectionDecoratorBracket
template_size	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float template_size;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
text	gui_sources/qcustomplot.h	/^  QString text() const { return mText; }$/;"	f	class:QCPItemText
text	gui_sources/qcustomplot.h	/^  QString text() const { return mText; }$/;"	f	class:QCPTextElement
textAlignment	gui_sources/qcustomplot.h	/^  Qt::Alignment textAlignment() const { return mTextAlignment; }$/;"	f	class:QCPItemText
textColor	gui_sources/qcustomplot.h	/^  QColor textColor() const { return mTextColor; }$/;"	f	class:QCPAbstractLegendItem
textColor	gui_sources/qcustomplot.h	/^  QColor textColor() const { return mTextColor; }$/;"	f	class:QCPLegend
textColor	gui_sources/qcustomplot.h	/^  QColor textColor() const { return mTextColor; }$/;"	f	class:QCPTextElement
textFlags	gui_sources/qcustomplot.h	/^  int textFlags() const { return mTextFlags; }$/;"	f	class:QCPTextElement
thread	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.cpp	/^int TrackerFirst::thread(cv::Mat& image)$/;"	f	class:TrackerFirst
threadGenerator	gui_sources/GRAPHICS_WINDOW_GRAPH/widget_line_graph.h	/^    QThread threadGenerator;$/;"	m	class:WidgetLineGraph
threadGrabFrames	stream_video_rtsp.h	/^  std::jthread threadGrabFrames; $/;"	m	class:VideoStreamRTSP
threadServer	stream_video_rtsp.h	/^  std::jthread threadServer; $/;"	m	class:VideoStreamRTSP
tickCount	gui_sources/qcustomplot.h	/^  int tickCount() const { return mTickCount; }$/;"	f	class:QCPAxisTicker
tickLabelColor	gui_sources/qcustomplot.h	/^  QColor tickLabelColor() const { return mTickLabelColor; }$/;"	f	class:QCPAxis
tickLabelColor	gui_sources/qcustomplot.h	/^  QColor tickLabelColor() const { return mTickLabelColor; }$/;"	f	class:QCPPolarAxisAngular
tickLabelColor	gui_sources/qcustomplot.h	/^  QColor tickLabelColor() const { return mTickLabelColor; }$/;"	f	class:QCPPolarAxisRadial
tickLabelColor	gui_sources/qcustomplot.h	/^  QColor tickLabelColor;$/;"	m	class:QCPAxisPainterPrivate
tickLabelFont	gui_sources/qcustomplot.h	/^  QFont tickLabelFont() const { return mTickLabelFont; }$/;"	f	class:QCPAxis
tickLabelFont	gui_sources/qcustomplot.h	/^  QFont tickLabelFont() const { return mTickLabelFont; }$/;"	f	class:QCPPolarAxisAngular
tickLabelFont	gui_sources/qcustomplot.h	/^  QFont tickLabelFont() const { return mTickLabelFont; }$/;"	f	class:QCPPolarAxisRadial
tickLabelFont	gui_sources/qcustomplot.h	/^  QFont tickLabelFont;$/;"	m	class:QCPAxisPainterPrivate
tickLabelMode	gui_sources/qcustomplot.cpp	/^QCPPolarAxisAngular::LabelMode QCPPolarAxisAngular::tickLabelMode() const$/;"	f	class:QCPPolarAxisAngular
tickLabelMode	gui_sources/qcustomplot.cpp	/^QCPPolarAxisRadial::LabelMode QCPPolarAxisRadial::tickLabelMode() const$/;"	f	class:QCPPolarAxisRadial
tickLabelPadding	gui_sources/qcustomplot.cpp	/^int QCPAxis::tickLabelPadding() const$/;"	f	class:QCPAxis
tickLabelPadding	gui_sources/qcustomplot.h	/^  int tickLabelPadding() const { return mLabelPainter.padding(); }$/;"	f	class:QCPPolarAxisAngular
tickLabelPadding	gui_sources/qcustomplot.h	/^  int tickLabelPadding() const { return mLabelPainter.padding(); }$/;"	f	class:QCPPolarAxisRadial
tickLabelPadding	gui_sources/qcustomplot.h	/^  int tickLabelPadding; \/\/ directly accessed by QCPAxis setters\/getters$/;"	m	class:QCPAxisPainterPrivate
tickLabelRotation	gui_sources/qcustomplot.cpp	/^double QCPAxis::tickLabelRotation() const$/;"	f	class:QCPAxis
tickLabelRotation	gui_sources/qcustomplot.h	/^  double tickLabelRotation() const { return mLabelPainter.rotation(); }$/;"	f	class:QCPPolarAxisAngular
tickLabelRotation	gui_sources/qcustomplot.h	/^  double tickLabelRotation() const { return mLabelPainter.rotation(); }$/;"	f	class:QCPPolarAxisRadial
tickLabelRotation	gui_sources/qcustomplot.h	/^  double tickLabelRotation; \/\/ directly accessed by QCPAxis setters\/getters$/;"	m	class:QCPAxisPainterPrivate
tickLabelSide	gui_sources/qcustomplot.cpp	/^QCPAxis::LabelSide QCPAxis::tickLabelSide() const$/;"	f	class:QCPAxis
tickLabelSide	gui_sources/qcustomplot.h	/^  QCPAxis::LabelSide tickLabelSide; \/\/ directly accessed by QCPAxis setters\/getters$/;"	m	class:QCPAxisPainterPrivate
tickLabels	gui_sources/qcustomplot.h	/^  QVector<QString> tickLabels;$/;"	m	class:QCPAxisPainterPrivate
tickLabels	gui_sources/qcustomplot.h	/^  bool tickLabels() const { return mTickLabels; }$/;"	f	class:QCPAxis
tickLabels	gui_sources/qcustomplot.h	/^  bool tickLabels() const { return mTickLabels; }$/;"	f	class:QCPPolarAxisAngular
tickLabels	gui_sources/qcustomplot.h	/^  bool tickLabels() const { return mTickLabels; }$/;"	f	class:QCPPolarAxisRadial
tickLabelsSelectionBox	gui_sources/qcustomplot.h	/^  QRect tickLabelsSelectionBox() const { return mTickLabelsSelectionBox; }$/;"	f	class:QCPAxisPainterPrivate
tickLengthIn	gui_sources/qcustomplot.cpp	/^int QCPAxis::tickLengthIn() const$/;"	f	class:QCPAxis
tickLengthIn	gui_sources/qcustomplot.cpp	/^int QCPPolarAxisRadial::tickLengthIn() const$/;"	f	class:QCPPolarAxisRadial
tickLengthIn	gui_sources/qcustomplot.h	/^  int tickLengthIn() const { return mTickLengthIn; }$/;"	f	class:QCPPolarAxisAngular
tickLengthIn	gui_sources/qcustomplot.h	/^  int tickLengthIn, tickLengthOut, subTickLengthIn, subTickLengthOut; \/\/ directly accessed by QCPAxis setters\/getters$/;"	m	class:QCPAxisPainterPrivate
tickLengthOut	gui_sources/qcustomplot.cpp	/^int QCPAxis::tickLengthOut() const$/;"	f	class:QCPAxis
tickLengthOut	gui_sources/qcustomplot.cpp	/^int QCPPolarAxisRadial::tickLengthOut() const$/;"	f	class:QCPPolarAxisRadial
tickLengthOut	gui_sources/qcustomplot.h	/^  int tickLengthIn, tickLengthOut, subTickLengthIn, subTickLengthOut; \/\/ directly accessed by QCPAxis setters\/getters$/;"	m	class:QCPAxisPainterPrivate
tickLengthOut	gui_sources/qcustomplot.h	/^  int tickLengthOut() const { return mTickLengthOut; }$/;"	f	class:QCPPolarAxisAngular
tickOrigin	gui_sources/qcustomplot.h	/^  double tickOrigin() const { return mTickOrigin; }$/;"	f	class:QCPAxisTicker
tickPen	gui_sources/qcustomplot.h	/^  QPen tickPen() const { return mTickPen; }$/;"	f	class:QCPAxis
tickPen	gui_sources/qcustomplot.h	/^  QPen tickPen() const { return mTickPen; }$/;"	f	class:QCPPolarAxisAngular
tickPen	gui_sources/qcustomplot.h	/^  QPen tickPen() const { return mTickPen; }$/;"	f	class:QCPPolarAxisRadial
tickPen	gui_sources/qcustomplot.h	/^  QPen tickPen, subTickPen;$/;"	m	class:QCPAxisPainterPrivate
tickPositions	gui_sources/qcustomplot.h	/^  QVector<double> tickPositions;$/;"	m	class:QCPAxisPainterPrivate
tickStep	gui_sources/qcustomplot.h	/^  double tickStep() const { return mTickStep; }$/;"	f	class:QCPAxisTickerFixed
tickStepStrategy	gui_sources/qcustomplot.h	/^  TickStepStrategy tickStepStrategy() const { return mTickStepStrategy; }$/;"	f	class:QCPAxisTicker
tickVector	gui_sources/qcustomplot.h	/^  QVector<double> tickVector() const { return mTickVector; }$/;"	f	class:QCPAxis
tickVector	gui_sources/qcustomplot.h	/^  QVector<double> tickVector() const { return mTickVector; }$/;"	f	class:QCPPolarAxisAngular
tickVector	gui_sources/qcustomplot.h	/^  QVector<double> tickVector() const { return mTickVector; }$/;"	f	class:QCPPolarAxisRadial
tickVectorLabels	gui_sources/qcustomplot.h	/^  QVector<QString> tickVectorLabels() const { return mTickVectorLabels; }$/;"	f	class:QCPAxis
tickVectorLabels	gui_sources/qcustomplot.h	/^  QVector<QString> tickVectorLabels() const { return mTickVectorLabels; }$/;"	f	class:QCPPolarAxisAngular
tickVectorLabels	gui_sources/qcustomplot.h	/^  QVector<QString> tickVectorLabels() const { return mTickVectorLabels; }$/;"	f	class:QCPPolarAxisRadial
ticker	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPAxisTicker> ticker() const { return mTicker; }$/;"	f	class:QCPAxis
ticker	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPAxisTicker> ticker() const { return mTicker; }$/;"	f	class:QCPPolarAxisAngular
ticker	gui_sources/qcustomplot.h	/^  QSharedPointer<QCPAxisTicker> ticker() const { return mTicker; }$/;"	f	class:QCPPolarAxisRadial
ticks	gui_sources/qcustomplot.h	/^  QMap<double, QString> &ticks() { return mTicks; }$/;"	f	class:QCPAxisTickerText
ticks	gui_sources/qcustomplot.h	/^  bool ticks() const { return mTicks; }$/;"	f	class:QCPAxis
ticks	gui_sources/qcustomplot.h	/^  bool ticks() const { return mTicks; }$/;"	f	class:QCPPolarAxisAngular
ticks	gui_sources/qcustomplot.h	/^  bool ticks() const { return mTicks; }$/;"	f	class:QCPPolarAxisRadial
tightBoundary	gui_sources/qcustomplot.h	/^  bool tightBoundary() const { return mTightBoundary; }$/;"	f	class:QCPColorMap
timeEnd	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  std::chrono::time_point<std::chrono::high_resolution_clock> timeEnd;$/;"	m	class:CANDelayMeasure
timeFormat	gui_sources/qcustomplot.h	/^  QString timeFormat() const { return mTimeFormat; }$/;"	f	class:QCPAxisTickerTime
timeSeriesToOhlc	gui_sources/qcustomplot.cpp	/^QCPFinancialDataContainer QCPFinancial::timeSeriesToOhlc(const QVector<double> &time, const QVector<double> &value, double timeBinSize, double timeBinOffset)$/;"	f	class:QCPFinancial
timeStart	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  std::chrono::time_point<std::chrono::high_resolution_clock> timeStart;$/;"	m	class:CANDelayMeasure
timeZone	gui_sources/qcustomplot.h	/^  QTimeZone timeZone() const { return mTimeZone; }$/;"	f	class:QCPAxisTickerDateTime
timerAutoClear	gui_sources/widget_output_image_display.h	/^  QTimer timerAutoClear;$/;"	m	class:WidgetOutputImageDisplay
timerAutoClear	gui_sources/widget_output_text_display.h	/^  QTimer timerAutoClear;$/;"	m	class:WidgetOutputTextDisplay
timerConnectAttempt	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.h	/^   QTimer timerConnectAttempt;$/;"	m	class:UDPEngineInterface
timerDisplay	CV_IMAGE_PROCESSING/image_processing_node.h	/^    QTimer timerDisplay;$/;"	m	class:ModuleImageProcessing
timerDisplay	gui_sources/widget_processing_image_generic.h	/^QTimer timerDisplay;$/;"	m	class:WidgetProcessingImage
timerDisplayMiniLabels	gui_sources/widget_processing_image_generic.h	/^QTimer timerDisplayMiniLabels;$/;"	m	class:WidgetProcessingImage
timerDisplayState	gui_sources/widget_aiming_control.h	/^	QTimer timerDisplayState;$/;"	m	class:WidgetAimingControl
timerDisplayTestImage	CAMERA_INTERFACE/camera_interface_class.h	/^    QTimer timerDisplayTestImage;$/;"	m	class:CameraInterfaceAravis
timerMove	DEVICES/device_rotary_interface.h	/^  QTimer timerMove;$/;"	m	class:DynamicModule
timerMoveAim	AIM_IMAGE_IMITATION/imitator_image_aim.h	/^    QTimer timerMoveAim;$/;"	m	class:AimControlInterface
timerProcessImage	CV_IMAGE_PROCESSING/image_processing_node.h	/^    QTimer timerProcessImage;$/;"	m	class:ModuleImageProcessing
timerSendTest	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  QTimer timerSendTest;$/;"	m	class:CANTestMessage
timerStepper	ROTATE_OPTIMIZATION/rotation_find_executor.h	/^	QTimer timerStepper;$/;"	m	class:RotationFindProcessClass
timerUpdateState	gui_sources/widget_scanator_control.h	/^    QTimer timerUpdateState;$/;"	m	class:WidgetScanatorControl
timerWatchModule	AIMING_MODULES/aiming_class.h	/^  QTimer timerWatchModule;$/;"	m	class:AimingWatcherClass
toByteArray	TRANSMISSION/GENERIC_MESSAGES/message_header_generic_ext.h	/^    QByteArray toByteArray()$/;"	f	class:MESSAGE_HEADER_EXT
toByteArray	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	/^QByteArray MessageGenericExt<T,H>::toByteArray()$/;"	f	class:MessageGenericExt
toGenericMessage	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic.h	/^  MessageGeneric<void*,H>& toGenericMessage() { return *reinterpret_cast<MessageGeneric<void*,H>*>(this);  }$/;"	f	class:MessageGeneric
toGenericMessage	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	/^         MessageGenericExt<void*,H>& toGenericMessage() { return *reinterpret_cast<MessageGenericExt<void*,H>*>(this);  }$/;"	f	class:MessageGenericExt
toPainter	gui_sources/qcustomplot.cpp	/^void QCustomPlot::toPainter(QCPPainter *painter, int width, int height)$/;"	f	class:QCustomPlot
toPixmap	gui_sources/qcustomplot.cpp	/^QPixmap QCustomPlot::toPixmap(int width, int height, double scale)$/;"	f	class:QCustomPlot
toPoint	gui_sources/qcustomplot.h	/^  QPoint toPoint() const { return QPoint(int(mX), int(mY)); }$/;"	f	class:QCPVector2D
toPointF	gui_sources/qcustomplot.h	/^  QPointF toPointF() const { return QPointF(mX, mY); }$/;"	f	class:QCPVector2D
toQCPItemPosition	gui_sources/qcustomplot.h	/^  virtual QCPItemPosition *toQCPItemPosition() { return nullptr; }$/;"	f	class:QCPItemAnchor
toString	TRANSMISSION/GENERIC_MESSAGES/message_struct_generic_ext.h	/^template<typename T,typename H> QString MessageGenericExt<T,H>::toString() { return QString("VAL: %1").arg(DATA); }$/;"	f	class:MessageGenericExt
tolerance	UTILITES/thread_operation_nodes.h	/^  double tolerance = 0.01;$/;"	m	class:CoordDetector
top	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const top;$/;"	m	class:QCPItemEllipse
top	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const top;$/;"	m	class:QCPItemPixmap
top	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const top;$/;"	m	class:QCPItemRect
top	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const top;$/;"	m	class:QCPItemText
top	gui_sources/qcustomplot.h	/^  int top() const { return mRect.top(); }$/;"	f	class:QCPAxisRect
top	gui_sources/qcustomplot.h	/^  int top() const { return mRect.top(); }$/;"	f	class:QCPPolarAxisAngular
topLeft	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const topLeft;$/;"	m	class:QCPItemText
topLeft	gui_sources/qcustomplot.h	/^  QCPItemPosition * const topLeft;$/;"	m	class:QCPItemEllipse
topLeft	gui_sources/qcustomplot.h	/^  QCPItemPosition * const topLeft;$/;"	m	class:QCPItemPixmap
topLeft	gui_sources/qcustomplot.h	/^  QCPItemPosition * const topLeft;$/;"	m	class:QCPItemRect
topLeft	gui_sources/qcustomplot.h	/^  QPoint topLeft() const { return mRect.topLeft(); }$/;"	f	class:QCPAxisRect
topLeft	gui_sources/qcustomplot.h	/^  QPoint topLeft() const { return mRect.topLeft(); }$/;"	f	class:QCPPolarAxisAngular
topLeftRim	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const topLeftRim;$/;"	m	class:QCPItemEllipse
topRight	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const topRight;$/;"	m	class:QCPItemPixmap
topRight	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const topRight;$/;"	m	class:QCPItemRect
topRight	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const topRight;$/;"	m	class:QCPItemText
topRight	gui_sources/qcustomplot.h	/^  QPoint topRight() const { return mRect.topRight(); }$/;"	f	class:QCPAxisRect
topRight	gui_sources/qcustomplot.h	/^  QPoint topRight() const { return mRect.topRight(); }$/;"	f	class:QCPPolarAxisAngular
topRightRim	gui_sources/qcustomplot.h	/^  QCPItemAnchor * const topRightRim;$/;"	m	class:QCPItemEllipse
totalBounds	gui_sources/qcustomplot.h	/^    QRect baseBounds, expBounds, suffixBounds, totalBounds, rotatedTotalBounds;$/;"	m	struct:QCPAxisPainterPrivate::TickLabelData
totalBounds	gui_sources/qcustomplot.h	/^    QRect totalBounds; \/\/ is in a coordinate system where label top left is at (0, 0)$/;"	m	struct:QCPLabelPainterPrivate::LabelData
tracker	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.h	/^	cv::Ptr<cv::TrackerKCF> tracker;$/;"	m	class:TrackerFirst
tracking	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^inline namespace tracking {$/;"	n	namespace:cv
transform	gui_sources/qcustomplot.h	/^    QTransform transform; \/\/ the transform about the label anchor which is at (0, 0). Does not contain final absolute x\/y positioning on the plot\/axis$/;"	m	struct:QCPLabelPainterPrivate::LabelData
transformationMode	gui_sources/qcustomplot.h	/^  Qt::TransformationMode transformationMode() const { return mTransformationMode; }$/;"	f	class:QCPItemPixmap
trimTicks	gui_sources/qcustomplot.cpp	/^void QCPAxisTicker::trimTicks(const QCPRange &range, QVector<double> &ticks, bool keepOneOutlier) const$/;"	f	class:QCPAxisTicker
tryConnectConstantly	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.h	/^  void tryConnectConstantly(QString address, int Port) {};$/;"	f	class:CANConnectionEngine
tryConnectConstantly	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^void TCPConnectionEngine::tryConnectConstantly(QString Address, int Port)$/;"	f	class:TCPConnectionEngine
tryConnectConstantly	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^void UDPEngineInterface::tryConnectConstantly(QString Address, int Port)$/;"	f	class:UDPEngineInterface
tsCircle	gui_sources/qcustomplot.h	/^                     ,tsCircle     \/\/\/< A circle$/;"	e	enum:QCPItemTracer::TracerStyle
tsCrosshair	gui_sources/qcustomplot.h	/^                     ,tsCrosshair  \/\/\/< A plus shaped crosshair which spans the complete axis rect$/;"	e	enum:QCPItemTracer::TracerStyle
tsNone	gui_sources/qcustomplot.h	/^  enum TracerStyle { tsNone        \/\/\/< The tracer is not visible$/;"	e	enum:QCPItemTracer::TracerStyle
tsPlus	gui_sources/qcustomplot.h	/^                     ,tsPlus       \/\/\/< A plus shaped crosshair with limited size$/;"	e	enum:QCPItemTracer::TracerStyle
tsSquare	gui_sources/qcustomplot.h	/^                     ,tsSquare     \/\/\/< A square$/;"	e	enum:QCPItemTracer::TracerStyle
tssMeetTickCount	gui_sources/qcustomplot.h	/^    ,tssMeetTickCount \/\/\/< Less readable tick steps are allowed which in turn facilitates getting closer to the requested tick count$/;"	e	enum:QCPAxisTicker::TickStepStrategy
tssReadability	gui_sources/qcustomplot.h	/^    tssReadability    \/\/\/< A nicely readable tick step is prioritized over matching the requested number of ticks (see \\ref setTickCount)$/;"	e	enum:QCPAxisTicker::TickStepStrategy
tuDays	gui_sources/qcustomplot.h	/^                  ,tuDays        \/\/\/< Days (%%d in \\ref setTimeFormat)$/;"	e	enum:QCPAxisTickerTime::TimeUnit
tuHours	gui_sources/qcustomplot.h	/^                  ,tuHours       \/\/\/< Hours (%%h in \\ref setTimeFormat)$/;"	e	enum:QCPAxisTickerTime::TimeUnit
tuMilliseconds	gui_sources/qcustomplot.h	/^  enum TimeUnit { tuMilliseconds \/\/\/< Milliseconds, one thousandth of a second (%%z in \\ref setTimeFormat)$/;"	e	enum:QCPAxisTickerTime::TimeUnit
tuMinutes	gui_sources/qcustomplot.h	/^                  ,tuMinutes     \/\/\/< Minutes (%%m in \\ref setTimeFormat)$/;"	e	enum:QCPAxisTickerTime::TimeUnit
tuSeconds	gui_sources/qcustomplot.h	/^                  ,tuSeconds     \/\/\/< Seconds (%%s in \\ref setTimeFormat)$/;"	e	enum:QCPAxisTickerTime::TimeUnit
twoColored	gui_sources/qcustomplot.h	/^  bool twoColored() const { return mTwoColored; }$/;"	f	class:QCPFinancial
type	gui_sources/qcustomplot.h	/^  GridTypes type() const { return mType; }$/;"	f	class:QCPPolarGrid
type	gui_sources/qcustomplot.h	/^  PositionType type() const { return typeX(); }$/;"	f	class:QCPItemPosition
type	gui_sources/qcustomplot.h	/^  QCPAxis::AxisType type() const { return mType; }$/;"	f	class:QCPColorScale
type	gui_sources/qcustomplot.h	/^  QCPAxis::AxisType type;$/;"	m	class:QCPAxisPainterPrivate
typeX	gui_sources/qcustomplot.h	/^  PositionType typeX() const { return mPositionTypeX; }$/;"	f	class:QCPItemPosition
typeY	gui_sources/qcustomplot.h	/^  PositionType typeY() const { return mPositionTypeY; }$/;"	f	class:QCPItemPosition
ui	AIM_IMAGE_IMITATION/widget_sinus_source.h	/^	Ui::WidgetSinusSource ui;$/;"	m	class:WidgetSinusSource
ui	DEVICES/LaserPointerControlLib/WindowLaserControl.h	/^    Ui::WindowLaserControlClass *ui;$/;"	m	class:WindowLaserControlClass
ui	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.h	/^	Ui::WidgetGraphisPlot ui;$/;"	m	class:WidgetGraphisPlot
ui	gui_sources/widget_aiming_control.h	/^	Ui::WidgetAimingControl ui;$/;"	m	class:WidgetAimingControl
ui	gui_sources/widget_camera_control.h	/^Ui::WidgetCameraControl *ui;$/;"	m	class:WidgetCameraControl
ui	gui_sources/widget_container_group.h	/^Ui::WidgetContainerGroup *ui;$/;"	m	class:WidgetContainerGroup
ui	gui_sources/widget_imitator_control.h	/^Ui::WidgetImageImitator *ui;$/;"	m	class:WidgetImageImitator
ui	gui_sources/widget_main_window.h	/^	Ui::WidgetMainWindow ui;$/;"	m	class:WidgetMainWindow
ui	gui_sources/widget_output_image_display.h	/^	Ui::WidgetOutputImageDisplay ui;$/;"	m	class:WidgetOutputImageDisplay
ui	gui_sources/widget_output_text_display.h	/^	Ui::OutputTextDisplay ui;$/;"	m	class:WidgetOutputTextDisplay
ui	gui_sources/widget_process_controller.h	/^Ui::WidgetProcessController *ui;$/;"	m	class:WidgetProcessController
ui	gui_sources/widget_processing_image_control.h	/^Ui::WidgetProcessingImageControl *ui;$/;"	m	class:WidgetProcessingImageControl
ui	gui_sources/widget_processing_image_generic.h	/^Ui::WidgetProcessingImage *ui;$/;"	m	class:WidgetProcessingImage
ui	gui_sources/widget_scanator_control.h	/^Ui::WidgetScanatorControl *ui;$/;"	m	class:WidgetScanatorControl
ui	gui_sources/widget_table_group.h	/^Ui::WidgetTableGroup *ui;$/;"	m	class:WidgetTableGroup
ui	gui_sources/widget_transmission_interface.h	/^Ui::WidgetTransmissionControl *ui;$/;"	m	class:WidgetTransmissionControl
undefinePen	gui_sources/qcustomplot.cpp	/^void QCPScatterStyle::undefinePen()$/;"	f	class:QCPScatterStyle
unicodeFraction	gui_sources/qcustomplot.cpp	/^QString QCPAxisTickerPi::unicodeFraction(int numerator, int denominator) const$/;"	f	class:QCPAxisTickerPi
unicodeSubscript	gui_sources/qcustomplot.cpp	/^QString QCPAxisTickerPi::unicodeSubscript(int number) const$/;"	f	class:QCPAxisTickerPi
unicodeSuperscript	gui_sources/qcustomplot.cpp	/^QString QCPAxisTickerPi::unicodeSuperscript(int number) const$/;"	f	class:QCPAxisTickerPi
unix	build/ImageProcProject_autogen/moc_predefs.h	266;"	d
unregisterBars	gui_sources/qcustomplot.cpp	/^void QCPBarsGroup::unregisterBars(QCPBars *bars)$/;"	f	class:QCPBarsGroup
upLayout	gui_sources/qcustomplot.h	/^                     ,upLayout     \/\/\/< Final phase in which the layout system places the rects of the elements$/;"	e	enum:QCPLayoutElement::UpdatePhase
upMargins	gui_sources/qcustomplot.h	/^                     ,upMargins    \/\/\/< Phase in which the margins are calculated and set$/;"	e	enum:QCPLayoutElement::UpdatePhase
upPreparation	gui_sources/qcustomplot.h	/^  enum UpdatePhase { upPreparation \/\/\/< Phase used for any type of preparation that needs to be done before margin calculation and layout$/;"	e	enum:QCPLayoutElement::UpdatePhase
update	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.cpp	/^void TrackerFirst::update(cv::Mat& image, cv::Rect& bbox)$/;"	f	class:TrackerFirst
update	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::update(UpdatePhase phase)$/;"	f	class:QCPAxisRect
update	gui_sources/qcustomplot.cpp	/^void QCPColorScale::update(UpdatePhase phase)$/;"	f	class:QCPColorScale
update	gui_sources/qcustomplot.cpp	/^void QCPLayout::update(UpdatePhase phase)$/;"	f	class:QCPLayout
update	gui_sources/qcustomplot.cpp	/^void QCPLayoutElement::update(UpdatePhase phase)$/;"	f	class:QCPLayoutElement
update	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::update(UpdatePhase phase)$/;"	f	class:QCPPolarAxisAngular
updateAxesOffset	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::updateAxesOffset(QCPAxis::AxisType type)$/;"	f	class:QCPAxisRect
updateColorBuffer	gui_sources/qcustomplot.cpp	/^void QCPColorGradient::updateColorBuffer()$/;"	f	class:QCPColorGradient
updateGeometry	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::updateGeometry(const QPointF &center, double radius)$/;"	f	class:QCPPolarAxisRadial
updateGradientImage	gui_sources/qcustomplot.cpp	/^void QCPColorScaleAxisRectPrivate::updateGradientImage()$/;"	f	class:QCPColorScaleAxisRectPrivate
updateLayerIndices	gui_sources/qcustomplot.cpp	/^void QCustomPlot::updateLayerIndices() const$/;"	f	class:QCustomPlot
updateLayout	gui_sources/qcustomplot.cpp	/^void QCPLayout::updateLayout()$/;"	f	class:QCPLayout
updateLayout	gui_sources/qcustomplot.cpp	/^void QCPLayoutGrid::updateLayout()$/;"	f	class:QCPLayoutGrid
updateLayout	gui_sources/qcustomplot.cpp	/^void QCPLayoutInset::updateLayout()$/;"	f	class:QCPLayoutInset
updateLayout	gui_sources/qcustomplot.cpp	/^void QCustomPlot::updateLayout()$/;"	f	class:QCustomPlot
updateLegendIcon	gui_sources/qcustomplot.cpp	/^void QCPColorMap::updateLegendIcon(Qt::TransformationMode transformMode, const QSize &thumbSize)$/;"	f	class:QCPColorMap
updateMapImage	gui_sources/qcustomplot.cpp	/^void QCPColorMap::updateMapImage()$/;"	f	class:QCPColorMap
updatePosition	gui_sources/qcustomplot.cpp	/^void QCPItemTracer::updatePosition()$/;"	f	class:QCPItemTracer
updateScaledPixmap	gui_sources/qcustomplot.cpp	/^void QCPItemPixmap::updateScaledPixmap(QRect finalRect, bool flipHorz, bool flipVert)$/;"	f	class:QCPItemPixmap
upper	gui_sources/qcustomplot.h	/^  double lower, upper;$/;"	m	class:QCPRange
upperEnding	gui_sources/qcustomplot.cpp	/^QCPLineEnding QCPAxis::upperEnding() const$/;"	f	class:QCPAxis
upperEnding	gui_sources/qcustomplot.h	/^  QCPLineEnding lowerEnding, upperEnding; \/\/ directly accessed by QCPAxis setters\/getters$/;"	m	class:QCPAxisPainterPrivate
upperQuartile	gui_sources/qcustomplot.h	/^  double key, minimum, lowerQuartile, median, upperQuartile, maximum;$/;"	m	class:QCPStatisticalBoxData
use_channel_weights	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW bool use_channel_weights;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
use_color_names	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW bool use_color_names;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
use_gray	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW bool use_gray;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
use_hog	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW bool use_hog;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
use_rgb	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW bool use_rgb;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
use_segmentation	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW bool use_segmentation;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
usedScatterProperties	gui_sources/qcustomplot.h	/^  QCPScatterStyle::ScatterProperties usedScatterProperties() const { return mUsedScatterProperties; }$/;"	f	class:QCPSelectionDecorator
validRange	gui_sources/qcustomplot.cpp	/^bool QCPRange::validRange(const QCPRange &range)$/;"	f	class:QCPRange
validRange	gui_sources/qcustomplot.cpp	/^bool QCPRange::validRange(double lower, double upper)$/;"	f	class:QCPRange
value	gui_sources/qcustomplot.h	/^  double key, value;$/;"	m	class:QCPBarsData
value	gui_sources/qcustomplot.h	/^  double key, value;$/;"	m	class:QCPGraphData
value	gui_sources/qcustomplot.h	/^  double t, key, value;$/;"	m	class:QCPCurveData
value	gui_sources/qcustomplot.h	/^  double value() const { return mValue; }$/;"	f	class:QCPItemPosition
valueAxis	gui_sources/qcustomplot.h	/^  QCPAxis *valueAxis() const { return mValueAxis.data(); }$/;"	f	class:QCPAbstractPlottable
valueAxis	gui_sources/qcustomplot.h	/^  QCPAxis *valueAxis() const { return mValueAxis.data(); }$/;"	f	class:QCPItemPosition
valueAxis	gui_sources/qcustomplot.h	/^  QCPPolarAxisRadial *valueAxis() const { return mValueAxis.data(); }$/;"	f	class:QCPPolarGraph
valueRange	gui_sources/qcustomplot.h	/^  QCPRange valueRange() const { return mValueRange; }$/;"	f	class:QCPColorMapData
valueRange	gui_sources/qcustomplot.h	/^  inline QCPRange valueRange() const { return QCPRange(low, high); } \/\/ open and close must lie between low and high, so we don't need to check them$/;"	f	class:QCPFinancialData
valueRange	gui_sources/qcustomplot.h	/^  inline QCPRange valueRange() const { return QCPRange(value, value); } \/\/ note that bar base value isn't held in each QCPBarsData and thus can't\/shouldn't be returned here$/;"	f	class:QCPBarsData
valueRange	gui_sources/qcustomplot.h	/^  inline QCPRange valueRange() const { return QCPRange(value, value); }$/;"	f	class:QCPCurveData
valueRange	gui_sources/qcustomplot.h	/^  inline QCPRange valueRange() const { return QCPRange(value, value); }$/;"	f	class:QCPGraphData
valueRange	gui_sources/qcustomplot.h	/^  inline QCPRange valueRange() const$/;"	f	class:QCPStatisticalBoxData
valueRange	gui_sources/qcustomplot.h	/^QCPRange QCPDataContainer<DataType>::valueRange(bool &foundRange, QCP::SignDomain signDomain, const QCPRange &inKeyRange)$/;"	f	class:QCPDataContainer
valueSize	gui_sources/qcustomplot.h	/^  int valueSize() const { return mValueSize; }$/;"	f	class:QCPColorMapData
verticalLayout	build/ImageProcProject_autogen/include/ui_widget_container_group.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_WidgetContainerGroup
verticalLayout	build/ImageProcProject_autogen/include/ui_widget_sinus_source.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_WidgetSinusSource
verticalLayout_2	build/ImageProcProject_autogen/include/ui_widget_process_controller.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_WidgetProcessController
verticalSpacer	build/ImageProcProject_autogen/include/ui_widget_container_group.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_WidgetContainerGroup
videoParam	stream_video_rtsp.cpp	/^GstCaps* VideoStreamRTSP::videoParam;$/;"	m	class:VideoStreamRTSP	file:
videoParam	stream_video_rtsp.h	/^  static GstCaps *videoParam;$/;"	m	class:VideoStreamRTSP
viewport	gui_sources/qcustomplot.h	/^  QRect viewport() const { return mViewport; }$/;"	f	class:QCustomPlot
viewportRect	gui_sources/qcustomplot.h	/^  QRect axisRect, viewportRect;$/;"	m	class:QCPAxisPainterPrivate
visible	gui_sources/qcustomplot.h	/^  bool visible() const { return mVisible; }$/;"	f	class:QCPLayer
visible	gui_sources/qcustomplot.h	/^  bool visible() const { return mVisible; }$/;"	f	class:QCPLayerable
volatile	CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
volatile	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
weights_lr	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW float weights_lr;$/;"	m	struct:cv::tracking::TrackerCSRT::Params
wheelEvent	gui_sources/qcustomplot.cpp	/^void QCPAxis::wheelEvent(QWheelEvent *event)$/;"	f	class:QCPAxis
wheelEvent	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::wheelEvent(QWheelEvent *event)$/;"	f	class:QCPAxisRect
wheelEvent	gui_sources/qcustomplot.cpp	/^void QCPColorScale::wheelEvent(QWheelEvent *event)$/;"	f	class:QCPColorScale
wheelEvent	gui_sources/qcustomplot.cpp	/^void QCPLayerable::wheelEvent(QWheelEvent *event)$/;"	f	class:QCPLayerable
wheelEvent	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisAngular::wheelEvent(QWheelEvent *event)$/;"	f	class:QCPPolarAxisAngular
wheelEvent	gui_sources/qcustomplot.cpp	/^void QCPPolarAxisRadial::wheelEvent(QWheelEvent *event)$/;"	f	class:QCPPolarAxisRadial
wheelEvent	gui_sources/qcustomplot.cpp	/^void QCustomPlot::wheelEvent(QWheelEvent *event)$/;"	f	class:QCustomPlot
whiskerAntialiased	gui_sources/qcustomplot.h	/^  bool whiskerAntialiased() const { return mWhiskerAntialiased; }$/;"	f	class:QCPStatisticalBox
whiskerBarPen	gui_sources/qcustomplot.h	/^  QPen whiskerBarPen() const { return mWhiskerBarPen; }$/;"	f	class:QCPStatisticalBox
whiskerPen	gui_sources/qcustomplot.h	/^  QPen whiskerPen() const { return mWhiskerPen; }$/;"	f	class:QCPStatisticalBox
whiskerWidth	gui_sources/qcustomplot.h	/^  double whiskerWidth() const { return mWhiskerWidth; }$/;"	f	class:QCPErrorBars
whiskerWidth	gui_sources/qcustomplot.h	/^  double whiskerWidth() const { return mWhiskerWidth; }$/;"	f	class:QCPStatisticalBox
widget_output_image_display_H	gui_sources/widget_output_image_display.h	2;"	d
width	gui_sources/qcustomplot.h	/^  double width() const { return mWidth; }$/;"	f	class:QCPBars
width	gui_sources/qcustomplot.h	/^  double width() const { return mWidth; }$/;"	f	class:QCPFinancial
width	gui_sources/qcustomplot.h	/^  double width() const { return mWidth; }$/;"	f	class:QCPLineEnding
width	gui_sources/qcustomplot.h	/^  double width() const { return mWidth; }$/;"	f	class:QCPStatisticalBox
width	gui_sources/qcustomplot.h	/^  int width() const { return mRect.width(); }$/;"	f	class:QCPAxisRect
width	gui_sources/qcustomplot.h	/^  int width() const { return mRect.width(); }$/;"	f	class:QCPPolarAxisAngular
widthType	gui_sources/qcustomplot.h	/^  WidthType widthType() const { return mWidthType; }$/;"	f	class:QCPBars
widthType	gui_sources/qcustomplot.h	/^  WidthType widthType() const { return mWidthType; }$/;"	f	class:QCPFinancial
window_function	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW std::string window_function; \/\/!<  Window function: "hann", "cheb", "kaiser"$/;"	m	struct:cv::tracking::TrackerCSRT::Params
window_size	UTILITES/thread_operation_nodes.h	/^	int window_size = 10;$/;"	m	class:CoordAvarageGlidingNode
window_size	UTILITES/thread_operation_nodes.h	/^	int window_size = 10;$/;"	m	class:CoordAvaragePeriodicNode
wrap	gui_sources/qcustomplot.h	/^  int wrap() const { return mWrap; }$/;"	f	class:QCPLayoutGrid
wrap_kernel	CV_IMAGE_PROCESSING/TRACKER_ROBUST/tracking.hpp	/^        CV_PROP_RW bool wrap_kernel;             \/\/!<  wrap around the kernel values$/;"	m	struct:cv::tracking::TrackerKCF::Params
writeFrame	stream_video_rtsp.cpp	/^void VideoStreamRTSP::writeFrame(cv::Mat& frame)$/;"	f	class:VideoStreamRTSP
wtAbsolute	gui_sources/qcustomplot.h	/^  enum WidthType { wtAbsolute       \/\/\/< Bar width is in absolute pixels$/;"	e	enum:QCPBars::WidthType
wtAbsolute	gui_sources/qcustomplot.h	/^  enum WidthType { wtAbsolute       \/\/\/< width is in absolute pixels$/;"	e	enum:QCPFinancial::WidthType
wtAxisRectRatio	gui_sources/qcustomplot.h	/^                   ,wtAxisRectRatio \/\/\/< Bar width is given by a fraction of the axis rect size$/;"	e	enum:QCPBars::WidthType
wtAxisRectRatio	gui_sources/qcustomplot.h	/^                   ,wtAxisRectRatio \/\/\/< width is given by a fraction of the axis rect size$/;"	e	enum:QCPFinancial::WidthType
wtPlotCoords	gui_sources/qcustomplot.h	/^                   ,wtPlotCoords    \/\/\/< Bar width is in key coordinates and thus scales with the key axis range$/;"	e	enum:QCPBars::WidthType
wtPlotCoords	gui_sources/qcustomplot.h	/^                   ,wtPlotCoords    \/\/\/< width is in key coordinates and thus scales with the key axis range$/;"	e	enum:QCPFinancial::WidthType
x	gui_sources/qcustomplot.h	/^  double x() const { return mX; }$/;"	f	class:QCPVector2D
xAxis	gui_sources/qcustomplot.h	/^  QCPAxis *xAxis, *yAxis, *xAxis2, *yAxis2;$/;"	m	class:QCustomPlot
xAxis2	gui_sources/qcustomplot.h	/^  QCPAxis *xAxis, *yAxis, *xAxis2, *yAxis2;$/;"	m	class:QCustomPlot
x_axis	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^enum RotateAxis {x_axis = 0, y_axis = 1, z_axis = 2};$/;"	e	enum:RotateAxis
x_cos	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor x_cos;$/;"	m	class:RotateOperationContainer
x_rotate_matrix_empty	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor x_rotate_matrix_empty;$/;"	m	class:RotateOperationContainer
x_sin	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor x_sin;$/;"	m	class:RotateOperationContainer
xsputn	ROTATE_OPTIMIZATION/RotationContainerLib/DebugStream.h	/^	virtual std::streamsize xsputn(const char *p, std::streamsize n)$/;"	f	class:QDebugStream
y	gui_sources/qcustomplot.h	/^  double y() const { return mY; }$/;"	f	class:QCPVector2D
yAxis	gui_sources/qcustomplot.h	/^  QCPAxis *xAxis, *yAxis, *xAxis2, *yAxis2;$/;"	m	class:QCustomPlot
yAxis2	gui_sources/qcustomplot.h	/^  QCPAxis *xAxis, *yAxis, *xAxis2, *yAxis2;$/;"	m	class:QCustomPlot
y_axis	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^enum RotateAxis {x_axis = 0, y_axis = 1, z_axis = 2};$/;"	e	enum:RotateAxis
y_cos	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor y_cos;$/;"	m	class:RotateOperationContainer
y_rotate_matrix_empty	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor y_rotate_matrix_empty;$/;"	m	class:RotateOperationContainer
y_sin	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor y_sin;$/;"	m	class:RotateOperationContainer
z_axis	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^enum RotateAxis {x_axis = 0, y_axis = 1, z_axis = 2};$/;"	e	enum:RotateAxis
z_cos	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor z_cos;$/;"	m	class:RotateOperationContainer
z_rotate_matrix_empty	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor z_rotate_matrix_empty;$/;"	m	class:RotateOperationContainer
z_sin	ROTATE_OPTIMIZATION/RotationContainerLib/RotateOperationContainer.h	/^	torch::Tensor z_sin;$/;"	m	class:RotateOperationContainer
zeroLinePen	gui_sources/qcustomplot.h	/^  QPen zeroLinePen() const { return mZeroLinePen; }$/;"	f	class:QCPGrid
zoom	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::zoom(const QRectF &pixelRect)$/;"	f	class:QCPAxisRect
zoom	gui_sources/qcustomplot.cpp	/^void QCPAxisRect::zoom(const QRectF &pixelRect, const QList<QCPAxis*> &affectedAxes)$/;"	f	class:QCPAxisRect
~AimImageImitatorClass	AIM_IMAGE_IMITATION/imitator_image_aim.cpp	/^AimImageImitatorClass::~AimImageImitatorClass()$/;"	f	class:AimImageImitatorClass
~AimingClass	AIMING_MODULES/aiming_class.cpp	/^AimingClass::~AimingClass() $/;"	f	class:AimingClass
~CANConnectionEngine	TRANSMISSION/TRANSMISSION_MODULES/engine_can_interface.cpp	/^CANConnectionEngine::~CANConnectionEngine() $/;"	f	class:CANConnectionEngine
~CameraImageStorage	CAMERA_INTERFACE/interface_camera_hik.h	/^            ~CameraImageStorage() {DeinitStorage(); };$/;"	f	class:CameraInterfaceHIK::CameraImageStorage
~CameraInterfaceAravis	CAMERA_INTERFACE/camera_interface_class.cpp	/^CameraInterfaceAravis::~CameraInterfaceAravis()$/;"	f	class:CameraInterfaceAravis
~CameraInterfaceHIK	CAMERA_INTERFACE/interface_camera_hik.cpp	/^CameraInterfaceHIK::~CameraInterfaceHIK()$/;"	f	class:CameraInterfaceHIK
~ContoursProcessorClass	CV_IMAGE_PROCESSING/contour_processing.h	/^    ~ContoursProcessorClass() {};$/;"	f	class:ContoursProcessorClass
~DeviceFocusRangerInterface	DEVICES/device_focus_ranger_interface.h	/^        	~DeviceFocusRangerInterface(){};$/;"	f	class:DeviceFocusRangerInterface
~DeviceGenericInterface	DEVICES/device_generic_interface.h	/^	~DeviceGenericInterface() {};$/;"	f	class:DeviceGenericInterface
~DeviceLaserInterface	DEVICES/device_laser_interface.h	/^DeviceLaserInterface<T_CONNECTION,T_COMMAND,T_MESSAGE>::~DeviceLaserInterface() { qDebug() << TAG_NAME << "DELETE"; }$/;"	f	class:DeviceLaserInterface
~DeviceRotaryInterface	DEVICES/device_rotary_interface.h	/^	~DeviceRotaryInterface() { qDebug() << TAG_NAME << "DELETE"; }$/;"	f	class:DeviceRotaryInterface
~GraphPointsLineInterface	gui_sources/GRAPHICS_WINDOW_GRAPH/linegraph.cpp	/^GraphPointsLineInterface::~GraphPointsLineInterface()$/;"	f	class:GraphPointsLineInterface
~ImageTemplateFinder	CV_IMAGE_PROCESSING/image_finder.cpp	/^ImageTemplateFinder::~ImageTemplateFinder()$/;"	f	class:ImageTemplateFinder
~ImageTrackerCentroid	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^ImageTrackerCentroid::~ImageTrackerCentroid()$/;"	f	class:ImageTrackerCentroid
~ImageTrackerCentroidGPU	CV_IMAGE_PROCESSING/tracker_centroid.cpp	/^ImageTrackerCentroidGPU::~ImageTrackerCentroidGPU()$/;"	f	class:ImageTrackerCentroidGPU
~ImageTrackerTemplate	CV_IMAGE_PROCESSING/tracker_template.h	/^    ~ImageTrackerTemplate() {};$/;"	f	class:ImageTrackerTemplate
~LabelImage	gui_sources/labelimage.cpp	/^LabelImage::~LabelImage()$/;"	f	class:LabelImage
~ModuleImageProcessing	CV_IMAGE_PROCESSING/image_processing_node.h	/^~ModuleImageProcessing() { } $/;"	f	class:ModuleImageProcessing
~NeuralTracker	CV_IMAGE_PROCESSING/tracker_neural.h	/^    ~NeuralTracker() {};$/;"	f	class:NeuralTracker
~PIDClass	AIMING_MODULES/pid_class.cpp	/^PIDClass::~PIDClass() { }$/;"	f	class:PIDClass
~PlotGraphicsInterface	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.cpp	/^PlotGraphicsInterface::~PlotGraphicsInterface()$/;"	f	class:PlotGraphicsInterface
~ProcessControllerClass	controller_process_class.cpp	/^ProcessControllerClass::~ProcessControllerClass()$/;"	f	class:ProcessControllerClass
~QCPAbstractItem	gui_sources/qcustomplot.cpp	/^QCPAbstractItem::~QCPAbstractItem()$/;"	f	class:QCPAbstractItem
~QCPAbstractPaintBuffer	gui_sources/qcustomplot.cpp	/^QCPAbstractPaintBuffer::~QCPAbstractPaintBuffer()$/;"	f	class:QCPAbstractPaintBuffer
~QCPAbstractPlottable	gui_sources/qcustomplot.cpp	/^QCPAbstractPlottable::~QCPAbstractPlottable()$/;"	f	class:QCPAbstractPlottable
~QCPAbstractPlottable1D	gui_sources/qcustomplot.h	/^QCPAbstractPlottable1D<DataType>::~QCPAbstractPlottable1D()$/;"	f	class:QCPAbstractPlottable1D
~QCPAxis	gui_sources/qcustomplot.cpp	/^QCPAxis::~QCPAxis()$/;"	f	class:QCPAxis
~QCPAxisPainterPrivate	gui_sources/qcustomplot.cpp	/^QCPAxisPainterPrivate::~QCPAxisPainterPrivate()$/;"	f	class:QCPAxisPainterPrivate
~QCPAxisRect	gui_sources/qcustomplot.cpp	/^QCPAxisRect::~QCPAxisRect()$/;"	f	class:QCPAxisRect
~QCPAxisTicker	gui_sources/qcustomplot.cpp	/^QCPAxisTicker::~QCPAxisTicker()$/;"	f	class:QCPAxisTicker
~QCPBars	gui_sources/qcustomplot.cpp	/^QCPBars::~QCPBars()$/;"	f	class:QCPBars
~QCPBarsGroup	gui_sources/qcustomplot.cpp	/^QCPBarsGroup::~QCPBarsGroup()$/;"	f	class:QCPBarsGroup
~QCPColorMap	gui_sources/qcustomplot.cpp	/^QCPColorMap::~QCPColorMap()$/;"	f	class:QCPColorMap
~QCPColorMapData	gui_sources/qcustomplot.cpp	/^QCPColorMapData::~QCPColorMapData()$/;"	f	class:QCPColorMapData
~QCPColorScale	gui_sources/qcustomplot.cpp	/^QCPColorScale::~QCPColorScale()$/;"	f	class:QCPColorScale
~QCPCurve	gui_sources/qcustomplot.cpp	/^QCPCurve::~QCPCurve()$/;"	f	class:QCPCurve
~QCPErrorBars	gui_sources/qcustomplot.cpp	/^QCPErrorBars::~QCPErrorBars()$/;"	f	class:QCPErrorBars
~QCPFinancial	gui_sources/qcustomplot.cpp	/^QCPFinancial::~QCPFinancial()$/;"	f	class:QCPFinancial
~QCPGraph	gui_sources/qcustomplot.cpp	/^QCPGraph::~QCPGraph()$/;"	f	class:QCPGraph
~QCPItemAnchor	gui_sources/qcustomplot.cpp	/^QCPItemAnchor::~QCPItemAnchor()$/;"	f	class:QCPItemAnchor
~QCPItemBracket	gui_sources/qcustomplot.cpp	/^QCPItemBracket::~QCPItemBracket()$/;"	f	class:QCPItemBracket
~QCPItemCurve	gui_sources/qcustomplot.cpp	/^QCPItemCurve::~QCPItemCurve()$/;"	f	class:QCPItemCurve
~QCPItemEllipse	gui_sources/qcustomplot.cpp	/^QCPItemEllipse::~QCPItemEllipse()$/;"	f	class:QCPItemEllipse
~QCPItemLine	gui_sources/qcustomplot.cpp	/^QCPItemLine::~QCPItemLine()$/;"	f	class:QCPItemLine
~QCPItemPixmap	gui_sources/qcustomplot.cpp	/^QCPItemPixmap::~QCPItemPixmap()$/;"	f	class:QCPItemPixmap
~QCPItemPosition	gui_sources/qcustomplot.cpp	/^QCPItemPosition::~QCPItemPosition()$/;"	f	class:QCPItemPosition
~QCPItemRect	gui_sources/qcustomplot.cpp	/^QCPItemRect::~QCPItemRect()$/;"	f	class:QCPItemRect
~QCPItemStraightLine	gui_sources/qcustomplot.cpp	/^QCPItemStraightLine::~QCPItemStraightLine()$/;"	f	class:QCPItemStraightLine
~QCPItemText	gui_sources/qcustomplot.cpp	/^QCPItemText::~QCPItemText()$/;"	f	class:QCPItemText
~QCPItemTracer	gui_sources/qcustomplot.cpp	/^QCPItemTracer::~QCPItemTracer()$/;"	f	class:QCPItemTracer
~QCPLabelPainterPrivate	gui_sources/qcustomplot.cpp	/^QCPLabelPainterPrivate::~QCPLabelPainterPrivate()$/;"	f	class:QCPLabelPainterPrivate
~QCPLayer	gui_sources/qcustomplot.cpp	/^QCPLayer::~QCPLayer()$/;"	f	class:QCPLayer
~QCPLayerable	gui_sources/qcustomplot.cpp	/^QCPLayerable::~QCPLayerable()$/;"	f	class:QCPLayerable
~QCPLayoutElement	gui_sources/qcustomplot.cpp	/^QCPLayoutElement::~QCPLayoutElement()$/;"	f	class:QCPLayoutElement
~QCPLayoutGrid	gui_sources/qcustomplot.cpp	/^QCPLayoutGrid::~QCPLayoutGrid()$/;"	f	class:QCPLayoutGrid
~QCPLayoutInset	gui_sources/qcustomplot.cpp	/^QCPLayoutInset::~QCPLayoutInset()$/;"	f	class:QCPLayoutInset
~QCPLegend	gui_sources/qcustomplot.cpp	/^QCPLegend::~QCPLegend()$/;"	f	class:QCPLegend
~QCPMarginGroup	gui_sources/qcustomplot.cpp	/^QCPMarginGroup::~QCPMarginGroup()$/;"	f	class:QCPMarginGroup
~QCPPaintBufferGlFbo	gui_sources/qcustomplot.cpp	/^QCPPaintBufferGlFbo::~QCPPaintBufferGlFbo()$/;"	f	class:QCPPaintBufferGlFbo
~QCPPaintBufferGlPbuffer	gui_sources/qcustomplot.cpp	/^QCPPaintBufferGlPbuffer::~QCPPaintBufferGlPbuffer()$/;"	f	class:QCPPaintBufferGlPbuffer
~QCPPaintBufferPixmap	gui_sources/qcustomplot.cpp	/^QCPPaintBufferPixmap::~QCPPaintBufferPixmap()$/;"	f	class:QCPPaintBufferPixmap
~QCPPolarAxisAngular	gui_sources/qcustomplot.cpp	/^QCPPolarAxisAngular::~QCPPolarAxisAngular()$/;"	f	class:QCPPolarAxisAngular
~QCPPolarAxisRadial	gui_sources/qcustomplot.cpp	/^QCPPolarAxisRadial::~QCPPolarAxisRadial()$/;"	f	class:QCPPolarAxisRadial
~QCPPolarGraph	gui_sources/qcustomplot.cpp	/^QCPPolarGraph::~QCPPolarGraph()$/;"	f	class:QCPPolarGraph
~QCPSelectionDecorator	gui_sources/qcustomplot.cpp	/^QCPSelectionDecorator::~QCPSelectionDecorator()$/;"	f	class:QCPSelectionDecorator
~QCPSelectionDecoratorBracket	gui_sources/qcustomplot.cpp	/^QCPSelectionDecoratorBracket::~QCPSelectionDecoratorBracket()$/;"	f	class:QCPSelectionDecoratorBracket
~QCPSelectionRect	gui_sources/qcustomplot.cpp	/^QCPSelectionRect::~QCPSelectionRect()$/;"	f	class:QCPSelectionRect
~QCustomPlot	gui_sources/qcustomplot.cpp	/^QCustomPlot::~QCustomPlot()$/;"	f	class:QCustomPlot
~QDebugStream	ROTATE_OPTIMIZATION/RotationContainerLib/DebugStream.h	/^	~QDebugStream()$/;"	f	class:QDebugStream
~RingBufferGeneric	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_generic.h	/^RingBufferGeneric<H,M_S,M_N,I_T>::~RingBufferGeneric() { delete DATA; }$/;"	f	class:RingBufferGeneric
~SinusGeneratorClass	AIM_IMAGE_IMITATION/sinus_generator_class.cpp	/^SinusGeneratorClass::~SinusGeneratorClass()$/;"	f	class:SinusGeneratorClass
~TCPConnectionEngine	TRANSMISSION/TRANSMISSION_MODULES/engine_tcp_interface.cpp	/^TCPConnectionEngine::~TCPConnectionEngine() $/;"	f	class:TCPConnectionEngine
~TrackerFirst	CV_IMAGE_PROCESSING/TRACKER_ROBUST/Tracker.cpp	/^TrackerFirst::~TrackerFirst()$/;"	f	class:TrackerFirst
~UDPEngineInterface	TRANSMISSION/TRANSMISSION_MODULES/engine_udp_interface.cpp	/^UDPEngineInterface::~UDPEngineInterface()$/;"	f	class:UDPEngineInterface
~WidgetAimingControl	gui_sources/widget_aiming_control.cpp	/^WidgetAimingControl::~WidgetAimingControl()$/;"	f	class:WidgetAimingControl
~WidgetGraphisPlot	gui_sources/GRAPHICS_WINDOW/widget_graphics_plot.cpp	/^WidgetGraphisPlot::~WidgetGraphisPlot()$/;"	f	class:WidgetGraphisPlot
~WidgetLineGraph	gui_sources/GRAPHICS_WINDOW_GRAPH/widget_line_graph.cpp	/^WidgetLineGraph::~WidgetLineGraph()$/;"	f	class:WidgetLineGraph
~WidgetMainWindow	gui_sources/widget_main_window.cpp	/^WidgetMainWindow::~WidgetMainWindow() $/;"	f	class:WidgetMainWindow
~WidgetOutputImageDisplay	gui_sources/widget_output_image_display.cpp	/^WidgetOutputImageDisplay::~WidgetOutputImageDisplay()$/;"	f	class:WidgetOutputImageDisplay
~WidgetOutputTextDisplay	gui_sources/widget_output_text_display.cpp	/^WidgetOutputTextDisplay::~WidgetOutputTextDisplay()$/;"	f	class:WidgetOutputTextDisplay
~WidgetSceneNodeInterface	gui_sources/widget_scene_node_interface.cpp	/^WidgetSceneNodeInterface::~WidgetSceneNodeInterface()$/;"	f	class:WidgetSceneNodeInterface
~WidgetSinusSource	AIM_IMAGE_IMITATION/widget_sinus_source.cpp	/^WidgetSinusSource::~WidgetSinusSource()$/;"	f	class:WidgetSinusSource
~engine_ring_buffer_dense	TRANSMISSION/EMBEDED_RING_BUFFER/engine_ring_buffer_dense.h	/^engine_ring_buffer_dense<H,S_M,N_M>::~engine_ring_buffer_dense() { delete DATA; }$/;"	f	class:engine_ring_buffer_dense
~initializer	build/ImageProcProject_autogen/TGLKY5MCHO/qrc_pictures.cpp	/^       ~initializer() { QT_RCC_MANGLE_NAMESPACE(qCleanupResources_pictures)(); }$/;"	f	struct:__anon4::initializer
